#Character interactions relating to schemes
cheat_modifier = {
	category = interaction_category_friendly
	interface_priority = 6000
	is_shown = {
		scope:actor = {
		is_ai = no
		}
	}
	auto_accept = yes
	is_valid_showing_failures_only = {
		scope:actor = {
		is_ai = no
		}
	}
	on_accept = {
		if = {
			limit = {
				scope:recipient = {
					NOT = {
						has_character_modifier = hero_modifier
					}
				}
			}
			scope:recipient = {
				add_character_modifier = {
						modifier = hero_modifier
					}
			}	
		}
		if = {
			limit = {
				scope:recipient = {
					has_character_modifier = hero_modifier
				}
			}
			scope:recipient = {
				remove_character_modifier = hero_modifier
			}	
		}
	} 
}

seduce_interaction = {
	category = interaction_category_friendly
	interface_priority = 90
	scheme = seduce

	send_name = START_SCHEME
	ignores_pending_interaction_block = yes
	
	ai_targets = {
		ai_recipients = family
		max = 2
	}
	ai_targets = {
		ai_recipients = guests
		ai_recipients = courtiers
	}
	
	# We don't want this to grow ludicrously large in big realms
	ai_targets = {
		ai_recipients = realm_characters
		max = 10
	}
	
	ai_target_quick_trigger = {
		adult = yes
		attracted_to_owner = yes
		owner_attracted = yes
	}
	ai_frequency = 12

	is_shown = {
		NOT = { scope:actor = scope:recipient }
		scope:recipient = { is_adult = yes }
		scope:actor = { is_adult = yes }

		# Avoid seducing lowborn nobodies in foreign courts
		trigger_if = {
			limit = {
				scope:actor = { is_ai = yes }
			}
			NOT = {
				scope:recipient = {
					is_lowborn = yes
					is_landed = no
					NOR = {
						is_courtier_of = scope:actor
						is_foreign_court_or_pool_guest_of = scope:actor
					}
				}
			}
		}
	}

	is_valid_showing_failures_only = {
		scope:actor = {
			NOT = { is_at_war_with = scope:recipient }
			can_start_scheme = {
				type = seduce
				target = scope:recipient
			}
		}
		trigger_if = {
			limit = {
				scope:recipient = { exists = primary_spouse }
			}
			scope:recipient = { primary_spouse = { NOT = { has_strong_hook = scope:actor } } }
		}
	}

	desc = scheme_interaction_tt_seduce_approved

	on_accept = {
		seduce_interaction_stress_effect = yes

		hidden_effect = {
			scope:actor = {
				send_interface_toast = {
					title = seduce_interaction_notification

					left_icon = scope:actor					
					right_icon = scope:recipient

					start_scheme = {
						type = seduce
						target = scope:recipient
					}

					show_as_tooltip = { seduce_interaction_stress_effect = yes }
				}
			}
		}
		scope:actor = {
			if = {
				limit = {
					NOT = { is_attracted_to_gender_of = scope:recipient }
				}
				custom_tooltip = scheme_interaction_tt_wrong_gender_no_lover
			}
		}
	}
	
	ai_potential = {
		is_adult = yes
		NOR = {
			has_trait = celibate
			has_trait = chaste
			any_scheme = {
				OR = {
					scheme_type = befriend
					scheme_type = sway
					scheme_type = seduce
					scheme_type = courting
					scheme_type = elope
				}
			}
			primary_title = {
				is_mercenary_company = yes
			}
			AND = { # No one cares about City barons
				is_lowborn = yes
				primary_title.tier <= tier_barony
			}
		}
		might_cheat_on_every_partner_trigger = yes
	}
	
	auto_accept = yes
	
	ai_will_do = {
		base = 5

		modifier = {
			add = -50
			scope:actor = {
				exists = primary_spouse
				primary_spouse = { has_strong_hook = scope:actor }
			}
		}
		
		modifier = {
			add = 50
			scope:actor = {
				has_focus = intrigue_temptation_focus
			}
		}
		
		modifier = {
			add = 25
			exists = scope:actor.dynasty
			scope:actor.dynasty = {
				has_dynasty_perk = fp1_adventure_legacy_2
			}
		}
		
		modifier = { # Focus on befriending if that's the path you've chosen
			add = -50
			scope:actor = {
				has_perk = befriend_perk
			}
		}
		
		modifier = { # Non-lustful clergy tend to not seduce
			add = -25
			scope:actor = {
				is_clergy = yes
				faith = {
					NOT = { has_doctrine_parameter = clergy_can_marry }
				}
				NOR = {
					has_trait = lustful
					has_focus = intrigue_temptation_focus
				}
			}
		}
		
		modifier = { # Seducing your unmarried courtiers is good for producing bastards, which the AI will want to do if they have few heirs
			add = 10
			scope:actor = {
				any_child = {
					count <= 1
				}
			}
			scope:recipient = {
				is_married = no
				fertility > low_fertility
				OR = {
					is_courtier_of = scope:actor
					is_pool_guest_of = scope:actor
				}
			}
		}
		
		modifier = {
			add = 30
			scope:actor = {
				has_trait = lustful
			}
		}

		modifier = { # ( ͡° ͜ʖ ͡°)
			add = 50
			scope:actor = {
				is_close_or_extended_family_of = scope:recipient
				is_deviant_trigger = yes
			}
			scope:recipient = {
				OR = {
					is_deviant_trigger = yes
					has_trait = lustful
				}
			}
		}
		
		modifier = {
			add = 25
			scope:actor = {
				is_close_or_extended_family_of = scope:recipient
				is_deviant_trigger = yes
			}
			scope:recipient = {
				NOR = {
					is_deviant_trigger = yes
					has_trait = lustful
				}
			}
		}
		
		modifier = {
			add = 50
			scope:actor = {
				is_close_or_extended_family_of = scope:recipient
				faith = { has_doctrine = tenet_divine_marriage }
			}
		}
		
		modifier = { # Seducing the spouse of your rival is good drama...
			add = 25
			scope:recipient = {
				exists = primary_spouse
				primary_spouse = {
					OR = {
						has_relation_rival = scope:actor
						has_relation_nemesis = scope:actor
					}
				}
			}
		}
		
		modifier = {
			add = -20
			scope:actor = {
				NOR = {
					has_trait = lustful
					has_trait = arbitrary
					is_deviant_trigger = yes
					faith = { has_doctrine = tenet_divine_marriage }
					has_perk = subtle_desire_perk
				}
			}
			scope:recipient = {
				is_close_family_of = scope:actor
			}
		}
		
		modifier = { # Seducing someone's spouse is not a clever prospect for most characters, so lowering the attractiveness a bit
			add = -20
			scope:recipient = {
				is_married = yes
				NOT = {
					primary_spouse = scope:actor
				}
			}
			scope:actor = {
				NOR = {
					has_trait = lustful
					has_focus = intrigue_temptation_focus
				}
			}
		}
		
		modifier = { # Try to avoid agressive seduction unless you're geared for it
			add = -10
			scope:actor = {
				NOR = {
					has_trait = lustful
					has_focus = intrigue_temptation_focus
				}
			}
			scope:recipient = {
				is_lowborn = no
				NOT = { is_pool_guest_of = scope:actor }
			}
		}

		modifier = {
			factor = 1.25
			scope:recipient = {
				number_of_personality_traits_in_common = {
					target = scope:actor
					value >= 1
				}
			}
		}

		modifier = {
			factor = 1.5
			scope:recipient = {
				number_of_personality_traits_in_common = {
					target = scope:actor
					value >= 2
				}
			}
		}

		modifier = {
			factor = 2
			scope:recipient = {
				number_of_personality_traits_in_common = {
					target = scope:actor
					value >= 3
				}
			}
		}

		modifier = {
			factor = 1.5
			scope:recipient = {
				is_landed = yes
			}
		}

		modifier = { # Target the player less aggressively
			factor = 0.5
			scope:recipient = {
				OR = {
					is_ai = no
					any_consort = {
						is_ai = no
					}
				}
			}
		}

		modifier = {
			factor = 1.25
			scope:recipient = {
				OR = {
					has_trait = lustful
					has_trait = beauty_good
				}
			}
		}
		
		modifier = { # Try to avoid 0% success chance
			factor = {
				value = 0.1
				if = {
					limit = {
						scope:recipient = {
							opinion = {
								target = scope:actor
								value < -15
							}
						}
					}
					value = 0
				}
			}
			scope:recipient = {
				opinion = {
					target = scope:actor
					value < -5
				}
			}
		}

		modifier = { # Try to avoid 0% success chance
			factor = 0.1
			scope:recipient = {
				number_of_opposing_personality_traits = {
					target = scope:actor
					value >= 1
				}
			}
		}

		modifier = {
			factor = 0.75
			scope:recipient = {
				is_lowborn = yes
			}
		}
		
		modifier = { # Barons tend to not seduce anyone landed above them
			factor = 0.1
			scope:actor = {
				is_landed = yes
				primary_title = {
					tier = tier_barony
				}
			}
			scope:recipient = {
				OR = {
					AND = {
						is_landed = yes
						primary_title = {
							tier > tier_barony
						}
					}
					any_spouse = {
						is_landed = yes
						primary_title = {
							tier > tier_barony
						}
					}
				}
			}
		}
		
		modifier = {
			factor = 0.2
			scope:recipient = {
				is_ai = yes
				any_targeting_scheme = {
					scheme_type = seduce
				}
			}
		}
		
		modifier = { #
			factor = 0.1
			scope:recipient = {
				is_ai = yes
				has_trait = chaste
			}
		}

		modifier = {
			factor = 0
			scope:recipient = {
				is_ai = yes
				num_of_relation_soulmate > 0
			}
		}
	}
}

court_interaction = {
	category = interaction_category_friendly

	send_name = START_SCHEME

	interface_priority = 90
	scheme = courting
	ignores_pending_interaction_block = yes

	ai_targets = {
		ai_recipients = family
		max = 5
	}
	
	ai_targets = {
		ai_recipients = realm_characters
		max = 30
	}
	
	ai_target_quick_trigger = {
		adult = yes
		attracted_to_owner = yes
		owner_attracted = yes
	}
	ai_frequency = 36

	is_shown = {
		NOT = { scope:actor = scope:recipient }
		scope:recipient = { is_adult = yes }
		scope:actor = { is_adult = yes }
		scope:actor = { is_attracted_to_gender_of = scope:recipient }
		scope:recipient = { is_attracted_to_gender_of = scope:actor }
	}

	is_valid_showing_failures_only = {
		scope:actor = {
			NOT = { is_at_war_with = scope:recipient }
			can_start_scheme = {
				type = courting
				target = scope:recipient
			}
		}
	}

	desc = scheme_interaction_tt_courtship_approved

	on_accept = {
		scope:actor = {
			# If you already have a soulmate, they get very mad
			every_relation = {
				type = soulmate
				limit = { soulmate_relation_is_exclusive_trigger = yes }

				add_opinion = {
					modifier = betrayed_our_promise
					target = scope:actor
				}
			}
		}
		hidden_effect = {
			scope:actor = {
				send_interface_toast = {
					title = court_interaction_notification

					left_icon = scope:actor					
					right_icon = scope:recipient

					start_scheme = {
						type = courting
						target = scope:recipient
					}

					show_as_tooltip = {
						# If you already have a soulmate, they get very mad
						every_relation = {
							type = soulmate
							limit = { soulmate_relation_is_exclusive_trigger = yes }

							add_opinion = {
								modifier = betrayed_our_promise
								target = scope:actor
							}
						}
					}
				}
			}
			scope:recipient = {
				if = {
					limit = {
						is_ai = no
					}
					add_character_flag = {
						flag = courting_cooldown
						years = 5
					}
				}
			}
		}
	}
	
	ai_potential = {
		is_adult = yes
		ai_honor >= high_positive_ai_value
		ai_compassion >= low_positive_ai_value
		highest_held_title_tier > tier_barony
		NOR = {
			has_trait = celibate
			has_trait = chaste
			any_scheme = {
				OR = {
					scheme_type = befriend
					scheme_type = sway
					scheme_type = seduce
					scheme_type = courting
					scheme_type = elope
				}
			}
			AND = { # No one cared about City barons
				is_lowborn = yes
				primary_title.tier <= tier_barony
			}
		}
	}
	
	auto_accept = yes
	
	ai_will_do = {
		base = 0

		opinion_modifier = {
			opinion_target = scope:recipient
			multiplier = 0.4
		}

		compatibility_modifier = {
			compatibility_target = scope:recipient
			multiplier = 0.3
			max = 30
		}

		modifier = {
			factor = 25
			has_focus = martial_chivalry_focus
		}

		modifier = {
			factor = 3
			scope:recipient = {
				OR = {
					is_landed = yes
					any_spouse = {
						is_landed = yes
					}
				}
			}
		}

		modifier = {
			factor = 1.25
			scope:recipient = {
				has_trait = beauty_good
			}
		}
		
		modifier = { # Try to avoid 0% success chance
			factor = {
				value = 0.1
				if = {
					limit = {
						scope:recipient = {
							opinion = {
								target = scope:actor
								value < -10
							}
						}
					}
					value = 0
				}
			}
			scope:recipient = {
				opinion = {
					target = scope:actor
					value < 0
				}
			}
		}
		
		modifier = {
			factor = 0.2
			scope:recipient = {
				is_ai = yes
				any_targeting_scheme = {
					scheme_type = courting
				}
			}
		}
		
		modifier = {
			factor = 0.1
			scope:recipient = {
				num_of_relation_soulmate > 0
			}
		}

		modifier = {
			factor = 0.1
			scope:recipient = {
				is_lowborn = yes
			}
		}
	}
}
