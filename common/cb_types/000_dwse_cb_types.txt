## normal scopes(including posttitle scopes) ##
# ROOT = receiver
# FROM = giver
# <no scope change> = attacker or receiver
## title scopes ##
# ROOT = receiver
# FROM = giver
# <no scope change> = thirdparty landed title	
#
# the following effects/triggers exists (example execution order: on_success->on_success_title->on_success_posttitle):
# is_valid, is_valid_title, on_add, on_add_title, on_add_posttitle, on_success, on_success_title, on_success_posttitle, on_fail, on_fail_title, on_fail_posttitle, on_reverse_demand, on_reverse_demand_title, on_reverse_demand_posttitle
#
# Added on_attacker_leader_death, on_defender_leader_death and on_thirdparty_death, which all trigger when corresponding character dies
# These three all have war scopes, which currently has the following scope changes: 
# attacker, defender, thirdparty(only valid if thirdparty character is involved), thirdparty_title(only valid if thirdparty title is involved)
#
# ai_will_do: modifies value AI places on the CB compared to other CBs (default: 1) Note: is in title scope
# can_use_gui: If otherwise valid, the CB is listed in the Diplo View, but you can't declare war unless 'can_use_gui' is also valid (also shows a trigger tooltip.)
#

dwse_slavery_cb = {
	name = dwse_CB_NAME_SLAVERY
	war_name = dwse_WAR_NAME_SLAVERY
	sprite = 7
	truce_days = 730
	is_permanent = yes
	can_ask_to_join_war = no
	allowed_to_target_tributaries = no
	allowed_to_target_suzerains = no
	
	can_use = {
		NOT = { vassal_of = FROM }
		ROOT = {
			has_character_modifier = dwse_war
			capital_scope = {
				OR = {
					has_building = dw_slave_dungeon_1 # Castle					
                    has_building = dw_slave_market_1 # Republic
                    has_building = dw_slave_wagon_1 # Nomad
					has_building = dw_slave_pen_1 # Tribal
				}
			}
		}
	}
	is_valid = {
		ROOT = {
			capital_scope = {
                OR = {
                    has_building = dw_slave_dungeon_1 # Castle
                    has_building = dw_slave_market_1 # Republic
					has_building = dw_slave_wagon_1 # Nomad
					has_building = dw_slave_pen_1 # Tribal
                }
			}
		}
	}
	
	on_success = {
		ROOT = {
			remove_character_modifier = dwse_war
		}
		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 250
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { 
				participation_scaled_prestige = 250
			}
		}
		FROM = { 
			prestige = -250
			add_rival = ROOT
			opinion = {
				modifier = opinion_humiliated_rival
				who = ROOT
				years = 5
			}
			random_realm_character = {
				limit = { 
					is_adult = yes
					is_landed = no
				}
				imprison = ROOT
				hidden_tooltip = {
					character_event = { id = DWSlavery.1 days = 1 } # Target notified
					add_character_modifier = { name = dw_slave_training duration = -1 } # Character slotted for slave training
				}
			}
			random_realm_character = {
				limit = { 
					is_adult = yes
					is_landed = no
				}
				imprison = ROOT
				hidden_tooltip = {
					character_event = { id = DWSlavery.1 days = 1 } # Target notified
					add_character_modifier = { name = dw_slave_training duration = -1 } # Character slotted for slave training
				}
			}
			random_realm_character = {
				limit = { 
					is_adult = yes
					is_landed = no
				}
				imprison = ROOT
				hidden_tooltip = {
					character_event = { id = DWSlavery.1 days = 1 } # Target notified
					add_character_modifier = { name = dw_slave_training duration = -1 } # Character slotted for slave training
				}
			}
			random_realm_character = {
				limit = { 
					is_adult = yes
					is_landed = no
				}
				imprison = ROOT
				hidden_tooltip = {
					character_event = { id = DWSlavery.1 days = 1 } # Target notified
					add_character_modifier = { name = dw_slave_training duration = -1 } # Character slotted for slave training
				}
			}
			random_realm_character = {
				limit = { 
					is_adult = yes
					is_landed = no
				}
				imprison = ROOT
				hidden_tooltip = {
					character_event = { id = DWSlavery.1 days = 1 } # Target notified
					add_character_modifier = { name = dw_slave_training duration = -1 } # Character slotted for slave training
				}
			}
			any_child = {
				limit = { 
					is_adult = yes
					is_landed = no
					is_female = yes
					is_married = no
				}
				imprison = ROOT
				hidden_tooltip = {
					character_event = { id = DWSlavery.1 days = 1 } # Target notified
					add_character_modifier = { name = dw_slave_training duration = -1 } # Character slotted for slave training
				}
			}
		}
	}
	on_fail = {
		ROOT = { 
			remove_character_modifier = dwse_war
			prestige = -125
		}
		FROM = {									
			prestige = 50
		}
	}

	on_reverse_demand = {
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 250
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { 
				participation_scaled_prestige = 250
			}
		}
		ROOT = {
			remove_character_modifier = dwse_war
			prestige = -250
			imprison = FROM
			add_rival = FROM
			opinion = {
				modifier = opinion_humiliated_rival
				who = FROM
				years = 5
			}
		}
		
		FROM = { 
			remove_opinion = {
				who = ROOT
				modifier = opinion_humiliated_rival
			}
			if = {
				limit = {
					ai = no
					ROOT = {
						any_sibling = {
							character = PREVPREV
						}
					}
				}
				set_character_flag = achievement_sibling_rival_war
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
}


invasion_korea = {
	name = CB_NAME_INVASION
	war_name = WAR_NAME_INVASION
	sprite = 7
	is_permanent = yes
	battle_warscore_mult = 0.5
	max_defender_occupation_score = 85
	check_de_jure_tier = KING # this scans all de jure kingdoms for the counties which are held by or vassals(or below) of selected character. Only valid if is_permanent = yes
	
	allowed_to_target_tributaries = no
	
	sort_priority = 3000000

	can_use = {
		ROOT = {
			mercenary = no
			trait = yiminhyee
		}
	}

	can_use_gui = {
		ROOT = {
			trait = yiminhyee
		}
	}
	
	can_use_title = {
		FROM = {
			any_realm_title = {
				de_jure_liege_or_above = PREVPREV
			}
			
			independent = yes # Don't declare Crusades on revolters - chances are high the war will invalidate
			
		}
	}
	
	is_valid_title = {
		FROM = {
			any_realm_province = {
				de_jure_liege_or_above = PREVPREV
			}
		}
	}

	on_add = {
		hidden_tooltip = { fire_haruspicy_event_effect = yes }
		if = {
			limit = { defender = { is_offmap_governor = offmap_china } }
			attacker = {  
				sound_effect = china_angered_emperor
				detract_grace_super_huge_effect = yes 
			}
		}
	}

	on_success = {
		ROOT = {
			show_scope_change = no
			prestige = 200
		}
		ROOT = {
			show_scope_change = no
			participation_scaled_prestige = 200
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
		}
		
		hidden_tooltip = {
			FROM = {
				any_vassal = {
					set_character_flag = preserve_vassal_structure_@ROOT
				}
			}
			ROOT = {
				occupy_minors_of_occupied_settlements = FROM
				gain_all_occupied_titles = FROM
				
				if = {
					limit = {
						has_nickname = no
					}
					random_list = {
						10 = { give_nickname = nick_the_great }
						10 = { give_nickname = nick_the_victorious }
						10 = { give_nickname = nick_the_bold }
						10 = { give_nickname = nick_the_conqueror }
					}
				}
				
				if = {
					limit = {
						has_nickname = nick_the_bastard
					}
					give_nickname = nick_the_conqueror
				}
				
				if = {
					limit = {
						has_dlc = "Legacy of Rome"
						OR = { 
							has_landed_title = e_byzantium
							has_landed_title = e_roman_empire
						}
						OR = { 
							religion_group = christian
							religion = hellenic_pagan
							religion = hellenic_pagan_reformed
						}
					}
					character_event = { id = LoR.30 days = 12 }
				}
			}
		}
		
		FROM = {
			show_scope_change = no
			prestige = -200
		}
	}

	on_success_title = {
		custom_tooltip = {
			text = invasion_succ_tip
			hidden_tooltip = {
				usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
				FROM = { set_defacto_liege = ROOT }
				if = {
					limit = {
						FROM = { is_liege_or_above = ROOT }
					}
					FROM = { imprison = ROOT }
				}
				if = {
					limit = {
						any_independent_ruler = {
							has_character_flag = preserve_vassal_structure_@ROOT
						}
					}
					any_independent_ruler = {
						limit = {
							has_character_flag = preserve_vassal_structure_@ROOT
						}
						set_defacto_liege = ROOT
					}
				}
				ROOT = {
					any_vassal = {
						clr_character_flag = preserve_vassal_structure_@ROOT
					}
				}
			}
		}
		
		if = {
			limit = {
				higher_tier_than = BARON
				NOT = { culture = ROOT }
			}
			hidden_tooltip = { conquest_culture = ROOT }
		}
		
		if = {
			limit = { ROOT = { character = 140 } }
			ROOT = {
				if = {
					limit = {
						has_dlc = "Holy Fury"
						NOT = {
							any_owned_bloodline = {
								has_bloodline_flag = william_the_conqueror_bloodline
							}
						}
					}
					create_bloodline = {
						type = william_the_conqueror
					}
				}
			}
			hidden_tooltip = {
				add_law = succ_primogeniture
				ROOT = {
					any_vassal = {
						limit = {
							culture = saxon
						}
						opinion = {
							modifier = opinion_subjugated 
							who = ROOT
						}
					}
					if = {
						limit = { # Help AI William by usurping extra land
							ai = yes
						}
						d_bedford = {
							usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
							any_de_jure_vassal_title = {
								limit = {
									holder_scope = {
										culture = saxon
										ai = yes # But not from players
										same_realm = ROOT
									}
								}
								usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
							}
						}
						d_canterbury = {
							usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
							any_de_jure_vassal_title = {
								limit = {
									holder_scope = {
										culture = saxon
										ai = yes # But not from players
										same_realm = ROOT
									}
								}
								usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
							}
						}
						d_cornwall = {
							usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
							any_de_jure_vassal_title = {
								limit = {
									holder_scope = {
										culture = saxon
										ai = yes # But not from players
										same_realm = ROOT
									}
								}
								usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
							}
						}
						d_somerset = {
							usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
							any_de_jure_vassal_title = {
								limit = {
									holder_scope = {
										culture = saxon
										ai = yes # But not from players
										same_realm = ROOT
									}
								}
								usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
							}
						}
						d_gloucester = {
							usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
							any_de_jure_vassal_title = {
								limit = {
									holder_scope = {
										culture = saxon
										ai = yes # But not from players
										same_realm = ROOT
									}
								}
								usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
							}
						}
						d_norfolk = {
							usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
							any_de_jure_vassal_title = {
								limit = {
									holder_scope = {
										culture = saxon
										ai = yes # But not from players
										same_realm = ROOT
									}
								}
								usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
							}
						}
					}
					if = {
						limit = {
							c_middlesex = {
								holder_scope = {
									character = ROOT
								}
							}
						}
						c_middlesex = {
							capital_holding = {
								ROOT = { capital = PREV }
							}
						}
					}
				}
			}
		}

		hidden_tooltip = {
			check_if_reconquista_finished_effect = yes
			FROM = {
				landless_pope_effect = yes
			}
		}
	}

	on_fail = {
		ROOT = {
			show_scope_change = no
			prestige = -200
		}
		FROM = {
			show_scope_change = no
			prestige = 100
		}
		FROM = {
			show_scope_change = no
			participation_scaled_prestige = 100
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
	}

	on_reverse_demand = {
		ROOT = {
			show_scope_change = no
			prestige = -200
			transfer_scaled_wealth = {
				to = FROM
				value = 8.0
			}
		}
		FROM = {
			show_scope_change = no
			prestige = 200
			participation_scaled_prestige = 200
			if = {
				limit = { 
					has_dlc = "Legacy of Rome"
					OR = { 
						has_landed_title = e_byzantium
						has_landed_title = e_roman_empire
					}
						OR = { 
							religion_group = christian
							religion = hellenic_pagan
							religion = hellenic_pagan_reformed
						}
				}
				hidden_tooltip = { character_event = { id = LoR.30 days = 12 } }
			}
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
		}
	}

	on_reverse_demand_title = {
		ROOT = { show_scope_change = no remove_claim = PREV }
	}

	on_attacker_leader_death = {
		hidden_tooltip = {
			any_defender = {
				letter_event = {
					id = 251
				}
			}
		}

		end_war = whitepeace
	}

	attacker_ai_victory_worth = {
		factor = 150
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
	
	ai_will_do = { 
		factor = 1
		modifier = { #Focus on Coronation first.
			factor = 0.1
			has_dlc = "Holy Fury"
			ROOT = {
				is_feudal = yes
				OR = {
					religion = catholic
					religion = fraticelli
				}
				NOR = {
					trait = crowned_by_priest
					trait = crowned_by_bishop
					trait = crowned_by_pope
					trait = crowned_by_myself
				}
			}
		}
		
		modifier = {
			factor = 0
			FROM = {
				is_nomadic = yes
			}
			ROOT = {
				is_nomadic = no
				NOT = {
					is_tribal = yes
				}
			}
			NOT = {
				any_direct_de_jure_vassal_title = {
					any_direct_de_jure_vassal_title = {
						OR = {
							holding_type = castle
							holding_type = city
						}
					}
				}
			}
		}
		modifier = {
			factor = 0
			FROM = {
				is_nomadic = yes
			}
			ROOT = {
				is_tribal = yes
			}
			NOT = {
				any_direct_de_jure_vassal_title = {
					any_direct_de_jure_vassal_title = {
						OR = {
							holding_type = castle
							holding_type = city
							holding_type = tribal
						}
					}
				}
			}
		}
	}
}