namespace = dag_cdo_yearly_slavery_event

##~Yearly Random events focused on the mechanics of the Carnalitis slave system
##~Many of these will add, remove or transfer slaves
##~Right now, these are pretty much the only way you will see most ai characters get slaves

	#1003		- A Willing Slave					(intrigue_temptation_focus)
	#1004		- Slave wants to marry you			(martial_chivalry_focus)	
	#1005		- Prized Slave 						(martial_strategist_focus)	
	#2010-2014	- Slave Offer						(stewardship_wealth_focus)
	#2020-2025	- Gifted Slave Redux				(diplomacy_various_focus)
	#2030-2034	- Judgment							(stewardship_domain_focus)
	#2040-2044	- Gifted Slave						(diplomacy_foreign_affairs_focus)


##################################################
# A Willing Slave
# by Dagulus
# 1003
# tag: create_character
##################################################

dag_cdo_yearly_slavery_event.1003 = {
	type = character_event
	title = dag_cdo_yearly_slavery_event.1003.t
	desc = dag_cdo_yearly_slavery_event.1003.desc
	left_portrait = scope:existing_slave
	right_portrait = scope:potential_slave
	theme = intrigue
	
	trigger = {
		dag_cdo_carn_slavery_content_consensual_trigger = yes
		exists = root.capital_province
		any_courtier_or_guest = {
			is_available_ai_adult = yes
			has_relation_slave_owner = root
		}
	}

	weight_multiplier = {			#~The standard for yearly events is 1
		base = 1
		dag_cdo_create_character_event_weight_modifier = yes
	}

	immediate = {
		hidden_effect = {
			#~Find an available existing slave.
			random_courtier_or_guest = {
				limit = {
					is_available_ai_adult = yes
					has_relation_slave_owner = root
				}
				save_scope_as = existing_slave
			}
			scope:existing_slave = {
				random_close_or_extended_family_member = {
					limit = {
						is_landed = no
						is_available_ai_adult = yes
						NOR = { ##~Realistically many things should rule this idea out, but lets stick to the basics
							has_character_flag = carn_cannot_be_enslaved
							has_trait_with_flag = carn_cannot_be_enslaved						
							has_trait = slave
							has_trait = devoted
							any_consort = { exists = this }
						}
					}
					weight = {
						base = 30
						modifier = {
							add = 50
							carn_has_fetish_trigger = { FETISH = submission }
						}
						modifier = {
							add = 10
							carn_is_prostitute_trigger = yes
						}						
						modifier = {
							add = 10
							has_trait = contrite
						}
						modifier = {
							add = 10
							has_trait = humble
						}
						modifier = {
							add = 10
							has_trait = trusting
						}
						modifier = {
							add = -30
							has_trait = chaste
						}
					}
					save_scope_as = potential_slave
				}
			}
			#~Backup generation
			if = {
				limit = { NOT = { exists = scope:potential_slave } }
				create_character = {
					location = scope:existing_slave.location
					template = beautiful_peasant_character
					culture = scope:existing_slave.culture
					faith = scope:existing_slave.faith
					gender_female_chance = root_attraction_based_female_chance
					save_scope_as = potential_slave
				}
				scope:potential_slave = {
					carn_add_fetish_effect = {
						FETISH = submission
					}
					trigger_event = { on_action = carn_character_initialization_pulse }
				}
			}
		}
		reverse_add_opinion = {
			target = scope:potential_slave
			modifier = carn_wants_to_be_your_slave_opinion
		}
	}

	#~Option A: --Enslave--
	option = {
		name = dag_cdo_yearly_slavery_event.1003.a
		scope:potential_slave = { save_scope_as = recipient }	#~For carnalitis localization
		carn_enslave_effect = {
			SLAVE = scope:potential_slave
			OWNER = root
			DRAMA = no				#~carn_wants_to_be_your_slave_opinion does not seem to have any effect on this???
		}
		stress_impact = {
			#~additional stress impacts because these circumstances are weird.
			paranoid = minor_stress_impact_gain
			shy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_greed = 0.5
				ai_energy = 0.25
			}
		}
	}

	#~Option B: --I don't think so--
	option = {
		name = dag_cdo_yearly_slavery_event.1003.b
		
		scope:existing_slave = {
			add_opinion = {
				target = root
				modifier = disappointed_opinion
				opinion = low_negative_opinion
			}
		}
		scope:potential_slave = {
			add_opinion = {
				target = root
				modifier = disappointed_opinion
				opinion = low_negative_opinion
			}
		}
		ai_chance = {
			base = 20
			ai_value_modifier = {
				ai_compassion = -1
				ai_energy = -2
			}
			modifier = {
				add = 20
				has_trait = paranoid
			}			
		}
	}
}

###############################
# Slave wants to marry you
# by Dagulus
# 1004
# tags: no_ai_chance_data no_stress_effects
###############################

scripted_trigger dag_cdo_yearly_slavery_event_1004_slave_trigger = {
	is_available_ai_adult = yes
	is_married = no
	is_attracted_to_gender_of = root
	sex_opposite_of = root	#~Opposite genders only: believed to be a hard requirement right now.
	OR = {
		root = { allowed_more_spouses = yes }
		root = { allowed_more_concubines = yes }
		#~can_marry_character_trigger = { CHARACTER = root }		#~Slaves automatically fail this as of Carnalitas 1.3.6
	}
	NOT = { has_opinion_modifier = { modifier = peasant_affair_rejected_lover_opinion target = root } }
}

dag_cdo_yearly_slavery_event.1004 = {
	type = character_event
	title = dag_cdo_yearly_slavery_event.1004.t
	desc = dag_cdo_yearly_slavery_event.1004.desc
	theme = love
	left_portrait = scope:slave_character
	#~right_portrait = scope:slave_child				#~Eventually make this event more complex if you have had a child together.
	
	trigger = {
		any_relation = {
			type = slave
			dag_cdo_yearly_slavery_event_1004_slave_trigger = yes
		}
	}

	weight_multiplier = {			#~The standard for yearly events is 1
		base = 1
		modifier = {
			add = 0.5
			can_marry_trigger = yes
		}		
	}

	immediate = {
		random_relation = {
			type = slave
			limit = { dag_cdo_yearly_slavery_event_1004_slave_trigger = yes }
			weight = {
				base = 1
				modifier = {
					factor = 0.2
					this = {
						opinion = {
							target = root
							value < 10
						}
					}
				}
			}
			save_scope_as = slave_character
		}
		scope:slave_character = {
			if = {
				limit = { root = { is_ai = no }	}
				assign_quirk_effect = yes
			}
		}
	}

	#~Yes, of course!
	option = {
		name = dag_cdo_yearly_slavery_event.1004.a
		trigger = {
			allowed_more_spouses = yes
			scope:slave_character = { is_married = no }
			#~there is a metric fuck-ton of stuff we are ignoring here.
			#~can_marry_character_trigger = { CHARACTER = scope:slave_character }	#~Slaves automatically fail this as of Carnalitas 1.3.6
		}
		if = {
			limit = { is_female = yes }
			marry_matrilineal = scope:slave_character
		}
		else = {
			marry = scope:slave_character
			#~This function gives absolutely no fucks about the can_not_marry flag
			#~Another case of the game treating flags as guidelines rather than rules
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.1
				ai_sociability = 0.1
				ai_honor = 0.1
				ai_boldness = 0.1
				ai_rationality = -0.1
			}
			#~should also be bonus if mother/father of your child
		}
	}

	#~You can be upgraded to my concubine
	option = {
		name = dag_cdo_yearly_slavery_event.1004.c
		trigger = {
			allowed_more_concubines = yes
			scope:slave_character = { 
				is_married = no
				is_concubine = no
			}
			#~there is a metric fuck-ton of stuff we are ignoring here.
		}
		make_concubine = scope:slave_character
		ai_chance = {
			base = 15
			ai_value_modifier = {
				ai_compassion = 0.1
				ai_sociability = 0.1
			}
		}
	}

	#~We can be lovers instead
	option = {
		name = dag_cdo_yearly_slavery_event.1004.b
		trigger = {
			can_set_relation_lover_trigger = { CHARACTER = scope:slave_character }
		}
		set_relation_lover = scope:slave_character
		ai_chance = {
			base = 20
			ai_value_modifier = {
				ai_compassion = 0.1
				ai_sociability = 0.1
				ai_honor = -0.1
			}
		}		
	}

	#~Nope
	option = {
		name = dag_cdo_yearly_slavery_event.1004.d
		reverse_add_opinion = {
			target = scope:slave_character
			modifier = peasant_affair_rejected_lover_opinion
		}
		ai_chance = {
			base = 30
			ai_value_modifier = {
				ai_rationality = 0.25
				ai_boldness = -0.1
				ai_energy = -0.1
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:slave_character
				multiplier = -0.25						#~Adds 25 for -100 opinion
			}
			modifier = {
				add = 25
				is_claimant = yes
				scope:slave_character = {
					is_female = yes
					OR = {
						age > 29
						fertility < 0.1
					}
				}
			}
		}
	}
}

#######################
# Prized Slave
# by Dagulus
# 1005
#######################

scripted_effect dag_cdo_yearly_slavery_event_1005_effect = {
	if = {
		limit = {
			$SLAVE$ = { 
				has_character_modifier = dag_cdo_sex_slave
				carn_slave_price_value >= 15
			}
		}
		add_character_modifier = {
			modifier = dag_cdo_troops_motivated_exceptional_modifier
			years = 10
		}
	}
	else_if = {
		limit = {
			$SLAVE$ = {
				or = {			
					has_character_modifier = dag_cdo_sex_slave
					carn_slave_price_value >= 15
				}
			}
		}
		add_character_modifier = {
			modifier = dag_cdo_troops_motivated_high_modifier
			years = 10
		}		
	}
	else = {
		add_character_modifier = {
			modifier = dag_cdo_troops_motivated_modifier
			years = 10
		}		
	}
}

dag_cdo_yearly_slavery_event.1005 = {
	type = character_event
	title = dag_cdo_yearly_slavery_event.1005.t
	desc = {
		desc = dag_cdo_yearly_slavery_event.1005.start.desc
		desc = dag_cdo_yearly_slavery_event.1005.middle.desc
		desc = dag_cdo_yearly_slavery_event.1005.end.desc
	}

	left_portrait = scope:marshal_character
    lower_left_portrait = scope:slave_three
	lower_center_portrait = scope:slave_two
	lower_right_portrait = scope:slave_one
	
	theme = martial
	
	trigger = {
		exists = root.capital_province
		exists = cp:councillor_marshal
		dag_cdo_carn_slavery_content_unrestricted_trigger = yes
		NOR = {
			has_character_modifier = dag_cdo_troops_motivated_modifier
			has_character_modifier = dag_cdo_troops_motivated_high_modifier
			has_character_modifier = dag_cdo_troops_motivated_exceptional_modifier
		}
		any_relation = {
			type = slave
			is_available_healthy_ai_adult = yes
			is_female = yes			#~If there are any sort of amazon units we need to flip this
		}
	}

	weight_multiplier = {			#~The standard for yearly events is 1
		base = 1
		modifier = {
			add = 5
			any_relation = {
				type = slave
				count > 5
			}
		}
	}

	immediate = {
		cp:councillor_marshal = { save_scope_as = marshal_character }
		every_relation = {
			type = slave
			limit = {
				is_available_healthy_ai_adult = yes
				is_female = yes
			}
			add_to_list = slave_candidates_list
		}
		random_in_list = {
			list = slave_candidates_list
			weight = {
				base = 1
				modifier  = {
					add = 5
					has_character_modifier = dag_cdo_sex_slave
				}
				modifier  = {
					add = 5
					carn_slave_price_value >= 15
				}				
			}
			save_scope_as = slave_one
		}
		random_in_list = {
			list = slave_candidates_list
			limit = {
				NOT = { this = scope:slave_one }
			}
			weight = {
				base = 1
				modifier  = {
					add = 5
					has_character_modifier = dag_cdo_sex_slave
				}
				modifier  = {
					add = 5
					carn_slave_price_value >= 15
				}				
			}
			save_scope_as = slave_two
		}
		random_in_list = {
			list = slave_candidates_list
			limit = {
				NOT = { this = scope:slave_one }
				NOT = { this = scope:slave_two }
			}
			weight = {
				base = 1
				modifier  = {
					add = 5
					has_character_modifier = dag_cdo_sex_slave
				}
				modifier  = {
					add = 5
					carn_slave_price_value >= 15
				}			
			}
			save_scope_as = slave_three
		}
	}

	option = {
		trigger = { exists = scope:slave_one }
		name = dag_cdo_yearly_slavery_event.1005.a
		dag_cdo_transfer_root_slave_effect = {
			SLAVE = scope:slave_one
			OWNER = root
			RECIPIENT = scope:marshal_character
		}
		hidden_effect = { scope:slave_one = { death = { death_reason = dag_cdo_death_gang_rape } } }
		dag_cdo_yearly_slavery_event_1005_effect = { SLAVE = scope:slave_one }
	}

	option = {
		trigger = { exists = scope:slave_two }
		name = dag_cdo_yearly_slavery_event.1005.b
		dag_cdo_transfer_root_slave_effect = {
			SLAVE = scope:slave_two
			OWNER = root
			RECIPIENT = scope:marshal_character
		}
		hidden_effect = { scope:slave_two = { death = { death_reason = dag_cdo_death_gang_rape } } }
		dag_cdo_yearly_slavery_event_1005_effect = { SLAVE = scope:slave_two }
	}

	option = {
		trigger = { exists = scope:slave_three }
		name = dag_cdo_yearly_slavery_event.1005.c
		dag_cdo_transfer_root_slave_effect = {
			SLAVE = scope:slave_three
			OWNER = root
			RECIPIENT = scope:marshal_character
		}
		hidden_effect = { scope:slave_three = { death = { death_reason = dag_cdo_death_gang_rape } } }
		dag_cdo_yearly_slavery_event_1005_effect = { SLAVE = scope:slave_three }
	}

	option = {
		name = dag_cdo_yearly_slavery_event.1005.d
		remove_short_term_gold = minor_gold_value		#~about 15 to 150
		add_character_modifier = {
			modifier = dag_cdo_troops_motivated_modifier
			years = 10
		}
	}
}

#######################
# Slave Offer
# by Dagulus
# 2010-2012
#######################

dag_cdo_yearly_slavery_event.2010 = {
	hidden = yes
	trigger = {
		dag_cdo_carn_slavery_content_acceptance_trigger = yes
		any_relation = {
			type = slave
			has_trait = slave
			carn_slave_can_be_sold_trigger = yes
		}
	}
	weight_multiplier = {			#~The standard for yearly events is 1
		base = 1	
		dag_cdo_create_character_event_weight_modifier = yes
	}
	option = {
		trigger_event = {
			on_action = dag_cdo_yearly_slavery_event_2010_event_selection
		}
	}
}

#~rival
#~cannibal
#~deviant
#~pimp


dag_cdo_yearly_slavery_event.2011 = {
	type = character_event
	title = dag_cdo_yearly_slavery_event.2010.t
	desc = {
		desc = dag_cdo_yearly_slavery_event.2010.start.desc
		desc = dag_cdo_yearly_slavery_event.2011.middle.desc		
		desc = dag_cdo_yearly_slavery_event.2010.end.desc
	}
	theme = stewardship
	right_portrait = scope:slave	
	left_portrait = scope:slave_buyer
	trigger = {
		dag_cdo_carn_slavery_content_unrestricted_trigger = yes
		any_relation = {
			type = slave
			has_trait = slave
			carn_slave_can_be_sold_trigger = yes
			save_temporary_scope_as = slave_temp
			any_relation = {
				type = rival
				is_adult = yes
				in_diplomatic_range = root
				NOT = { this = root }
				dag_cdo_can_become_legal_owner_of_slave_trigger = { SLAVE = scope:slave_temp }
			}
		}
	}

	weight_multiplier = {			#~Sub Event
		base = 1	
	}

	immediate = {
		hidden_effect = {
			random_relation = {
				type = slave
				limit = {
					has_trait = slave
					carn_slave_can_be_sold_trigger = yes
					save_temporary_scope_as = slave_temp
					any_relation = {
						type = rival
						is_ai = yes
						is_adult = yes
						in_diplomatic_range = root
						NOT = { this = root }
						dag_cdo_can_become_legal_owner_of_slave_trigger = { SLAVE = scope:slave_temp }
					}	
				}
				save_scope_as = slave
			}
			set_variable = {
				name = haggle_value
				value = {
					value = scope:slave.carn_slave_price_value
					add = 5
				}
			}
			#~Find an available slave_buyer.
			scope:slave = {
				random_relation = {
					type = rival
					limit = {
						is_adult = yes
						is_ai = yes
						in_diplomatic_range = root
						NOT = { this = root }
						dag_cdo_can_become_legal_owner_of_slave_trigger = { SLAVE = scope:slave }						
					}
					save_scope_as = slave_buyer			
				}
			}
			#~Backup generation - Not needed for this event
			scope:slave_buyer = {
				add_gold = scope:slave.carn_slave_price_value			#~Bit of a cheat here
				add_gold = 5
			}
		}
	}

	#~Haggle
	option = {
		name = dag_cdo_yearly_slavery_event.2010.a
		duel = {
			skill = stewardship
			value = average_skill_rating
			50 = { #~Success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 1.1
				}
				desc = dag_cdo_yearly_slavery_event.2010.a.toast.success
				send_interface_toast = {
					left_icon = scope:slave_buyer
					title = dag_cdo_yearly_slavery_event.2010.a.toast.success
					scope:slave_buyer = { save_scope_as = buyer }
					root = { save_scope_as = seller }
					carn_buy_slave_effect = { 
						SLAVE_PRICE = var:haggle_value
					}
					scope:slave = {
						move_to_pool_at = scope:slave_buyer.location
					}
				}
			}
			50 = { #~Failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -1.1
				}
				desc = dag_cdo_yearly_slavery_event.2010.a.toast.failure
				send_interface_toast = {
					left_icon = scope:slave_buyer
					title = dag_cdo_yearly_slavery_event.2010.a.toast.failure
				}
			}
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_greed = 0.75
				ai_boldness = 0.25
			}
		}
	}

	#~sell at set price
	option = {
		name = dag_cdo_yearly_slavery_event.2010.b

		scope:slave_buyer = { save_scope_as = buyer }
		root = { save_scope_as = seller }
		carn_buy_slave_effect = { 
			SLAVE_PRICE = scope:slave.carn_slave_price_value
		}
		scope:slave = {
			move_to_pool_at = scope:slave_buyer.location
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_greed = 0.50
				ai_rationality = 0.25
			}
		}
	}

	#~Exchange for hook
	option = {
		name = dag_cdo_yearly_slavery_event.2010.c
		dag_cdo_transfer_root_slave_effect = {
			SLAVE = scope:slave
			OWNER = root
			RECIPIENT = scope:slave_buyer
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_honor = 0.10
				ai_greed = -0.50
			}
			modifier = {
				add = 25
				has_trait = trusting
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:slave_buyer
				multiplier = 0.5					#~Adds 50 for 100 opinion
			}
		}
	}

	#~Keep slave
	option = {
		name = dag_cdo_yearly_slavery_event.2010.d
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_compassion = 0.75
				ai_energy = -0.25
			}
			modifier = {
				add = 25
				has_trait = paranoid
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:slave
				multiplier = 1						#~Adds 100 for 100 opinion
			}
		}
	}
}
	
dag_cdo_yearly_slavery_event.2012 = {
	type = character_event
	title = dag_cdo_yearly_slavery_event.2010.t
	desc = {	
		desc = dag_cdo_yearly_slavery_event.2010.start.desc
		desc = dag_cdo_yearly_slavery_event.2012.middle.desc		
		desc = dag_cdo_yearly_slavery_event.2010.end.desc
	}
	theme = stewardship
	right_portrait = scope:slave	
	left_portrait = scope:slave_buyer
	trigger = {
		dag_cdo_carn_slavery_content_unrestricted_trigger = yes
		any_relation = {
			type = slave
			has_trait = slave
			is_adult = yes
			carn_slave_can_be_sold_trigger = yes
			carn_slave_price_value >= 5
		}
	}

	weight_multiplier = {			#~Sub Event
		base = 1	
	}

	immediate = {
		hidden_effect = {
			random_relation = {
				type = slave
				limit = {
					has_trait = slave
					is_adult = yes
					carn_slave_can_be_sold_trigger = yes
					carn_slave_price_value >= 5
				}
				save_scope_as = slave
			}
			set_variable = {
				name = haggle_value
				value = {
					value = scope:slave.carn_slave_price_value
					add = 5
				}
			}
			#~Find an available cannibal.
			random_living_character = {
				limit = {
					is_adult = yes
					is_ai = yes
					in_diplomatic_range = root
					NOT = { this = root }
					#dag_cdo_can_become_legal_owner_of_slave_trigger = { SLAVE = scope:slave }	#Seriously, they do not care
					OR = {
						has_trait = cannibal
						any_secret = { secret_type = secret_cannibal }
					}
				}
				save_scope_as = slave_buyer			
			}
			#~Backup generation - There is never a cannibal when you need one
			#~Tag: test_if_backup_works
			if = {
				limit = { NOT = { exists = scope:slave_buyer } }
				dag_cdo_create_secret_cannibal_effect = yes
				scope:created_character = { save_scope_as = slave_buyer }
			}
			scope:slave_buyer = {
				add_gold = scope:slave.carn_slave_price_value			#~Bit of a cheat here
				add_gold = 5
			}
		}
	}

	#~Haggle
	option = {
		name = dag_cdo_yearly_slavery_event.2010.a
		duel = {
			skill = stewardship
			value = average_skill_rating
			50 = { #~Success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 1.1
				}
				desc = dag_cdo_yearly_slavery_event.2010.a.toast.success
				send_interface_toast = {
					left_icon = scope:slave_buyer
					title = dag_cdo_yearly_slavery_event.2010.a.toast.success
					scope:slave_buyer = { save_scope_as = buyer }
					root = { save_scope_as = seller }
					carn_buy_slave_effect = { 
						SLAVE_PRICE = var:haggle_value
					}
					scope:slave = {
						if = {
							limit = { exists = scope:slave_buyer.location }
							move_to_pool_at = scope:slave_buyer.location
						}
						#~[22:44:46][jomini_script_system.cpp:169]: Script system error! Error: Character with no location in link 'location' Script location: file: events/yearly_events/dag_cdo_yearly_slavery_events.txt line: 706
						#~I hate the fucking location code, it's barely functional: Added the if statement above to try and catch this
						#~YAF Sequencing error
					}
				}
			}
			50 = { #~Failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -1.1
				}
				desc = dag_cdo_yearly_slavery_event.2010.a.toast.failure
				send_interface_toast = {
					left_icon = scope:slave_buyer
					title = dag_cdo_yearly_slavery_event.2010.a.toast.failure
				}
			}
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_greed = 0.75
				ai_boldness = 0.25
			}
		}
	}

	#~sell at set price
	option = {
		name = dag_cdo_yearly_slavery_event.2010.b

		scope:slave_buyer = { save_scope_as = buyer }
		root = { save_scope_as = seller }
		carn_buy_slave_effect = { 
			SLAVE_PRICE = scope:slave.carn_slave_price_value
		}
		scope:slave = {
			move_to_pool_at = scope:slave_buyer.location
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_greed = 0.50
				ai_rationality = 0.25
			}
		}
	}

	#~Exchange for hook
	option = {
		name = dag_cdo_yearly_slavery_event.2010.c
		dag_cdo_transfer_root_slave_effect = {
			SLAVE = scope:slave
			OWNER = root
			RECIPIENT = scope:slave_buyer
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_honor = 0.10
				ai_greed = -0.50
			}
			modifier = {
				add = 25
				has_trait = trusting
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:slave_buyer
				multiplier = 0.5					#~Adds 50 for 100 opinion
			}
		}
	}

	#~Keep slave
	option = {
		name = dag_cdo_yearly_slavery_event.2010.d
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_compassion = 0.75
				ai_energy = -0.25
			}
			modifier = {
				add = 25
				has_trait = paranoid
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:slave
				multiplier = 1						#~Adds 100 for 100 opinion
			}
		}
	}
}

dag_cdo_yearly_slavery_event.2013 = {
	type = character_event
	title = dag_cdo_yearly_slavery_event.2010.t
	desc = {	
		desc = dag_cdo_yearly_slavery_event.2010.start.desc
		desc = dag_cdo_yearly_slavery_event.2013.middle.desc		
		desc = dag_cdo_yearly_slavery_event.2010.end.desc
	}
	theme = stewardship
	right_portrait = scope:slave	
	left_portrait = scope:slave_buyer
	trigger = {
		dag_cdo_carn_slavery_content_unrestricted_trigger = yes
		any_relation = {
			type = slave
			has_trait = slave
			is_adult = yes
			carn_slave_can_be_sold_trigger = yes
			carn_slave_price_value >= 5
		}
	}

	weight_multiplier = {			#~Sub Event
		base = 1	
	}

	immediate = {
		hidden_effect = {
			random_relation = {
				type = slave
				limit = {
					has_trait = slave
					is_adult = yes
					carn_slave_can_be_sold_trigger = yes
					carn_slave_price_value >= 5
				}
				save_scope_as = slave
			}
			set_variable = {
				name = haggle_value
				value = {
					value = scope:slave.carn_slave_price_value
					add = 5
				}
			}
			#Find an available deviant.
			random_living_character = {
				limit = {
					is_adult = yes
					is_ai = yes
					in_diplomatic_range = root
					NOT = { this = root }
					#dag_cdo_can_become_legal_owner_of_slave_trigger = { SLAVE = scope:slave }	#Seriously, they do not care
					OR = {
						has_trait = deviant
						any_secret = { secret_type = secret_deviant }
					}
				}
				save_scope_as = slave_buyer			
			}
			#~Backup generation - There is never a deviant when you need one
			#~Tag: test_if_backup_works
			#~probably not hence the location errors?
			if = {
				limit = { NOT = { exists = scope:slave_buyer } }
				dag_cdo_create_secret_deviant_effect = yes
				scope:created_character = { save_scope_as = slave_buyer }
			}
			scope:slave_buyer = {
				add_gold = scope:slave.carn_slave_price_value			#~Bit of a cheat here
				add_gold = 5
			}
		}
	}

	#~Haggle
	option = {
		name = dag_cdo_yearly_slavery_event.2010.a
		duel = {
			skill = stewardship
			value = average_skill_rating
			50 = { # Success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 1.1
				}
				desc = dag_cdo_yearly_slavery_event.2010.a.toast.success
				send_interface_toast = {
					left_icon = scope:slave_buyer
					title = dag_cdo_yearly_slavery_event.2010.a.toast.success
					scope:slave_buyer = { save_scope_as = buyer }
					root = { save_scope_as = seller }
					carn_buy_slave_effect = { 
						SLAVE_PRICE = var:haggle_value
					}
					scope:slave = {
						move_to_pool_at = scope:slave_buyer.location
						#~[22:44:46][jomini_script_system.cpp:169]: Script system error! Error: Character with no location in link 'location' Script location: file: events/yearly_events/dag_cdo_yearly_slavery_events.txt line: 706
						#~I hate the fucking location code, its barely functional
					}
				}
			}
			50 = { #~Failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -1.1
				}
				desc = dag_cdo_yearly_slavery_event.2010.a.toast.failure
				send_interface_toast = {
					left_icon = scope:slave_buyer
					title = dag_cdo_yearly_slavery_event.2010.a.toast.failure
				}
			}
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_greed = 0.75
				ai_boldness = 0.25
			}
		}
	}

	#~sell at set price
	option = {
		name = dag_cdo_yearly_slavery_event.2010.b

		scope:slave_buyer = { save_scope_as = buyer }
		root = { save_scope_as = seller }
		carn_buy_slave_effect = { 
			SLAVE_PRICE = scope:slave.carn_slave_price_value
		}
		scope:slave = {
			move_to_pool_at = scope:slave_buyer.location
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_greed = 0.50
				ai_rationality = 0.25
			}
		}
	}

	#~Exchange for hook
	option = {
		name = dag_cdo_yearly_slavery_event.2010.c
		dag_cdo_transfer_root_slave_effect = {
			SLAVE = scope:slave
			OWNER = root
			RECIPIENT = scope:slave_buyer
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_honor = 0.10
				ai_greed = -0.50
			}
			modifier = {
				add = 25
				has_trait = trusting
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:slave_buyer
				multiplier = 0.5					#~Adds 50 for 100 opinion
			}
		}
	}

	#~Keep slave
	option = {
		name = dag_cdo_yearly_slavery_event.2010.d
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_compassion = 0.75
				ai_energy = -0.25
			}
			modifier = {
				add = 25
				has_trait = paranoid
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:slave
				multiplier = 1						#~Adds 100 for 100 opinion
			}
		}
	}
}

scripted_trigger dag_cdo_yearly_slavery_event_2014_trigger = {
	is_adult = yes
	effective_age < carn_prostitution_age_cutoff
	carn_can_have_sex_trigger = yes	
	NOR = {
		has_character_flag = carn_cannot_be_prostitute
		has_trait_with_flag = carn_cannot_be_prostitute
	}
}

dag_cdo_yearly_slavery_event.2014 = {
	type = character_event
	title = dag_cdo_yearly_slavery_event.2010.t
	desc = {
		desc = dag_cdo_yearly_slavery_event.2010.start.desc
		desc = dag_cdo_yearly_slavery_event.2014.middle.desc		
		desc = dag_cdo_yearly_slavery_event.2010.end.desc
	}
	theme = stewardship
	right_portrait = scope:slave	
	left_portrait = scope:slave_buyer
	trigger = {
		dag_cdo_carn_slavery_content_unrestricted_trigger = yes
		NOT = { has_game_rule = carn_prostitution_content_disabled }
		any_relation = {
			type = slave
			has_trait = slave
			dag_cdo_yearly_slavery_event_2014_trigger = yes
			carn_slave_can_be_sold_trigger = yes
			carn_slave_price_value >= 5
		}
	}	

	weight_multiplier = {			#~Sub Event
		base = 1	
	}

	immediate = {
		hidden_effect = {
			random_relation = {
				type = slave
				limit = {
					has_trait = slave
					dag_cdo_yearly_slavery_event_2014_trigger = yes
					carn_slave_can_be_sold_trigger = yes
					carn_slave_price_value >= 5
				}
				save_scope_as = slave
			}
			set_variable = {
				name = haggle_value
				value = {
					value = scope:slave.carn_slave_price_value
					add = 5
				}
			}
			#~Find an available brothel owner.
			random_living_character = {
				limit = {
					is_available_ai_adult = yes
					in_diplomatic_range = root
					NOT = { this = root }
					#dag_cdo_can_become_legal_owner_of_slave_trigger = { SLAVE = scope:slave }	#~Seriously, they do not care
					has_variable = dag_cdo_royal_brothel_event_2000_employer
				}				
				save_scope_as = slave_buyer			
			}
			#~if we can't, lets find a suitable courtier
			if = {
				limit = { NOT = { exists = scope:slave_buyer } }			
				random_courtier_or_guest  = {
					limit = { NOT = { has_trait = slave } }
					weight = {
						modifier = {
							dag_cdo_can_become_legal_owner_of_slave_trigger = { SLAVE = scope:slave }
							add = 15
						}
						modifier = {
							ai_greed >= medium_positive_greed
							factor = 2
						}
						modifier = {
							ai_compassion <= medium_negative_ai_value
							factor = 2
						}
						modifier = {
							ai_honor <= medium_negative_ai_value
							factor = 2
						}
					}
					save_scope_as = slave_buyer
				}
			}
			scope:slave_buyer = {
				add_gold = scope:slave.carn_slave_price_value			#~Bit of a cheat here
				add_gold = 5
			}
		}
	}

	#~Haggle
	option = {
		name = dag_cdo_yearly_slavery_event.2010.a
		duel = {
			skill = stewardship
			value = average_skill_rating
			50 = { #~Success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 1.1
				}
				desc = dag_cdo_yearly_slavery_event.2010.a.toast.success
				send_interface_toast = {
					left_icon = scope:slave_buyer
					title = dag_cdo_yearly_slavery_event.2010.a.toast.success
					scope:slave_buyer = { save_scope_as = buyer }
					root = { save_scope_as = seller }
					carn_buy_slave_effect = { 
						SLAVE_PRICE = var:haggle_value
					}
					scope:slave = {
						move_to_pool_at = scope:slave_buyer.location
					}
				}
			}
			50 = { #~Failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -1.1
				}
				desc = dag_cdo_yearly_slavery_event.2010.a.toast.failure
				send_interface_toast = {
					left_icon = scope:slave_buyer
					title = dag_cdo_yearly_slavery_event.2010.a.toast.failure
				}
			}
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_greed = 0.75
				ai_boldness = 0.25
			}
		}
	}

	#~sell at set price
	option = {
		name = dag_cdo_yearly_slavery_event.2010.b

		scope:slave_buyer = { save_scope_as = buyer }
		root = { save_scope_as = seller }
		carn_buy_slave_effect = { 
			SLAVE_PRICE = scope:slave.carn_slave_price_value
		}
		scope:slave = {
			move_to_pool_at = scope:slave_buyer.location
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_greed = 0.50
				ai_rationality = 0.25
			}
		}
	}

	#~Exchange for hook
	option = {
		name = dag_cdo_yearly_slavery_event.2010.c
		dag_cdo_transfer_root_slave_effect = {
			SLAVE = scope:slave
			OWNER = root
			RECIPIENT = scope:slave_buyer
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_honor = 0.10
				ai_greed = -0.50
			}
			modifier = {
				add = 25
				has_trait = trusting
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:slave_buyer
				multiplier = 0.5					#~Adds 50 for 100 opinion
			}
		}
	}

	#~Keep slave
	option = {
		name = dag_cdo_yearly_slavery_event.2010.d
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_compassion = 0.75
				ai_energy = -0.25
			}
			modifier = {
				add = 25
				has_trait = paranoid
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:slave
				multiplier = 1						#~Adds 100 for 100 opinion
			}
		}
	}
}

#######################
# Gifted Slave Redux
# by Dagulus
# 2020-2022
#######################

dag_cdo_yearly_slavery_event.2020 = {
	hidden = yes
	trigger = {
		dag_cdo_carn_slavery_content_acceptance_trigger = yes
		any_relation = {
			type = slave
			has_trait = slave
			carn_slave_can_be_sold_trigger = yes
		}
	}
	weight_multiplier = {			#~The standard for yearly events is 1
		base = 1	
	}	
	option = {
		trigger_event = {
			on_action = dag_cdo_yearly_slavery_event_2020_event_selection
		}
	}
}

dag_cdo_yearly_slavery_event.2021 = {
	type = character_event
	title = dag_cdo_yearly_slavery_event.2020.t
	desc = {
		desc = dag_cdo_yearly_slavery_event.2020.start.desc
		desc = dag_cdo_yearly_slavery_event.2020.middle.desc		
		desc = dag_cdo_yearly_slavery_event.2020.end.desc
	}
	theme = diplomacy
	right_portrait = scope:gifted_slave
	left_portrait = {
		character = scope:gift_target
		animation = flirtation_left
	}
	
	trigger = {
		dag_cdo_carn_slavery_content_acceptance_trigger = yes
		any_relation = {
			type = slave
			has_trait = slave
		}
		any_neighboring_and_across_water_realm_same_rank_owner = {
			is_available_ai_adult = yes
			dag_cdo_is_attracted_to_any_of_owners_slaves_trigger = { OWNER = root }
		}
	}

	weight_multiplier = {			#~Sub Event
		base = 1	
	}
	
	immediate = {
		random_neighboring_and_across_water_realm_same_rank_owner = {
			limit = {
				is_available_ai_adult = yes
				dag_cdo_is_attracted_to_any_of_owners_slaves_trigger = { OWNER = root }
			}
			save_scope_as = gift_target
		}
		random_relation = {
			type = slave
			limit = {
				save_temporary_scope_as = attraction_check			#~This line must be inside the limit
				scope:gift_target = {
					is_attracted_to_gender_of = scope:attraction_check
				}
				is_capable_adult_ai = yes
				carn_slave_can_be_sold_trigger = yes
				carn_slave_price_value >= 5
			}
			alternative_limit = {									#~The bare fucking minimum so we always get a result
				save_temporary_scope_as = attraction_check			#~This line must be inside the limit
				scope:gift_target = {
					is_attracted_to_gender_of = scope:attraction_check
				}
			}
			save_scope_as = gifted_slave
		}
		#~Backup generation - No longer needed for this event: You only want to be giving away your slaves to people that are important.
		scope:gift_target = {
			add_opinion = {
				target = scope:gifted_slave
				modifier = romance_opinion
				opinion = 30
			}
		}		
	}

	option = {
		name = dag_cdo_yearly_slavery_event.2020.a

		dag_cdo_transfer_root_slave_effect = {
			SLAVE = scope:gifted_slave
			OWNER = root
			RECIPIENT = scope:gift_target
		}
		reverse_add_opinion = {
			target = scope:gift_target
			modifier = grateful_opinion
			opinion = scope:gifted_slave.carn_slave_price_value
		}
		stress_impact = {
			greedy = minor_stress_impact_gain
		}		
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_compassion = 0.25
				ai_honor = 0.10
				ai_greed = -0.20
			}
			modifier = {
				add = 25
				has_trait = trusting
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:gift_target
				multiplier = 0.5					#~Adds 50 for 100 opinion
			}			
		}
	}

	option = {
		name = dag_cdo_yearly_slavery_event.2020.b
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_greed = 0.25
				ai_energy = -0.2
			}
			modifier = {
				add = 25
				has_trait = paranoid
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:gifted_slave
				multiplier = 1						#~Adds 100 for 100 opinion
			}			
		}
	}
}

dag_cdo_yearly_slavery_event.2022 = {
	type = character_event
	title = dag_cdo_yearly_slavery_event.2020.t
	desc = {
		desc = dag_cdo_yearly_slavery_event.2022.start.desc
		desc = dag_cdo_yearly_slavery_event.2020.middle.desc		
		desc = dag_cdo_yearly_slavery_event.2020.end.desc
	}
	theme = diplomacy
	right_portrait = scope:gifted_slave
	left_portrait = {
		character = scope:gift_target
		animation = flirtation_left
	}
	
	trigger = {
		dag_cdo_carn_slavery_content_acceptance_trigger = yes
		any_relation = {
			type = slave
			has_trait = slave
		}
		any_vassal = {
			is_available_ai_adult = yes
			dag_cdo_is_attracted_to_any_of_owners_slaves_trigger = { OWNER = root }
		}
	}

	weight_multiplier = {			#~Sub Event
		base = 1	
	}
	
	immediate = {
		random_vassal = {
			limit = {
				is_available_ai_adult = yes
				dag_cdo_is_attracted_to_any_of_owners_slaves_trigger = { OWNER = root }
			}
			save_scope_as = gift_target
		}
		random_relation = {
			type = slave
			limit = {
				save_temporary_scope_as = attraction_check			#~This line must be inside the limit
				scope:gift_target = {
					is_attracted_to_gender_of = scope:attraction_check
				}
				is_capable_adult_ai = yes
				carn_slave_can_be_sold_trigger = yes
				carn_slave_price_value >= 5
			}
			alternative_limit = {									#~The bare fucking minimum so we always get a result
				save_temporary_scope_as = attraction_check			#~This line must be inside the limit
				scope:gift_target = {
					is_attracted_to_gender_of = scope:attraction_check
				}
			}
			save_scope_as = gifted_slave
		}
		#~Backup generation - Not Needed for this event
	}

	option = {
		name = dag_cdo_yearly_slavery_event.2020.a

		dag_cdo_transfer_root_slave_effect = {
			SLAVE = scope:gifted_slave
			OWNER = root
			RECIPIENT = scope:gift_target
		}
		reverse_add_opinion = {
			target = scope:gift_target
			modifier = grateful_opinion
			opinion = scope:gifted_slave.carn_slave_price_value
		}
		stress_impact = {
			greedy = minor_stress_impact_gain
		}		
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_compassion = 0.25
				ai_honor = 0.10
				ai_greed = -0.20
			}
			modifier = {
				add = 25
				has_trait = trusting
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:gift_target
				multiplier = 0.5					#~Adds 50 for 100 opinion
			}			
		}
	}

	option = {
		name = dag_cdo_yearly_slavery_event.2020.b
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_greed = 0.25
				ai_energy = -0.2
			}
			modifier = {
				add = 25
				has_trait = paranoid
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:gifted_slave
				multiplier = 1						#~Adds 100 for 100 opinion
			}			
		}
	}
}

dag_cdo_yearly_slavery_event.2023 = {
	type = character_event
	title = dag_cdo_yearly_slavery_event.2020.t
	desc = {
		desc = dag_cdo_yearly_slavery_event.2023.start.desc
		desc = dag_cdo_yearly_slavery_event.2020.middle.desc		
		desc = dag_cdo_yearly_slavery_event.2020.end.desc
	}
	theme = diplomacy
	right_portrait = scope:gifted_slave
	left_portrait = {
		character = scope:gift_target
		animation = flirtation_left
	}
	
	trigger = {
		dag_cdo_carn_slavery_content_acceptance_trigger = yes
		any_relation = {
			type = slave
			has_trait = slave
		}
		exists = liege
		liege = {
			is_available_ai_adult = yes
			dag_cdo_is_attracted_to_any_of_owners_slaves_trigger = { OWNER = root }
		}
	}

	weight_multiplier = {			#~Sub Event
		base = 1	
	}
	
	immediate = {
		liege = { save_scope_as = gift_target }
		random_relation = {
			type = slave
			limit = {
				save_temporary_scope_as = attraction_check			#~This line must be inside the limit
				scope:gift_target = {
					is_attracted_to_gender_of = scope:attraction_check
				}
				is_capable_adult_ai = yes
				carn_slave_can_be_sold_trigger = yes
				carn_slave_price_value >= 5
			}
			alternative_limit = {									#~The bare fucking minimum so we always get a result
				save_temporary_scope_as = attraction_check			#~This line must be inside the limit
				scope:gift_target = {
					is_attracted_to_gender_of = scope:attraction_check
				}
			}
			save_scope_as = gifted_slave
		}
		#~Backup generation - No longer needed for this event: You only want to be giving away your slaves to people that are important.
		scope:gift_target = {
			add_opinion = {
				target = scope:gifted_slave
				modifier = romance_opinion
				opinion = 30
			}
		}		
	}

	option = {
		name = dag_cdo_yearly_slavery_event.2020.a

		dag_cdo_transfer_root_slave_effect = {
			SLAVE = scope:gifted_slave
			OWNER = root
			RECIPIENT = scope:gift_target
		}
		reverse_add_opinion = {
			target = scope:gift_target
			modifier = grateful_opinion
			opinion = scope:gifted_slave.carn_slave_price_value
		}
		stress_impact = {
			greedy = minor_stress_impact_gain
		}		
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_compassion = 0.25
				ai_honor = 0.10
				ai_greed = -0.20
			}
			modifier = {
				add = 25
				has_trait = trusting
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:gift_target
				multiplier = 0.5					#~Adds 50 for 100 opinion
			}			
		}
	}

	option = {
		name = dag_cdo_yearly_slavery_event.2020.b
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_greed = 0.25
				ai_energy = -0.2
			}
			modifier = {
				add = 25
				has_trait = paranoid
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:gifted_slave
				multiplier = 1						#~Adds 100 for 100 opinion
			}			
		}
	}
}

dag_cdo_yearly_slavery_event.2024 = {
	type = character_event
	title = dag_cdo_yearly_slavery_event.2020.t
	desc = {
		desc = dag_cdo_yearly_slavery_event.2024.start.desc
		desc = dag_cdo_yearly_slavery_event.2020.middle.desc		
		desc = dag_cdo_yearly_slavery_event.2020.end.desc
	}
	theme = diplomacy
	right_portrait = scope:gifted_slave
	left_portrait = {
		character = scope:gift_target
		animation = flirtation_left
	}
	
	trigger = {
		dag_cdo_carn_slavery_content_acceptance_trigger = yes
		any_relation = {
			type = slave
			has_trait = slave
		}
		faith = {
			has_doctrine = doctrine_spiritual_head
			exists = religious_head
			religious_head = {
				is_available_ai_adult = yes
				dag_cdo_is_attracted_to_any_of_owners_slaves_trigger = { OWNER = root }
			}
		}
	}

	weight_multiplier = {			#~Sub Event
		base = 1	
	}
	
	immediate = {
		faith = {
			religious_head = { save_scope_as = gift_target }
		}
		random_relation = {
			type = slave
			limit = {
				save_temporary_scope_as = attraction_check			#~This line must be inside the limit
				scope:gift_target = {
					is_attracted_to_gender_of = scope:attraction_check
				}
				is_capable_adult_ai = yes
				carn_slave_can_be_sold_trigger = yes
				carn_slave_price_value >= 5
			}
			alternative_limit = {									#~The bare fucking minimum so we always get a result
				save_temporary_scope_as = attraction_check			#~This line must be inside the limit
				scope:gift_target = {
					is_attracted_to_gender_of = scope:attraction_check
				}
			}
			save_scope_as = gifted_slave
		}
		#~Backup generation - No longer needed for this event: You only want to be giving away your slaves to people that are important.
		scope:gift_target = {
			add_opinion = {
				target = scope:gifted_slave
				modifier = romance_opinion
				opinion = 30
			}
		}		
	}

	option = {
		name = dag_cdo_yearly_slavery_event.2020.a

		dag_cdo_transfer_root_slave_effect = {
			SLAVE = scope:gifted_slave
			OWNER = root
			RECIPIENT = scope:gift_target
		}
		reverse_add_opinion = {
			target = scope:gift_target
			modifier = grateful_opinion
			opinion = scope:gifted_slave.carn_slave_price_value
		}
		stress_impact = {
			greedy = minor_stress_impact_gain
		}		
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_compassion = 0.25
				ai_honor = 0.10
				ai_greed = -0.20
			}
			modifier = {
				add = 25
				has_trait = trusting
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:gift_target
				multiplier = 0.5					#~Adds 50 for 100 opinion
			}			
		}
	}

	option = {
		name = dag_cdo_yearly_slavery_event.2020.b
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_greed = 0.25
				ai_energy = -0.2
			}
			modifier = {
				add = 25
				has_trait = paranoid
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:gifted_slave
				multiplier = 1						#~Adds 100 for 100 opinion
			}			
		}
	}
}

dag_cdo_yearly_slavery_event.2025 = {
	type = character_event
	title = dag_cdo_yearly_slavery_event.2020.t
	desc = {	
		desc = dag_cdo_yearly_slavery_event.2025.start.desc
		desc = dag_cdo_yearly_slavery_event.2025.middle.desc		
		desc = dag_cdo_yearly_slavery_event.2025.end.desc
	}
	theme = diplomacy
	right_portrait = scope:gifted_slave
	left_portrait = {
		character = scope:gift_target
		animation = flirtation_left
	}
	
	trigger = {
		dag_cdo_carn_slavery_content_acceptance_trigger = yes
		any_spouse = {
			is_available_ai_adult = yes
			NOT = { has_trait = slave }
			OR = {
				has_sexuality = homosexual
				has_sexuality = bisexual
			}
			save_temporary_scope_as = gift_target_temp
		}
		any_relation = {
			type = slave
			has_trait = slave
			carn_slave_can_be_sold_trigger = yes
			carn_slave_price_value >= 5
			save_temporary_scope_as = gifted_slave_temp
			scope:gift_target_temp = {
				is_attracted_to_gender_of = scope:gifted_slave_temp
				NOT = { is_close_or_extended_family_of = scope:gifted_slave_temp }
			}
		}
	}

	weight_multiplier = {			#~Sub Event
		base = 1	
	}

	immediate = {
		random_spouse = {
			limit = {
				is_available_ai_adult = yes
				NOT = { has_trait = slave }
				OR = {
					has_sexuality = homosexual
					has_sexuality = bisexual
				}
			}
			save_scope_as = gift_target
		}
		random_relation = {
			type = slave
			limit = {
				is_adult = yes
				has_trait = slave
				carn_slave_can_be_sold_trigger = yes
				carn_slave_price_value >= 5
				save_temporary_scope_as = gifted_slave_temp
				scope:gift_target = {
					is_attracted_to_gender_of = scope:gifted_slave_temp
					NOT = { is_close_or_extended_family_of = scope:gifted_slave_temp }
				}
				is_attracted_to_gender_of = scope:gift_target
			}
			alternative_limit = {
				is_adult = yes
				has_trait = slave 
				carn_slave_can_be_sold_trigger = yes
				carn_slave_price_value >= 5
				save_temporary_scope_as = gifted_slave_temp
				scope:gift_target = {
					is_attracted_to_gender_of = scope:gifted_slave_temp
					NOT = { is_close_or_extended_family_of = scope:gifted_slave_temp }
				}
			}
			save_scope_as = gifted_slave
		}
		#~Backup generation - Not Needed for this event
		scope:gift_target = {
			add_opinion = {
				target = scope:gifted_slave
				modifier = romance_opinion
				opinion = 30
			}
		}
	}

	option = {
		name = dag_cdo_yearly_slavery_event.2020.a

		dag_cdo_transfer_root_slave_effect = {
			SLAVE = scope:gifted_slave
			OWNER = root
			RECIPIENT = scope:gift_target
		}
		reverse_add_opinion = {
			target = scope:gift_target
			modifier = grateful_opinion
			opinion = scope:gifted_slave.carn_slave_price_value
		}
		stress_impact = {
			greedy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_compassion = 0.25
				ai_honor = 0.10
				ai_greed = -0.20
			}
			modifier = {
				add = 25
				has_trait = trusting
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:gift_target
				multiplier = 0.5					#~Adds 50 for 100 opinion
			}
		}
	}
	option = {
		name = dag_cdo_yearly_slavery_event.2020.b
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_greed = 0.25
				ai_energy = -0.2
			}
			modifier = {
				add = 25
				has_trait = paranoid
			}
			opinion_modifier = {					#~I am assuming things like lover and soulmate are reflected in this?
				who = root
				opinion_target = scope:gifted_slave
				multiplier = 1						#~Adds 100 for 100 opinion
			}
		}
	}
}

#######################
# Judgment
# by Dagulus
# 2030-2034
#######################

dag_cdo_yearly_slavery_event.2030 = {
	hidden = yes
	trigger = {
		any_relation = {
			type = slave
			has_trait = slave
			carn_slave_can_be_sold_trigger = yes
		}
	}
	weight_multiplier = {	#~The standard for yearly events is 1
		base = 1
		dag_cdo_create_character_event_weight_modifier = yes
	}	
	option = {
		trigger_event = {
			on_action = dag_cdo_yearly_slavery_event_2030_event_selection
		}
	}
}

#treachery_opinion 						(Done > Marshal)
#abductor_opinion
#theft_opinion							(Done > Steward)
#plotting_against_liege_opinion
#spying_on_liege_opinion				(Done > Chancellor)

#carn_prostitution_crime_opinion
#illegal_resisted_conversion_opinion 	(Done > Court Chaplain)
#sodomite_crime
#cannibal_crime
#deviant_crime
#adulterer_crime
#fornicator_crime

dag_cdo_yearly_slavery_event.2031 = {
	type = character_event
	title = dag_cdo_yearly_slavery_event.2030.t
	desc = {	
		desc = dag_cdo_yearly_slavery_event.2031.start.desc
		desc = dag_cdo_yearly_slavery_event.2030.end.desc
	}
	theme = dread
	override_background = {
		event_background = gallows
	}
	left_portrait = {
		character = scope:accuser
		animation = schadenfreude
	}
	right_portrait = {
		character = scope:accused
		animation = beg
	}
	trigger = {
		exists = root.capital_province
		faith = {
			OR = {
				religion_tag = christianity_religion
				religion_tag = islam_religion
				religion_tag = judaism_religion
				religion_tag = zoroastrianism_religion
			}		
		}
		any_vassal_or_below  = {
			is_available_healthy_ai_adult = yes
			faith = root.faith
		}	
	}

	weight_multiplier = {			#~Sub Event
		base = 1	
	}
	
	immediate = {
		save_scope_as = actor		#~needed for conversion option
		#find accuser
		random_vassal_or_below = {
			limit = {
				is_available_healthy_ai_adult = yes
				faith = root.faith	
				has_dread_level_towards = { target = root level < 1 }	#~avoid generating intimidated accusers
			}
			alternative_limit = {
				is_available_healthy_ai_adult = yes
				faith = root.faith
			}			
			weight = {
				base = 1
				modifier = { #~More likely to pick someone that matters
					add = 0.75
					is_powerful_vassal = yes
				}				
				modifier = {
					add = 0.50
					has_council_position = councillor_court_chaplain
				}					
				modifier = {
					add = 0.25
					has_hook = root
				}
			}
			save_scope_as = accuser	
		}
		#~Find criminal
		#~Currently we don't do this, so skip straight to generating one
		
		#~Backup generation
		if = {
			limit = { NOT = { exists = scope:accused } }
			#find criminal
			create_character = {
				location = root.capital_province
				template = pool_repopulate_learning					#~These are often pretty decent characters
				trait = zealous
				save_scope_as = accused
			}
			scope:accused = { add_character_flag = dag_cdo_new_character_flag }
		}
		hidden_effect = {
			root = { save_scope_as = heretic_ruler }
			dag_cdo_get_heretic_faith = yes
			add_opinion = {
				modifier = illegal_resisted_conversion_opinion
				target = scope:accused
			}
			scope:accused = {
				save_scope_as = recipient						#~needed for conversion option
				set_character_faith = scope:heretic_faith
				set_employer = root
				trigger_event = { on_action = carn_character_initialization_pulse }
			}
		}
	}

	#~Option A: Evidence is circumstantial, release them!
	option = {
		name = dag_cdo_yearly_slavery_event.2030.a
		reverse_add_opinion = {
			target = scope:accuser
			modifier = annoyed_opinion
			opinion = low_negative_opinion
		}
		
		hidden_effect = {
			scope:accused = {
				if = {
					limit = { has_character_flag = dag_cdo_new_character_flag }
					death = { death_reason = death_disappearance }
				}
			}
		}		
		
		stress_impact = {
			trusting = minor_stress_impact_gain
			just = minor_stress_impact_gain		
			zealous = medium_stress_impact_gain
			sadistic = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_compassion = 0.75
				ai_boldness = 0.25
				ai_energy = -0.20
			}
		}
	}

	#~Option B: --Imprison--
	option = {
		name = dag_cdo_yearly_slavery_event.2030.b

		scope:accused = { remove_character_flag = dag_cdo_new_character_flag }
		imprison_character_effect = {
			TARGET = scope:accused
			IMPRISONER = root
		}
		stress_impact = {
			forgiving = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_zeal = 0.75
				ai_honor = 0.25			
				ai_vengefulness = 0.25	
				ai_rationality = 0.25
			}
			modifier = {	#~safety net
				add = -100
				NOT = { has_imprisonment_reason = scope:accused }
			}
		}
	}

	#~Option C: --Enslave--
	option = {
		name = dag_cdo_yearly_slavery_event.2030.c

		trigger = {
			dag_cdo_carn_slavery_content_acceptance_trigger = yes
			dag_cdo_can_become_legal_slave_of_root_trigger = yes
		}
		scope:accused = { remove_character_flag = dag_cdo_new_character_flag }
		scope:accused = { save_scope_as = recipient }	#~For Carnalitis localization
		carn_enslave_effect = {			#~(effect includes player stress_impact and piety changes)
			SLAVE = scope:accused
			OWNER = root
			DRAMA = yes
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_zeal = 0.50
				ai_vengefulness = 0.50
				ai_greed = 0.5
				ai_boldness = 0.25
			}
			modifier = {
				add = -100
				NOT = { has_execute_reason = scope:accused }
			}			
		}
	}

	#~Option D: --Execute--
	option = {
		name = dag_cdo_yearly_slavery_event.2030.d

		reverse_add_opinion = {
			target = scope:accuser
			modifier = pleased_opinion
			opinion = low_positive_opinion
		}

		#~Accused killed by the event (effect includes player stress_impact and piety changes).
		execute_prisoner_effect = {
			VICTIM = scope:accused
			EXECUTIONER = root
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_zeal = 0.75
				ai_vengefulness = 0.75
				ai_boldness = 0.25
				ai_compassion = -1
				ai_greed = -0.5
			}
			modifier = {
				add = -100
				NOT = { has_execute_reason = scope:accused }
			}			
		}
	}

	#~Option E: --Conversion--
	#~This probably should respect the conversion time limit trigger (probably not called that)
	option = {
		name = dag_cdo_yearly_slavery_event.2031.e
		trigger = {
			#everything that stops this working, needs to go in this trigger
			NOT = {
				AND = {
					exists = faith.religious_head
					faith.religious_head = root
				}
			}
		}
		scope:accused = { remove_character_flag = dag_cdo_new_character_flag }
		adopt_religion_interaction_effect = yes
		add_piety = major_piety_loss
		add_piety_level = -1
		reverse_add_opinion = {
			target = scope:accuser
			modifier = angry_opinion
			opinion = high_negative_opinion
		}
		#~accused is very grateful to you for all of this.
		reverse_add_opinion = {
			modifier = grateful_opinion
			target = scope:accused
			opinion = 100				#~I mean, fuck it, you really did them a solid here
										#~Also your empire's probably going to burn so who gives a fuck at this point
		}
		stress_impact = {
			zealous = major_stress_impact_gain
			paranoid = medium_stress_impact_gain
			just = minor_stress_impact_gain
		}
		ai_chance = {
			base = -100
			dag_cdo_adopt_new_faith_ai_will_do_modifier = yes
			ai_value_modifier = {
				ai_zeal = -0.75
				ai_compassion = 0.25
				ai_boldness = 0.25
			}
		}
	}
	after = {
		#~Would be nice if accused instantly became the realm priest
		#~Unlike half the functions in the game, fire_councillor seems to actually check to see if it should be allowed...
		#~code block more or less from lover.1006
		#~Moved into the after block in hope of overcoming YAF timing issue.
		if = {
			limit = {
				can_be_court_chaplain_trigger = { COURT_OWNER = root }
				faith = { NOT = { has_doctrine_parameter = clerical_appointment_fixed } }
			}
			if = {
				limit = {
					exists = cp:councillor_court_chaplain
					cp:councillor_court_chaplain = { 
						NOT = { 
							is_blocked_from_being_fired_from_council_trigger = { COURT_OWNER = root } 
						}
					}
				}
				fire_councillor = cp:councillor_court_chaplain
			}
			assign_councillor_type = {
				type = councillor_court_chaplain
				target = scope:accused
			}
		}
	}	
}

dag_cdo_yearly_slavery_event.2032 = {
	type = character_event
	title = dag_cdo_yearly_slavery_event.2030.t
	desc = {	
		desc = dag_cdo_yearly_slavery_event.2032.start.desc
		desc = dag_cdo_yearly_slavery_event.2030.end.desc
	}
	theme = dread
	override_background = {
		event_background = gallows
	}
	left_portrait = {
		character = scope:accuser
		animation = schadenfreude
	}
	right_portrait = {
		character = scope:accused
		animation = beg
	}
	trigger = {
		exists = root.capital_province
		any_vassal_or_below  = {
			is_available_healthy_ai_adult = yes
			culture = root.culture
		}		
	}

	weight_multiplier = {			#~Sub Event
		base = 1	
	}
	
	immediate = {
		#find accuser
		random_vassal_or_below = {
			limit = {
				is_available_healthy_ai_adult = yes
				has_dread_level_towards = { target = root level < 1 }	#~avoid generating intimidated accusers
			}
			alternative_limit = {
				is_available_healthy_ai_adult = yes
			}
			weight = {
				base = 1
				modifier = { #~More likely to pick someone that matters
					add = 0.75
					is_powerful_vassal = yes
				}
				modifier = {
					add = 0.50
					has_council_position = councillor_chancellor
				}
				modifier = {
					add = 0.25
					has_hook = root
				}
			}
			save_scope_as = accuser
		}
		#~Find criminal
		#~Currently we don't do this, so skip straight to generating one
		
		#~Backup generation
		if = {
			limit = { NOT = { exists = scope:accused } }
			create_character = {
				location = root.capital_province
				template = pool_repopulate_intrigue
				faith = scope:accuser.faith
				culture = scope:accuser.culture				#~Ideally this would by anything but, but again, cant be arsed right now
				gender_female_chance = root_attraction_based_female_chance
				save_scope_as = accused
			}
			scope:accused = { add_character_flag = dag_cdo_new_character_flag }
		}
		hidden_effect = {
			add_opinion = {
				modifier = spying_on_liege_opinion
				target = scope:accused
			}
			scope:accused = {
				set_employer = root
				trigger_event = { on_action = carn_character_initialization_pulse }
			}
		}
	}

	#~Option A: Evidence is circumstantial, release them!
	option = {
		name = dag_cdo_yearly_slavery_event.2030.a
		reverse_add_opinion = {
			target = scope:accuser
			modifier = annoyed_opinion
			opinion = low_negative_opinion
		}
		hidden_effect = {
			scope:accused = {
				if = {
					limit = { has_character_flag = dag_cdo_new_character_flag }
					death = { death_reason = death_disappearance }
				}
			}
		}
		
		stress_impact = {
			trusting = minor_stress_impact_gain
			just = minor_stress_impact_gain		
			zealous = medium_stress_impact_gain
			sadistic = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_compassion = 0.75
				ai_boldness = 0.25
				ai_energy = -0.20
			}
		}
	}

	#~Option B: --Imprison--
	option = { #throw them in the dungeon
		name = dag_cdo_yearly_slavery_event.2030.b

		scope:accused = { remove_character_flag = dag_cdo_new_character_flag }
		imprison_character_effect = {
			TARGET = scope:accused
			IMPRISONER = root
		}
		stress_impact = {
			forgiving = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_zeal = 0.75
				ai_honor = 0.25			
				ai_vengefulness = 0.25	
				ai_rationality = 0.25
			}
			modifier = {	#~safety net
				add = -100
				NOT = { has_imprisonment_reason = scope:accused }
			}
		}
	}

	#~Option C: --Enslave--
	option = { #~lock them in chains
		name = dag_cdo_yearly_slavery_event.2030.c

		trigger = {
			dag_cdo_carn_slavery_content_acceptance_trigger = yes
			dag_cdo_can_become_legal_slave_of_root_trigger = yes
		}
		scope:accused = { remove_character_flag = dag_cdo_new_character_flag }
		scope:accused = { save_scope_as = recipient }	#~For carnalitis localization
		carn_enslave_effect = {
			SLAVE = scope:accused
			OWNER = root
			DRAMA = yes
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_zeal = 0.50
				ai_vengefulness = 0.50
				ai_greed = 0.5
				ai_boldness = 0.25
			}
			modifier = {
				add = -100
				NOT = { has_execute_reason = scope:accused }
			}
		}
	}
	#~Option D: --Execute--
	option = {
		name = dag_cdo_yearly_slavery_event.2030.d

		reverse_add_opinion = {
			target = scope:accuser
			modifier = pleased_opinion
			opinion = low_positive_opinion
		}

		#~Accused killed by the event (effect includes player stress_impact).
		execute_prisoner_effect = {
			VICTIM = scope:accused
			EXECUTIONER = root
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_zeal = 0.75
				ai_vengefulness = 0.75
				ai_boldness = 0.25
				ai_compassion = -1
				ai_greed = -0.5
			}
			modifier = {
				add = -100
				NOT = { has_execute_reason = scope:accused }
			}			
		}
	}
}

dag_cdo_yearly_slavery_event.2033 = {
	type = character_event
	title = dag_cdo_yearly_slavery_event.2030.t
	desc = {	
		desc = dag_cdo_yearly_slavery_event.2033.start.desc
		desc = dag_cdo_yearly_slavery_event.2030.end.desc
	}
	theme = dread
	override_background = {
		event_background = gallows
	}
	left_portrait = {
		character = scope:accuser
		animation = schadenfreude
	}
	right_portrait = {
		character = scope:accused
		animation = beg
	}
	trigger = {
		exists = root.capital_province
		any_vassal_or_below  = {
			is_available_healthy_ai_adult = yes
		}		
	}

	weight_multiplier = {			#~Sub Event
		base = 1	
	}
	
	immediate = {
		#find accuser
		random_vassal_or_below = {
			limit = {
				is_available_healthy_ai_adult = yes
				has_dread_level_towards = { target = root level < 1 }	#~avoid generating intimidated accusers
			}
			alternative_limit = {
				is_available_healthy_ai_adult = yes
			}			
			weight = {
				base = 1
				modifier = { #~More likely to pick someone that matters
					add = 0.75
					is_powerful_vassal = yes
				}				
				modifier = {
					add = 0.50
					has_council_position = councillor_steward
				}					
				modifier = {
					add = 0.25
					has_hook = root
				}
			}
			save_scope_as = accuser
		}
		#~Find criminal
		#~Currently we don't do this, so skip straight to generating one
		
		#~Backup generation
		if = {
			limit = { NOT = { exists = scope:accused } }
			create_character = {
				location = root.capital_province
				template = servant_character
				gender_female_chance = root_attraction_based_female_chance
				dynasty = Lowborn
				save_scope_as = accused
			}
			scope:accused = { add_character_flag = dag_cdo_new_character_flag }
		}
		hidden_effect = {
			add_opinion = {
				modifier = theft_opinion
				target = scope:accused
			}
			scope:accused = {
				set_employer = root
				trigger_event = { on_action = carn_character_initialization_pulse }
			}
		}
	}

	#~Option A: Evidence is circumstantial, release them!
	option = {
		name = dag_cdo_yearly_slavery_event.2030.a
		reverse_add_opinion = {
			target = scope:accuser
			modifier = annoyed_opinion
			opinion = low_negative_opinion
		}
		hidden_effect = {
			scope:accused = {
				if = {
					limit = { has_character_flag = dag_cdo_new_character_flag }
					death = { death_reason = death_disappearance }
				}
			}
		}
		
		stress_impact = {
			trusting = minor_stress_impact_gain
			just = minor_stress_impact_gain		
			zealous = medium_stress_impact_gain
			sadistic = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_compassion = 0.75
				ai_boldness = 0.25
				ai_energy = -0.20
			}
		}
	}

	#~Option B: --Imprison--
	option = { #throw them in the dungeon
		name = dag_cdo_yearly_slavery_event.2030.b

		scope:accused = { remove_character_flag = dag_cdo_new_character_flag }
		imprison_character_effect = {
			TARGET = scope:accused
			IMPRISONER = root
		}
		stress_impact = {
			forgiving = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_zeal = 0.75
				ai_honor = 0.25			
				ai_vengefulness = 0.25	
				ai_rationality = 0.25
			}
			modifier = {	#~safety net
				add = -100
				NOT = { has_imprisonment_reason = scope:accused }
			}
		}
	}

	#~Option C: --Enslave--
	option = { #~lock them in chains
		name = dag_cdo_yearly_slavery_event.2030.c

		trigger = {
			dag_cdo_carn_slavery_content_acceptance_trigger = yes
			dag_cdo_can_become_legal_slave_of_root_trigger = yes
		}
		scope:accused = { remove_character_flag = dag_cdo_new_character_flag }
		scope:accused = { save_scope_as = recipient }	#~For carnalitis localization
		carn_enslave_effect = {
			SLAVE = scope:accused
			OWNER = root
			DRAMA = yes
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_zeal = 0.50
				ai_vengefulness = 0.50
				ai_greed = 0.5
				ai_boldness = 0.25
			}
			modifier = {
				add = -100
				NOT = { has_execute_reason = scope:accused }
			}
		}
	}
	#~Option D: --Execute--
	option = {
		name = dag_cdo_yearly_slavery_event.2030.d

		reverse_add_opinion = {
			target = scope:accuser
			modifier = pleased_opinion
			opinion = low_positive_opinion
		}

		#~Accused killed by the event (effect includes player stress_impact).
		execute_prisoner_effect = {
			VICTIM = scope:accused
			EXECUTIONER = root
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_zeal = 0.75
				ai_vengefulness = 0.75
				ai_boldness = 0.25
				ai_compassion = -1
				ai_greed = -0.5
			}
			modifier = {
				add = -100
				NOT = { has_execute_reason = scope:accused }
			}			
		}
	}
}

dag_cdo_yearly_slavery_event.2034 = {
	type = character_event
	title = dag_cdo_yearly_slavery_event.2030.t
	desc = {	
		desc = dag_cdo_yearly_slavery_event.2034.start.desc
		desc = dag_cdo_yearly_slavery_event.2030.end.desc
	}
	theme = dread
	override_background = {
		event_background = gallows
	}
	left_portrait = {
		character = scope:accuser
		animation = schadenfreude
	}
	right_portrait = {
		character = scope:accused
		animation = beg
	}
	trigger = {
		exists = root.capital_province
		any_vassal_or_below  = {
			is_available_healthy_ai_adult = yes
		}		
	}

	weight_multiplier = {			#~Sub Event
		base = 1	
	}
	
	immediate = {
		#find accuser
		random_vassal_or_below = {
			limit = {
				is_available_healthy_ai_adult = yes
				has_dread_level_towards = { target = root level < 1 }	#~avoid generating intimidated accusers
			}
			alternative_limit = {
				is_available_healthy_ai_adult = yes
			}			
			weight = {
				base = 1
				modifier = { #~More likely to pick someone that matters
					add = 0.75
					is_powerful_vassal = yes
				}				
				modifier = {
					add = 0.50
					has_council_position = councillor_marshal
				}					
				modifier = {
					add = 0.25
					has_hook = root
				}
			}
			save_scope_as = accuser
		}
		#~Find criminal
		#~Currently we don't do this, so skip straight to generating one
		
		#~Backup generation
		if = {
			limit = { NOT = { exists = scope:accused } }
			create_character = {
				location = root.capital_province
				template = peasant_faction_leader_template
				faith = scope:accuser.faith
				culture = scope:accuser.culture
				gender_female_chance = {
					if = {
						limit = { scope:accuser.faith = { has_doctrine = doctrine_gender_male_dominated } }
						add = 0
					}
					else_if = {
						limit = { scope:accuser.faith = { has_doctrine = doctrine_gender_female_dominated } }
						add = 100
					}
					else = {
						add = 50
					}
				}
				dynasty = Lowborn
				save_scope_as = accused
			}
			scope:accused = { add_character_flag = dag_cdo_new_character_flag }
		}
		hidden_effect = {
			add_opinion = {
				modifier = treachery_opinion		#~Missing localization even though it's used in the core
				target = scope:accused
			}
			scope:accused = {
				set_employer = root
				trigger_event = { on_action = carn_character_initialization_pulse }
			}
		}
	}

	#~Option A: Evidence is circumstantial, release them!
	option = {
		name = dag_cdo_yearly_slavery_event.2030.a
		reverse_add_opinion = {
			target = scope:accuser
			modifier = annoyed_opinion
			opinion = low_negative_opinion
		}
		hidden_effect = {
			scope:accused = {
				if = {
					limit = { has_character_flag = dag_cdo_new_character_flag }
					death = { death_reason = death_disappearance }
				}
			}
		}
		
		stress_impact = {
			trusting = minor_stress_impact_gain
			just = minor_stress_impact_gain		
			zealous = medium_stress_impact_gain
			sadistic = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_compassion = 0.75
				ai_boldness = 0.25
				ai_energy = -0.20
			}
		}
	}

	#~Option B: --Imprison--
	option = { #throw them in the dungeon
		name = dag_cdo_yearly_slavery_event.2030.b

		scope:accused = { remove_character_flag = dag_cdo_new_character_flag }
		imprison_character_effect = {
			TARGET = scope:accused
			IMPRISONER = root
		}
		stress_impact = {
			forgiving = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_zeal = 0.75
				ai_honor = 0.25			
				ai_vengefulness = 0.25	
				ai_rationality = 0.25
			}
			modifier = {	#~safety net
				add = -100
				NOT = { has_imprisonment_reason = scope:accused }
			}
		}
	}

	#~Option C: --Enslave--
	option = { #~lock them in chains
		name = dag_cdo_yearly_slavery_event.2030.c

		trigger = {
			dag_cdo_carn_slavery_content_acceptance_trigger = yes
			dag_cdo_can_become_legal_slave_of_root_trigger = yes
		}
		scope:accused = { remove_character_flag = dag_cdo_new_character_flag }
		scope:accused = { save_scope_as = recipient }	#~For carnalitis localization
		carn_enslave_effect = {
			SLAVE = scope:accused
			OWNER = root
			DRAMA = yes
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_zeal = 0.50
				ai_vengefulness = 0.50
				ai_greed = 0.5
				ai_boldness = 0.25
			}
			modifier = {
				add = -100
				NOT = { has_execute_reason = scope:accused }
			}
		}
	}
	#~Option D: --Execute--
	option = {
		name = dag_cdo_yearly_slavery_event.2030.d

		reverse_add_opinion = {
			target = scope:accuser
			modifier = pleased_opinion
			opinion = low_positive_opinion
		}

		#~Accused killed by the event (effect includes player stress_impact).
		execute_prisoner_effect = {
			VICTIM = scope:accused
			EXECUTIONER = root
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_zeal = 0.75
				ai_vengefulness = 0.75
				ai_boldness = 0.25
				ai_compassion = -1
				ai_greed = -0.5
			}
			modifier = {
				add = -100
				NOT = { has_execute_reason = scope:accused }
			}			
		}
	}
}

#######################
# Gifted Slave
# by Dagulus
# 2040-2041
#######################

dag_cdo_yearly_slavery_event.2040 = {
	hidden = yes
	trigger = {
		exists = root.capital_province
		dag_cdo_carn_slavery_content_acceptance_trigger = yes
		is_landed = yes
	}
	weight_multiplier = {			#~The standard for yearly events is 1
		base = 1		
		modifier = {
			add = 2
			has_trait = paranoid
		}
		modifier = {
			add = -5
			any_relation = {
				type = slave
				count > 5
			}
		}
		dag_cdo_create_character_event_weight_modifier = yes
	}	
	option = {
		trigger_event = {
			on_action = dag_cdo_yearly_slavery_event_2030_event_selection
		}
	}
}

dag_cdo_yearly_slavery_event.2041 = {
	type = character_event
	title = dag_cdo_yearly_slavery_event.2040.t
	desc = {	
		desc = dag_cdo_yearly_slavery_event.2040.start.desc
		desc = dag_cdo_yearly_slavery_event.2040.end.desc
	}
	left_portrait = scope:slave_owner
	right_portrait = scope:gifted_slave
	theme = diplomacy
	
	trigger = {
		dag_cdo_carn_slavery_content_acceptance_trigger = yes
		any_neighboring_realm_same_rank_owner = {
			is_available_ai_adult = yes
			NOR = {
				has_important_relationship_with_root_trigger = yes
				has_any_bad_relationship_with_root_trigger = yes
			}
		}
	}

	weight_multiplier = {			#~Sub Event
		base = 1	
	}

	immediate = {
		random_neighboring_and_across_water_realm_same_rank_owner = {
			limit = {
				is_available_ai_adult = yes
				NOR = {
					has_important_relationship_with_root_trigger = yes
					has_any_bad_relationship_with_root_trigger = yes
				}
			}
			save_scope_as = slave_owner
		}
		hidden_effect = {
			dag_cdo_create_slave_excellent_effect = { OWNER = scope:slave_owner }
			scope:created_character = { save_scope_as = gifted_slave }	#~Do you see what I did there?
		}
	}

	option = {
		name = dag_cdo_yearly_slavery_event.2040.a

		dag_cdo_transfer_root_slave_effect = {
			SLAVE = scope:gifted_slave
			OWNER = scope:slave_owner
			RECIPIENT = root
		}
		stress_impact = {
			shy = minor_stress_impact_gain
			paranoid = medium_stress_impact_gain
		}
		ai_chance = {
			base = 1
			ai_value_modifier = {
				ai_compassion = 0.25
			}
			modifier = {
				add = 2
				has_trait = trusting
			}
		}
	}

	option = {
		name = dag_cdo_yearly_slavery_event.2040.b
		reverse_add_opinion = {
			target = scope:slave_owner
			modifier = annoyed_opinion
			opinion = low_negative_opinion
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_greed = 0.75
			}
			modifier = {
				add = 20
				has_trait = paranoid
			}
		}
	}
}

dag_cdo_yearly_slavery_event.2042 = {
	type = character_event
	title = dag_cdo_yearly_slavery_event.2040.t
	desc = {	
		desc = dag_cdo_yearly_slavery_event.2042.start.desc
		desc = dag_cdo_yearly_slavery_event.2040.end.desc
	}
	left_portrait = scope:slave_owner
	right_portrait = scope:gifted_slave
	theme = diplomacy
	
	trigger = {
		dag_cdo_carn_slavery_content_acceptance_trigger = yes
		any_vassal = {
			is_available_ai_adult = yes
			NOR = {
				has_important_relationship_with_root_trigger = yes
				has_any_bad_relationship_with_root_trigger = yes
			}
		}
	}

	weight_multiplier = {			#~Sub Event
		base = 1	
	}

	immediate = {
		random_vassal = {
			limit = {
				is_available_ai_adult = yes
				NOR = {
					has_important_relationship_with_root_trigger = yes
					has_any_bad_relationship_with_root_trigger = yes
				}
			}
			save_scope_as = slave_owner
		}
		hidden_effect = {
			dag_cdo_create_slave_excellent_effect = { OWNER = scope:slave_owner }
			scope:created_character = { save_scope_as = gifted_slave }	#~Do you see what I did there?
		}
	}

	option = {
		name = dag_cdo_yearly_slavery_event.2040.a

		dag_cdo_transfer_root_slave_effect = {
			SLAVE = scope:gifted_slave
			OWNER = scope:slave_owner
			RECIPIENT = root
		}
		stress_impact = {
			shy = minor_stress_impact_gain
			paranoid = medium_stress_impact_gain
		}
		ai_chance = {
			base = 1
			ai_value_modifier = {
				ai_compassion = 0.25
			}
			modifier = {
				add = 2
				has_trait = trusting
			}
		}
	}

	option = {
		name = dag_cdo_yearly_slavery_event.2040.b
		reverse_add_opinion = {
			target = scope:slave_owner
			modifier = annoyed_opinion
			opinion = low_negative_opinion
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_greed = 0.75
			}
			modifier = {
				add = 20
				has_trait = paranoid
			}
		}
	}
}

dag_cdo_yearly_slavery_event.2043 = {
	type = character_event
	title = dag_cdo_yearly_slavery_event.2040.t
	desc = {	
		desc = dag_cdo_yearly_slavery_event.2043.start.desc
		desc = dag_cdo_yearly_slavery_event.2040.end.desc
	}
	left_portrait = scope:slave_owner
	right_portrait = scope:gifted_slave
	theme = diplomacy
	
	trigger = {
		dag_cdo_carn_slavery_content_acceptance_trigger = yes
		exists = liege
		liege = {
			is_available_ai_adult = yes
			NOR = {
				has_important_relationship_with_root_trigger = yes
				has_any_bad_relationship_with_root_trigger = yes
			}
		}
	}

	weight_multiplier = {			#~Sub Event
		base = 1	
	}

	immediate = {
		liege = { save_scope_as = slave_owner }
		hidden_effect = {
			dag_cdo_create_slave_excellent_effect = { OWNER = scope:slave_owner }
			scope:created_character = { save_scope_as = gifted_slave }	#~Do you see what I did there?
		}
	}

	option = {
		name = dag_cdo_yearly_slavery_event.2040.a

		dag_cdo_transfer_root_slave_effect = {
			SLAVE = scope:gifted_slave
			OWNER = scope:slave_owner
			RECIPIENT = root
		}
		stress_impact = {
			shy = minor_stress_impact_gain
			paranoid = medium_stress_impact_gain
		}
		ai_chance = {
			base = 1
			ai_value_modifier = {
				ai_compassion = 0.25
			}
			modifier = {
				add = 2
				has_trait = trusting
			}
		}
	}

	option = {
		name = dag_cdo_yearly_slavery_event.2040.b
		reverse_add_opinion = {
			target = scope:slave_owner
			modifier = annoyed_opinion
			opinion = low_negative_opinion
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_greed = 0.75
			}
			modifier = {
				add = 20
				has_trait = paranoid
			}
		}
	}
}

dag_cdo_yearly_slavery_event.2044 = {
	type = character_event
	title = dag_cdo_yearly_slavery_event.2040.t
	desc = {	
		desc = dag_cdo_yearly_slavery_event.2044.start.desc
		desc = dag_cdo_yearly_slavery_event.2040.end.desc
	}
	left_portrait = scope:slave_owner
	right_portrait = scope:gifted_slave
	theme = diplomacy
	
	trigger = {
		dag_cdo_carn_slavery_content_acceptance_trigger = yes
		faith = {
			has_doctrine = doctrine_spiritual_head
			exists = religious_head
			religious_head = {
				is_available_ai_adult = yes
				NOR = {
					has_important_relationship_with_root_trigger = yes
					has_any_bad_relationship_with_root_trigger = yes
				}
			}
		}
	}

	weight_multiplier = {			#~Sub Event
		base = 1	
	}

	immediate = {
		faith = {
			religious_head = { save_scope_as = slave_owner }
		}
		hidden_effect = {
			dag_cdo_create_slave_excellent_effect = { OWNER = scope:slave_owner }
			scope:created_character = { save_scope_as = gifted_slave }	#~Do you see what I did there?
		}
	}

	option = {
		name = dag_cdo_yearly_slavery_event.2040.a

		dag_cdo_transfer_root_slave_effect = {
			SLAVE = scope:gifted_slave
			OWNER = scope:slave_owner
			RECIPIENT = root
		}
		stress_impact = {
			shy = minor_stress_impact_gain
			paranoid = medium_stress_impact_gain
		}
		ai_chance = {
			base = 1
			ai_value_modifier = {
				ai_compassion = 0.25
			}
			modifier = {
				add = 2
				has_trait = trusting
			}
		}
	}

	option = {
		name = dag_cdo_yearly_slavery_event.2040.b
		reverse_add_opinion = {
			target = scope:slave_owner
			modifier = annoyed_opinion
			opinion = low_negative_opinion
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_greed = 0.75
			}
			modifier = {
				add = 20
				has_trait = paranoid
			}
		}
	}
}





