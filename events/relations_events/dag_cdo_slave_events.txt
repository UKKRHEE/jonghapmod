namespace = dag_cdo_slave_event

#0008.Slave Divorce Cleanup		(fired from on_divorce && on_concubinage_end)
#0009.Slave Concubinage Cleanup	(fired from on_concubinage)
#0010.Slave Marriage Cleanup	(fired from on_marriage)
#0011.Slave Escaped Event 		(fired from quarterly_playable_pulse)

##########################################
# Slave Divorce Cleanup
# by Dagulus
# 0008
##########################################
#~fired from on_divorce
#~fired from on_concubinage_end

dag_cdo_slave_event.0008 = {

	hidden = yes

	trigger = { has_game_rule = carn_slavery_content_enabled }

	# Option A: --root buys scope:concubine--
	option = {
		trigger = { has_trait = slave }
		scope:concubine = { remove_character_flag = carn_slave_cannot_be_sold }
		ai_chance = { base = 1000 }
	}
	# Option B: --this event never should have happened--
	option = {
		ai_chance = { base = 0 }			
	}
}

##########################################
# Slave Concubinage Cleanup
# by Dagulus
# 0009
##########################################
#~fired from on_concubinage

# Character becomes another's concubine
# root = the concubinist
# scope:concubine = the concubine

dag_cdo_slave_event.0009 = {

	hidden = yes

	trigger = { has_game_rule = carn_slavery_content_enabled }

	# Option A: --root buys scope:concubine--
	option = {
		trigger = {
			NOT = { has_trait = slave }
			scope:concubine = { 
				has_trait = slave 
				NOT = { has_relation_slave_owner = root }	#You do not want to be buying your own slave
			}
		}
		dag_cdo_actor_buys_slave_effect = { ACTOR = root SLAVE = scope:concubine }
		scope:concubine = { add_character_flag = { flag = carn_slave_cannot_be_sold } }
		ai_chance = { base = 1000 }
	}
	# Option B: --this event never should have happened--
	option = {
		ai_chance = { base = 0 }			
	}
}

##########################################
# Slave Marriage Cleanup
# by Dagulus
# 0010
##########################################
#~This only fires on_marriage
#~As of Carnalitas version 1.3.6 looks like slaves can no longer marry, but left this event in case this restriction is lifted or nodded.
#~It is not so much a restriction as a guideline, my own marry slave event worked fine as it completely ignores the trait flag.

#~Characters getting married
#~root = Major partner of the marriage
#~scope:spouse = Minor partner of the marriage

dag_cdo_slave_event.0010 = {

	hidden = yes

	trigger = { has_game_rule = carn_slavery_content_enabled }

	# Option A: --root buys scope:spouse--
	option = {
		trigger = {
			NOT = { has_trait = slave }
			scope:spouse = { 
				has_trait = slave 
				NOT = { has_relation_slave_owner = root }
			}
		}
		dag_cdo_actor_buys_slave_effect = { ACTOR = root SLAVE = scope:spouse }
		scope:spouse = { add_character_flag = { flag = carn_slave_cannot_be_sold } }
		ai_chance = { base = 1000 }
	}
	# Option B: --scope:spouse buys root--
	option = {
		trigger = {
			has_trait = slave
			NOT = { has_relation_slave_owner = scope:spouse }
			scope:spouse = { NOT = { has_trait = slave } }
		}
		dag_cdo_actor_buys_slave_effect = { ACTOR = scope:spouse SLAVE = root }
		add_character_flag = { flag = carn_slave_cannot_be_sold }
		ai_chance = { base = 1000 }
	}
	# Option C: --this event never should have happened--
	option = {
		ai_chance = { base = 0 }
	}
}

##########################################
# Escaped Slave
# by Dagulus
# 0011
##########################################
#~This only fires if a slave exists and is not at your location (well in theory)
#~This should never happen, but will if mods are running that do not respect the courtier_allowed_to_leave_trigger
#~Many core systems like marriage do not respect courtier_allowed_to_leave_trigger
#~This mod often does not respect the courtier_allowed_to_leave_trigger as I only discovered it existed 5min ago
#~The base game location code appears to be utterly unpredictable

#[19:35:40][jomini_script_system.cpp:169]: Script system error! Error: set_employer effect [ Trying to put character in the court they're already in ] Script location: file: events/relations_events/dag_cdo_slave_events.txt line: 161 
#The above line indicates we are still generating false negatives on the trigger

dag_cdo_slave_event.0011 = {

	type = character_event
	title = dag_cdo_slave_event.0011.t
	desc = dag_cdo_slave_event.0011.desc
	left_portrait = root
	right_portrait = scope:slave
	theme = intrigue

	trigger = {
		exists = root.capital_province
		has_game_rule = carn_slavery_content_enabled
		has_game_rule = dag_cdo_recapture_slave_event_enabled
		any_hooked_character = {
			has_relation_slave_owner = root
			NOR = {										#~This whole trigger seems to have has issues with false negatives
				is_at_same_location = root
				is_in_the_same_court_as_or_guest = root
				is_imprisoned_by = root
			}
		}
	}

	immediate = {
		hidden_effect = {
			root.capital_county = { save_scope_as = court_location }
			random_hooked_character = {
				limit = {
					has_relation_slave_owner = root
					NOR = {
						is_at_same_location = root
						is_in_the_same_court_as_or_guest = root 
						is_imprisoned_by = root		
					}
				}
				save_scope_as = slave
			}		
		}
	}
	
	# Option A: --Have my agents retrieve them--
	option = {
		name = dag_cdo_slave_event.0011.a
		duel = {
			skill = intrigue
			value = 10
			30 = {
				desc = dag_cdo_slave_event.0011.b.success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 0.5
				}
				send_interface_toast = {
					title = dag_cdo_slave_event.0011.b.success
					left_icon = root
					
					scope:slave = {
						if = {
							limit = {
								NOT = {
									is_courtier_of = root 
								}
							}
							hidden_effect = { set_employer = root }
						}
						return_to_court = yes
					}
				}
			}
			10 = {
				desc = dag_cdo_slave_event.0011.b.failure
				send_interface_toast = {
					title = dag_cdo_slave_event.0011.b.failure
					left_icon = root
					scope:slave = {
						carn_free_slave_effect = yes
					}
					add_opinion = {
						modifier = dag_cdo_my_escaped_slave_opinion
						target = scope:slave
					}
				}
			}
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_boldness = 0.25
				ai_energy = 0.25
				ai_honor = 0.5
				ai_vengefulness = 1
			}
		}
	}
		
	# Option B: --They are not worth my time--
	option = {
		name = dag_cdo_slave_event.0011.b
		
		scope:slave = {
			carn_free_slave_effect = yes
		}

		stress_impact = {
			diligent = minor_stress_impact_gain
			just = minor_stress_impact_gain
		}

		ai_chance = {
			base = 20
			ai_value_modifier = {
				ai_compassion = -0.5
				ai_energy = -1
			}
		}
	}
}
