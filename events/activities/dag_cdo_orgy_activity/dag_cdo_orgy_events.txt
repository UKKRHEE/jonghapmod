#######################
# 0001 - Ending event
# 1001-1005 - Functionality events
# 9999 - Fallback event for when no other events trigger

namespace = dag_cdo_orgy

scripted_trigger dag_cdo_orgy_end_events_participant_trigger = {
	NOT = { this = scope:host }
	is_alive = yes
	is_imprisoned = no
}

#End events setup
dag_cdo_orgy.0001 = {
	type = character_event
	hidden = yes

	trigger = {
		exists = scope:activity
	}
	
	immediate = {
		if = {
			limit = {
				OR = {
					#~Everyone has wrapped up their events
					scope:activity = {
						debug_log_details = checking_participants
						any_participant = {
							count = all
							trigger_if = {
								limit = {
									is_alive = yes
									is_imprisoned = no
								}
								save_temporary_scope_as = participant_check
								scope:activity = {
									is_target_in_variable_list = {
										name = finished_participants
										target = scope:participant_check
									}
								}
							}
							trigger_else = { always = yes }
						}
					}
					#~There exists a special exception
					exists = scope:activity.var:end_orgy_now			#~Set if an event destroys the orgy
																		#~Unlikely to be needed, end_feast_now is only used by the murder feast. 
					#~Has attempted to wrap up the feast already
					AND = {
						trigger_if = {
							limit = {
								exists = scope:activity.var:attempted_to_end_orgy
							}
							scope:activity.var:attempted_to_end_orgy > 2
						}
						trigger_else = {
							always = no
						}
					}
				}
			}
			scope:activity = {
				activity_owner = {
					save_scope_as = host
				}

				every_participant = {
					limit = { dag_cdo_orgy_end_events_participant_trigger = yes }
					trigger_event = dag_cdo_orgy.1004
				}
				activity_owner = {
					trigger_event = dag_cdo_orgy.1003
				}
			}
		}
		if = {
			limit = { NOT = { exists = scope:activity.var:attempted_to_end_orgy } }
			scope:activity = {
				set_variable = {
					name = attempted_to_end_orgy
					value = 1
				}
			}
		}
		else = {
			scope:activity = {
				change_variable = {
					name = attempted_to_end_orgy
					add = 1
				}
			}
		}
		trigger_event = {
			id = dag_cdo_orgy.0001
#			days = 20						#~This appears to be the key value for how long the orgy lasts: Feast is set to 20
			days = 10
			
		}
	}
}

dag_cdo_orgy.0003 = {
	type = character_event
	title = dag_cdo_orgy.0003.t
	desc = dag_cdo_orgy.0003.desc
	theme = dag_cdo_theme_orgy_activity
	override_background = {
		event_background = courtyard
	}
	left_portrait = scope:inviter
	right_portrait = scope:new_guest
	
	trigger = {
		scope:activity = {
			any_participant = {
				dag_cdo_orgy_default_participant_trigger = yes
			}
		}
	}

	weight_multiplier = {	#~The standard for yearly events is 1
		base = 1
		modifier = {
			add = 0.5
			scope:activity = { any_participant = { count < 5 } }		
		}
		dag_cdo_create_character_event_weight_modifier = yes
	}

	immediate = {
		hidden_effect = {
			capital_province = { save_scope_as = capital }

			#Find inviter
			scope:activity = {
				random_participant = {
					limit = {
						dag_cdo_orgy_default_participant_trigger = yes
						NOT = { is_courtier_of = root }
					}
					alternative_limit = {
					 	dag_cdo_orgy_default_participant_trigger = yes
					}
					alternative_limit = {	#~Added trigger so now this line should never be needed because I blame it for all the errors.
						always = yes		#~Doing the above had no fucking effect
					}
					save_scope_as = inviter
				}
			}

			#50% chance of pool character guest, 50% chance of new guest
			random = {
				chance = 50
				random_pool_character = {
					province = capital_province
					limit = {
						dag_cdo_orgy_potential_guest_trigger = yes
						save_temporary_scope_as = potential_guest
						AND = {
							matching_gender_and_sexuality_trigger = { CHARACTER_1 = scope:potential_guest CHARACTER_2 = scope:inviter }
							OR = {
								has_trait = beauty_good
								has_trait = lustful
								has_trait = lifestyle_prostitute
								has_trait = seducer
							}
						}
					}
					alternative_limit = {
						AND = {
							dag_cdo_orgy_potential_guest_trigger = yes
							save_temporary_scope_as = potential_guest
							matching_gender_and_sexuality_trigger = { CHARACTER_1 = scope:potential_guest CHARACTER_2 = scope:inviter }
						}
					}
					save_scope_as = new_guest
				}
			}

			if = {
				limit = { NOT = { exists = scope:new_guest } }
				dag_cdo_create_orgy_guest_effect = { WHO = scope:inviter }
				scope:created_character = { save_scope_as = new_guest }
			}
		}
	}

	#You are very welcome!
	option = {
		name = dag_cdo_orgy.0003.a
		
		scope:activity = {
			hidden_effect = { invite_character_to_activity = scope:new_guest }
			accept_invitation_for_character = scope:new_guest
		}
		scope:new_guest = {
			add_character_flag = {
				flag = orgy_new_guest
				days = 30
			}
			trigger_event = {	#~Because were are now after the part of the activity that gives start events
				on_action = dag_cdo_orgy_start_events
				days = 4	
			}			
		}
		reverse_add_opinion = {
			target = scope:new_guest
			modifier = grateful_opinion
			opinion = 15
		}
		reverse_add_opinion = {
			target = scope:inviter
			modifier = grateful_opinion
			opinion = 15
		}
		stress_impact = {
			#~If this effects you, you probably should not have pressed the Host Orgy button tbh.
			paranoid = minor_stress_impact_gain
			shy = minor_stress_impact_gain
		}		
		ai_chance = {
			base = 20
			opinion_modifier = { # Opinion Factor
				who = root
				opinion_target = scope:inviter
				multiplier = 0.25
			}
			modifier = {
				dag_cdo_wishes_to_lay_with_TARGET_trigger = { TARGET = scope:new_guest }
				add = { 
					value = dag_cdo_ai_lasciviousness_value 	#~ +/-25
					multiply = 0.25
				}
			}
		}
	}

	#Guest of honor!
	option = {
		name = dag_cdo_orgy.0003.b
		
		scope:activity = {
			hidden_effect = { invite_character_to_activity = scope:new_guest }
			accept_invitation_for_character = scope:new_guest
		}
		scope:new_guest = {
			add_character_flag = {
				flag = orgy_new_guest
				days = 30
			}
			trigger_event = {	#~Because were are now after the part of the activity that gives start events
				on_action = dag_cdo_orgy_start_events
				days = 4	
			}
		}
		reverse_add_opinion = {
			target = scope:new_guest
			modifier = grateful_opinion
			opinion = 30
		}
		reverse_add_opinion = {
			target = scope:inviter
			modifier = envy_opinion
			opinion = -10
		}
		stress_impact = {
			paranoid = minor_stress_impact_gain
			shy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			opinion_modifier = { # Opinion Factor
				who = root
				opinion_target = scope:inviter
				multiplier = 0.25
			}
			modifier = {
				dag_cdo_wishes_to_lay_with_TARGET_trigger = { TARGET = scope:new_guest }
				add = { 
					value = dag_cdo_ai_lasciviousness_value 	#~ +/-50
					multiply = 0.5
				}
			}
		}
	}

	#Invitations only, sorry
	option = {
		name = dag_cdo_orgy.0003.c
		
		reverse_add_opinion = {
			target = scope:new_guest
			modifier = disappointed_opinion
			opinion = -15
		}
		reverse_add_opinion = {
			target = scope:inviter
			modifier = disappointed_opinion
			opinion = -15
		}
		ai_chance = {
			base = 10
		}
	}
}


# Invitation letter
dag_cdo_orgy.1001 = {
	type = letter_event
	opening = dag_cdo_orgy.1001.t
	desc = dag_cdo_orgy.1001.desc
	sender = {															#~this is not the same as scope:sender 
		character = scope:host
		hide_info = yes
	}

	trigger = {
		NOT = { this = scope:host }
	}

	immediate = {
		scope:activity.activity_owner = { save_scope_as = host }
		
		set_variable = {
			name = dag_test_ai_lasciviousness_value
			value = dag_cdo_ai_lasciviousness_value
		}
#		set_variable = {
#			name = dag_test_sexual_prowess_value
#			value = dag_cdo_sexual_prowess_value
#		}
		#scope:activity.activity_owner = { save_scope_as = sender }	
		#~Lets avoid using scope:sender to avoid repeating the whole scope:root fiasco
	}

  	#Yes!
	option = {
		name = dag_cdo_orgy.1001.a

		play_music_cue = "mx_cue_seduction"
		scope:activity = {
			accept_invitation_for_character = prev
		}
				
		trigger = {
			or = {
				is_ai = no										#~player always gets to choose
				dag_cdo_may_sleep_around_trigger = yes			#~otherwise only swingers even consider the letter
			}
		}

		set_variable = {
			name = booked_for_a_party
			value = scope:host
			days = 20
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				#ai_sociability#	#~This is mainly based on Gregarious, so DO NOT USE
				ai_boldness = 0.2
				ai_energy = 0.1
			}
			modifier = {
				add = { value = dag_cdo_ai_lasciviousness_value	}	#~(+/- 100)
			}
			modifier = {
				add = 25
				faith = {
					trait_is_virtue = lustful 
					#has_doctrine = tenet_carnal_exaltation	#~because Carnalitas Mundi removes this, use trait_is_virtue = lustful instead
				}
			}
			modifier = {	#~This obviously is very timing dependent, but no generated no errors so far.
				add = 25
				scope:activity = {
					any_participant = {
						is_spouse_or_romantic_partner_of_root = yes
						NOT = { dislikes_partner_cheating_trigger = { PARTNER = root } }
					}
				}
			}
		}
	}

	#No...
	option = {
		name = dag_cdo_orgy.1001.b
		scope:activity = {
			decline_invitation_for_character = prev
		}

		ai_chance = {
			base = 75
			ai_value_modifier = {
				ai_honor = 0.2
				ai_zeal = 0.2
				ai_greed = 0.1			#~we are not paying to host it, but you still have to pay to get there			
				ai_rationality = 0.1
			}
			modifier = {				#~(+/- 100)
				add = { 
					value = dag_cdo_ai_lasciviousness_value	
					multiply = -1.0		#~NB: not multiplier 
				}
			}			
			modifier = {
				add = 25
				faith = {
					trait_is_sin = lustful
				}
			}
			modifier = {
				add = 25
				any_spouse  = {
					dislikes_partner_cheating_trigger = { PARTNER = root }
					NOT = { dag_cdo_has_submissive_relation_trigger = { DOMINANT = root } }
				}
			}
		}
	}
}

# No guests came :(
dag_cdo_orgy.1002 = {
	type = character_event
	title = dag_cdo_orgy.1002.t
	desc = dag_cdo_orgy.1002.desc
	theme = dag_cdo_theme_orgy_activity
	override_background = {
		event_background = study
	}
	left_portrait = {
		character = root
		animation = sadness
	}

	option = {
		name = dag_cdo_orgy.1002.a
		
		scope:activity = {
			complete_activity = yes
		}
	}
}

# End for host
dag_cdo_orgy.1003 = {
	type = character_event
	title = dag_cdo_orgy.1003.t
	desc = {
		desc = dag_cdo_orgy.1003.start.desc
		desc = dag_cdo_orgy.1003.end.desc
	}
	theme = dag_cdo_theme_orgy_activity
	override_background = {
		event_background = corridor_night
	}
	left_portrait = {
		character = root
		animation = ecstasy
	}

	trigger = { exists = scope:activity }

	immediate = {
		scope:activity.activity_owner = { save_scope_as = host }
	}
	
	option = {
		name = dag_cdo_orgy.1003.a
		add_prestige = medium_prestige_gain
		scope:activity = {
			every_participant = {
				limit = { NOT = { this = root } }
				custom = every_guest_scope_tt
				add_opinion = {
					target = root
					modifier = dag_cdo_feast_hosted_successful_orgy
				}
			}
		}
		scope:activity = {
			complete_activity = yes
		}
		dag_cdo_orgy_end_effect = yes
	}
}

#Guest end event
dag_cdo_orgy.1004 = {
	type = character_event
	title = dag_cdo_orgy.1003.t
	desc = {
		desc = dag_cdo_orgy.1004.start.desc
		desc = dag_cdo_orgy.1003.end.desc
	}
	theme = dag_cdo_theme_orgy_activity
	override_background = {
		event_background = courtyard
	}
	left_portrait = {
		character = root
		animation = ecstasy
	}
	right_portrait = {
		character = scope:host
		animation = happiness
	}

	option = {
		name = dag_cdo_orgy.1003.a
		custom_tooltip = dag_cdo_orgy.1004.tt
		reverse_add_opinion = {
			target = scope:host
			modifier = dag_cdo_feast_attended_my_orgy_opinion
		}
		dag_cdo_orgy_end_effect = yes		
	}
}

# I'm coming up, so you better get this orgy started
dag_cdo_orgy.1005 = {
	type = character_event
	title = dag_cdo_orgy.1005.t
	desc = dag_cdo_orgy.1005.desc
	theme = dag_cdo_theme_orgy_activity
	left_portrait = root
	#play_music_cue = "mx_cue_seduction"
	
	trigger = {
		this = scope:activity.activity_owner
	}
	
	immediate = {
		play_music_cue = mx_cue_banquet
		#get nakkid
		dag_cdo_orgy_attire_effect = yes
		dag_cdo_orgy_consequences_effect = yes
		#Reveler lifestyle tracking:
		reveler_points_gain_effect = {
			CHANGE = 4
			RANDOM_CHANGE = 2
		}		
		#start events				
		trigger_event = {
			on_action = dag_cdo_orgy_event_selection
			days = 2
		}
		# Ending event to be triggered in a number of days
		trigger_event = {
			id = dag_cdo_orgy.0001
			days = max_feast_duration
		}
	}
	option = {
		name = dag_cdo_orgy.1005.a
		custom_tooltip = dag_cdo_orgy.1005.tt
	}
}

# GUESTS: TIME TO START THE ORGY!
# Generic start event
dag_cdo_orgy.1006 = {
	type = character_event
	title = dag_cdo_orgy.1006.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					OR = {
						has_relation_rival = scope:activity.activity_owner
					}
					reverse_opinion = {
						target = scope:activity.activity_owner
						value < -40
					}
				}
				desc = dag_cdo_orgy.1006.dislikes_host
			}
			desc = dag_cdo_orgy.1006.likes_host
		}
	}
	theme = dag_cdo_theme_orgy_activity
	left_portrait = {
		character = scope:activity.activity_owner
		animation = happiness
	}

	trigger = {
		# Guests only.
		NOT = { this = scope:activity.activity_owner }
	}

	immediate = {
		play_music_cue = mx_cue_banquet
		#get nakkid
		dag_cdo_orgy_attire_effect = yes
		dag_cdo_orgy_consequences_effect = yes
		#Reveler lifestyle tracking:
		reveler_points_gain_effect = {
			CHANGE = 1
			RANDOM_CHANGE = 1
		}
		#Remove blocker for invitations to feasts (the feast is now active and will work as a blocker)
		remove_variable = booked_for_a_party		
		#start events
		trigger_event = {
			on_action = dag_cdo_orgy_event_selection
			days = 2
		}
	}

	option = {
#		name = {
#			trigger = { has_trait = gluttonous }
#			text = dag_cdo_orgy.1006.a.gluttonous
#		}
#		name = {
#			trigger = { has_trait = drunkard }
#			text = dag_cdo_orgy.1006.a.drunkard
#		}
#		name = {
#			trigger = { has_trait = gregarious }
#			text = dag_cdo_orgy.1006.a.gregarious
#		}
		name = {
			trigger = { has_trait = shy }
			text = dag_cdo_orgy.1006.a.shy
		}
		name = {
			text = dag_cdo_orgy.1006.a
		}
	}

	option = {
		trigger = {
			opinion = {
				target = scope:activity.activity_owner
				value < 0
			}
		}
		exclusive = yes
		name = dag_cdo_orgy.1006.b	
	}
}



#################
# Feast Support
#################
# Feast reroll event - in case no event is available
# NB: Event 1001 should always be available as it has no trigger conditions
# So not sure this should ever fire
dag_cdo_orgy.9999 = {
	hidden = yes

	trigger = {
		exists = scope:activity
	}

	immediate = {
		dag_cdo_orgy_wrap_up_or_fire_random_event_effect = yes	
	}
}

