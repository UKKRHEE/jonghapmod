namespace = dag_cdo_orgy_random

#~ORGY ACTIVITY RANDOM EVENTS

#	dag_cdo_orgy_random.1001	# Sleep with someone (regular)
#	dag_cdo_orgy_random.1002	# Sleep with someone (spouse/lover -> soulmate)
#	dag_cdo_orgy_random.1003	# Sleep with someone (soulmate)
#	dag_cdo_orgy_random.1004	# Sleep with someone (new guest)

#	dag_cdo_orgy_random.1006	# Threesome (regular)

#	dag_cdo_orgy_random.2001 	# Blowjob Competition
#	dag_cdo_orgy_random.2002	# A Disobedient Slave
#	dag_cdo_orgy_random.2008	# Demanding Service
#	dag_cdo_orgy_random.2009	# Three is a crowd
#	dag_cdo_orgy_random.2010	# Marital Troubles

#	dag_cdo_orgy_random.3000	# AI guest wants to fuck the player

#####################
# Sleep with someone (regular)
# by Dagulus
# 1001
#####################

#Sleep with someone (regular)
dag_cdo_orgy_random.1001 = {
	type = character_event
	title = dag_cdo_orgy_random.1001.t
	desc = {
		desc = dag_cdo_orgy_random.1001.start.desc
		desc = dag_cdo_orgy_random.1001.regular.desc
		desc = dag_cdo_orgy_random.1001.end.desc
	}
	theme = dag_cdo_theme_orgy_activity
	left_portrait = {
		character = scope:sex_partner
		animation = flirtation
	}

	trigger = {
		OR = {
			is_ai = no	#~player always opts in
			scope:activity = {
				any_participant = {
					dag_cdo_orgy_default_participant_trigger = yes
					root = { dag_cdo_wishes_to_lay_with_TARGET_trigger = { TARGET = prev } }
				}
			}
		}
	}

	weight_multiplier = {	#~The standard for orgy events is 1
		base = 0.75			#~This is the vanilla event for when we can't really find anything else
		dag_cdo_create_character_orgy_event_weight_modifier = yes
	}

	immediate = {
		dag_cdo_find_orgy_partner_effect = { ACTIVITY = scope:activity }
	}

	#~Yes
	option = {
		name = dag_cdo_orgy_random.1001.a
		#~ideally we would fire some sort of sex_scene here
		#~But the ones we have are a) inappropriate
		#~and B) often fuck up the is_naked flag

		carn_had_sex_with_effect = {
			CHARACTER_1 = root
			CHARACTER_2 = scope:sex_partner
			C1_PREGNANCY_CHANCE = pregnancy_chance
			C2_PREGNANCY_CHANCE = pregnancy_chance
			STRESS_EFFECTS = yes
			DRAMA = yes
		}
		dag_cdo_orgy_add_opinion_after_sex_effect = { PARTNER = scope:sex_partner }
		ai_chance = {
			base = 50
			modifier = {			
				add = { 
					value = dag_cdo_ai_lasciviousness_value 	#~ +/-50
					multiply = 0.5
				}
			}
			modifier = {
				add = -500
				OR = {
					root = { has_contagious_disease_trigger = yes }
					scope:sex_partner = { has_contagious_disease_trigger = yes }
				}
			}
		}
	}

	#~No
	option = {
		name = dag_cdo_orgy_random.1001.b
		custom_tooltip = dag_cdo_orgy_random.1001.b.tt
		reverse_add_opinion = {
			target = scope:sex_partner
			modifier = disappointed_opinion
			opinion = -15
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 50
				NOT = { dag_cdo_wishes_to_lay_with_TARGET_trigger = { TARGET = scope:sex_partner } }
			}
		}		
	}
	after = {
		hidden_effect = {
			dag_cdo_orgy_wrap_up_or_fire_random_event_effect = yes
		}
	}	
}

#####################
# Sleep with someone (spouse/lover -> soulmate)
# by Dagulus
# 1002
#####################

#~Sleep with someone (spouse/lover -> soulmate)
dag_cdo_orgy_random.1002 = {
	type = character_event
	title = dag_cdo_orgy_random.1002.t
	desc = {
		desc = dag_cdo_orgy_random.1001.start.desc
		desc = dag_cdo_orgy_random.1002.end.desc
	}
	theme = dag_cdo_theme_orgy_activity
	left_portrait = {
		character = scope:sex_partner
		animation = love
	}

	trigger = {
		NOT = { exists = local_var:had_dag_cdo_1002 }
		scope:activity = {
			any_participant = {
				dag_cdo_orgy_default_participant_trigger = yes
				upgrade_ready_lover_to_soulmate_trigger = { CHARACTER = root }
				OR = {
					is_consort_of = root
					has_relation_lover = root
				}
			}
		}
	}

	weight_multiplier = {	#The standard for orgy events is 1
		base = 1
	}

	immediate = {
		hidden_effect = {
			set_local_variable = {
				name = had_dag_cdo_1002
				value = yes
			}
		}	
		root = { save_scope_as = actor }
		scope:activity = {
			random_participant = {
				limit = {
					dag_cdo_orgy_default_participant_trigger = yes
					upgrade_ready_lover_to_soulmate_trigger = { CHARACTER = root }
					OR = {
						is_consort_of = scope:actor
						has_relation_lover = scope:actor 
					}
				}
				save_scope_as = sex_partner
			}
		}
	}

	#Yes
	option = {
		name = dag_cdo_orgy_random.1002.a
		if = {
			limit = { upgrade_ready_lover_to_soulmate_trigger = { CHARACTER = scope:sex_partner } }
			set_relation_soulmate = scope:sex_partner
		}
		
		#~Ideally we would fire some sort of sex_scene here
		#~But the ones we have are a) inappropriate
		#~and B) often fuck up the is_naked flag

		carn_had_sex_with_effect = {
			CHARACTER_1 = root
			CHARACTER_2 = scope:sex_partner
			C1_PREGNANCY_CHANCE = pregnancy_chance
			C2_PREGNANCY_CHANCE = pregnancy_chance
			STRESS_EFFECTS = yes
			DRAMA = yes
		}
		ai_chance = {
			base = 50
			modifier = {			
				add = { 
					value = dag_cdo_ai_lasciviousness_value 	#~ +/-50
					multiply = 0.50
				}
			}
			modifier = {
				add = -500
				OR = {
					root = { has_contagious_disease_trigger = yes }
					scope:sex_partner = { has_contagious_disease_trigger = yes }
				}
			}
		}		
	}

	#No
	option = {
		name = dag_cdo_orgy_random.1002.b
		custom_tooltip = dag_cdo_orgy_random.1001.b.tt
		reverse_add_opinion = {
			target = scope:sex_partner
			modifier = disappointed_opinion
			opinion = -15
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 50
				NOT = { dag_cdo_wishes_to_lay_with_TARGET_trigger = { TARGET = scope:sex_partner } }
			}
		}
	}
	after = {
		hidden_effect = {
			dag_cdo_orgy_wrap_up_or_fire_random_event_effect = yes
		}	
	}	
}

#####################
# Sleep with someone (soulmate)
# by Dagulus
# 1003
#####################

#Sleep with someone (soulmate)
dag_cdo_orgy_random.1003 = {
	type = character_event
	title = dag_cdo_orgy_random.1002.t
	desc = {
		desc = dag_cdo_orgy_random.1001.start.desc
		desc = dag_cdo_orgy_random.1003.end.desc
	}
	theme = dag_cdo_theme_orgy_activity
	left_portrait = {
		character = scope:sex_partner
		animation = love
	}
	
	trigger = {
		NOT = { exists = local_var:had_dag_cdo_1003 }
		scope:activity = {
			any_participant = {
				dag_cdo_orgy_default_participant_trigger = yes
				has_relation_soulmate = root
			}
		}
	}
	weight_multiplier = {	#The standard for orgy events is 1
		base = 1
	}
	immediate = {
		hidden_effect = {
			set_local_variable = {
				name = had_dag_cdo_1003
				value = yes
			}
		}	
		root = { save_scope_as = actor }
		scope:activity = {
			random_participant = {
				limit = {
					dag_cdo_orgy_default_participant_trigger = yes
					has_relation_soulmate = root
				}
				save_scope_as = sex_partner
			}
		}
	}

	#Yes
	option = {
		name = dag_cdo_orgy_random.1003.a
		#~Ideally we would fire some sort of sex_scene here
		#~But the ones we have are a) inappropriate
		#~and B) often fuck up the is_naked flag

		carn_had_sex_with_effect = {
			CHARACTER_1 = root
			CHARACTER_2 = scope:sex_partner
			C1_PREGNANCY_CHANCE = pregnancy_chance
			C2_PREGNANCY_CHANCE = pregnancy_chance
			STRESS_EFFECTS = yes
			DRAMA = yes
		}
		reverse_add_opinion = {
			target = scope:sex_partner
			modifier = love_opinion
			opinion = 20
		}
		add_stress = major_stress_loss
		
		ai_chance = {
			base = 50
			modifier = {			
				add = { 
					value = dag_cdo_ai_lasciviousness_value 	#~ +/-50
					multiply = 0.50
				}
			}
			modifier = {
				add = -500
				OR = {
					root = { has_contagious_disease_trigger = yes }
					scope:sex_partner = { has_contagious_disease_trigger = yes }
				}
			}
		}		
	}

	#No
	option = {
		name = dag_cdo_orgy_random.1003.b
		custom_tooltip = dag_cdo_orgy_random.1001.b.tt

		reverse_add_opinion = {
			target = scope:sex_partner
			modifier = disappointed_opinion
			opinion = -15
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 50
				NOT = { dag_cdo_wishes_to_lay_with_TARGET_trigger = { TARGET = scope:sex_partner } }
			}
		}		
	}
	after = {
		hidden_effect = {
			dag_cdo_orgy_wrap_up_or_fire_random_event_effect = yes
		}
	}	
}

#####################
# Sleep with someone (new guest)
# by Dagulus
# 1004
#####################

#Sleep with someone (new guest)
dag_cdo_orgy_random.1004 = {
	type = character_event
	title = dag_cdo_orgy_random.1001.t
	desc = {
		desc = dag_cdo_orgy_random.1001.start.desc
		desc = dag_cdo_orgy_random.1001.new_guest.desc
		desc = dag_cdo_orgy_random.1001.end.desc
	}

	theme = dag_cdo_theme_orgy_activity
	left_portrait = {
		character = scope:sex_partner
		animation = love
	}

	trigger = {
		NOT = { exists = local_var:had_dag_cdo_1004 }
		scope:activity = {
			any_participant = {
				dag_cdo_orgy_default_participant_trigger = yes
				has_character_flag = orgy_new_guest
				root = { dag_cdo_wishes_to_lay_with_TARGET_trigger = { TARGET = prev } }
			}
		}
	}

	weight_multiplier = {	#The standard for orgy events is 1
		base = 1
	}

	immediate = {
		hidden_effect = {
			set_local_variable = {
				name = had_dag_cdo_1004
				value = yes
			}
		}
		root = { save_scope_as = actor }
		scope:activity = {
			random_participant = {
				limit = {
					dag_cdo_orgy_default_participant_trigger = yes
					has_character_flag = orgy_new_guest
					root = { dag_cdo_wishes_to_lay_with_TARGET_trigger = { TARGET = prev } }	#~I think this works
				}
				save_scope_as = sex_partner
			}
		}
	}

	#Yes
	option = {
		name = dag_cdo_orgy_random.1001.a
		#~Ideally we would fire some sort of sex_scene here
		#~But the ones we have are a) inappropriate
		#~and B) often fuck up the is_naked flag

		carn_had_sex_with_effect = {
			CHARACTER_1 = root
			CHARACTER_2 = scope:sex_partner
			C1_PREGNANCY_CHANCE = pregnancy_chance
			C2_PREGNANCY_CHANCE = pregnancy_chance
			STRESS_EFFECTS = yes
			DRAMA = yes
		}
		dag_cdo_orgy_add_opinion_after_sex_effect = { PARTNER = scope:sex_partner }

		ai_chance = {
			base = 50
			modifier = {			
				add = { 
					value = dag_cdo_ai_lasciviousness_value 	#~ +/-50
					multiply = 0.50
				}
			}
			modifier = {
				add = -500
				OR = {
					root = { has_contagious_disease_trigger = yes }
					scope:sex_partner = { has_contagious_disease_trigger = yes }
				}
			}
		}		
	}

	#No
	option = {
		name = dag_cdo_orgy_random.1001.b
		custom_tooltip = dag_cdo_orgy_random.1001.b.tt

		reverse_add_opinion = {
			target = scope:sex_partner
			modifier = disappointed_opinion
			opinion = -15
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 50
				NOT = { dag_cdo_wishes_to_lay_with_TARGET_trigger = { TARGET = scope:sex_partner } }
			}
		}		
	}
	after = {
		hidden_effect = {
			dag_cdo_orgy_wrap_up_or_fire_random_event_effect = yes
		}
	}
}

#####################
# Threesome (regular)
# by Dagulus
# 1006
# tag: probably_should_look_at_ai_values_again
#####################

#Threesome (regular)
dag_cdo_orgy_random.1006 = {
	type = character_event
	title = dag_cdo_orgy_random.1006.t
	desc = dag_cdo_orgy_random.1006.desc
	theme = dag_cdo_theme_orgy_activity
	left_portrait = {
		character = scope:primary_seducee
		animation = flirtation
	}
	right_portrait = {
		character = scope:secondary_seducee
		animation = flirtation
	}

	trigger = {
		NOT = { exists = local_var:had_dag_cdo_1006 }
	}

	weight_multiplier = {			#~The standard for orgy events is 1
		base = 1		
		compare_modifier = {  		#~Attractive root more likely to be sought after.
			value = attraction
			offset = medium_positive_attraction
			multiplier = 0.02
		}		
		dag_cdo_create_character_orgy_event_weight_modifier = yes
	}

	immediate = {
		hidden_effect = {
			set_local_variable = {
				name = had_dag_cdo_1006
				value = yes
			}
		}
		scope:activity = {
			every_participant = {
				limit = {
					dag_cdo_orgy_default_participant_trigger = yes		#~Seriously, never forget this trigger
					is_attracted_to_gender_of = root
					root = { is_attracted_to_gender_of = prev }
					NOT = { has_relation_rival = root }
				}
				add_to_list = threesome_candidates_list
			}
		}
		random_in_list = {
			list = threesome_candidates_list
			limit = { has_relation_potential_lover = root }				#~Always prefer potential lovers if we can.
			alternative_limit = { always = yes }
			weight = {
				base = 1
				interesting_feast_participant_modifier = yes
				modifier = {
					add = -500
					has_contagious_disease_trigger = yes
				}				
			}
			save_scope_as = primary_seducee
		}
		random_in_list = {
			list = threesome_candidates_list
			limit = {
				has_relation_potential_lover = root						#~Always prefer potential lovers if we can.
				NOT = { this = scope:primary_seducee }
			}
			alternative_limit = {
				NOT = { this = scope:primary_seducee }
			}
			weight = {
				base = 1
				interesting_feast_participant_modifier = yes
				modifier = {
					add = -500
					has_contagious_disease_trigger = yes
				}
			}
			save_scope_as = secondary_seducee
		}
		#Backup generation
		if = {
			limit = { NOT = { exists = scope:primary_seducee } }
			dag_cdo_create_orgy_guest_effect = { WHO = root }
			scope:created_character = { 
				trigger_event = { on_action = dag_cdo_orgy_character_initialization_pulse }
				save_scope_as = primary_seducee 
			}
		}
		if = {
			limit = { NOT = { exists = scope:secondary_seducee } }
			dag_cdo_create_orgy_guest_effect = { WHO = root }
			scope:created_character = {
				trigger_event = { on_action = dag_cdo_orgy_character_initialization_pulse }
				save_scope_as = secondary_seducee 
			}
		}
		scope:primary_seducee = { add_to_list = threesome_chosen_list }
		scope:secondary_seducee = { add_to_list = threesome_chosen_list }
	}

	##Fuck A
	option = {
		name = dag_cdo_orgy_random.1006.a
		#~Ideally we would fire some sort of sex_scene here
		#~But the ones we have are a) inappropriate
		#~and B) often fuck up the is_naked flag

		carn_had_sex_with_effect = {
			CHARACTER_1 = root
			CHARACTER_2 = scope:primary_seducee
			C1_PREGNANCY_CHANCE = pregnancy_chance
			C2_PREGNANCY_CHANCE = pregnancy_chance
			STRESS_EFFECTS = yes
			DRAMA = yes
		}
		ROOT = {
			if = {
				limit = {
						has_trait = minhyee
				}
				carn_sex_scene_effect = {
					PLAYER = root
					TARGET = scope:primary_seducee
					STRESS_EFFECTS = yes
					DRAMA = yes
				}
			}
		}	
		dag_cdo_orgy_add_opinion_after_sex_effect = { PARTNER = scope:primary_seducee }
		reverse_add_opinion = {
			target = scope:secondary_seducee
			modifier = disappointed_opinion
			opinion = -15
		}
		ai_chance = {
			base = 30
			ai_value_modifier = { ai_boldness = 0.5 }
			modifier = {
				NOT = { dag_cdo_wishes_to_lay_with_TARGET_trigger = { TARGET = scope:primary_seducee } }
				add = -30
			}
			modifier = {
				add = { 
					value = dag_cdo_ai_lasciviousness_value 	#~ +/-25
					multiply = 0.25
				}
			}
			modifier = {
				add = -500
				has_contagious_disease_trigger = yes
			}
		}		
	}

	##Fuck B
	option = {
		name = dag_cdo_orgy_random.1006.b
		#~Ideally we would fire some sort of sex_scene here
		#~But the ones we have are a) inappropriate
		#~and B) often fuck up the is_naked flag

		carn_had_sex_with_effect = {
			CHARACTER_1 = root
			CHARACTER_2 = scope:secondary_seducee
			C1_PREGNANCY_CHANCE = pregnancy_chance
			C2_PREGNANCY_CHANCE = pregnancy_chance
			STRESS_EFFECTS = yes
			DRAMA = yes
		}		
		ROOT = {
			if = {
				limit = {
						has_trait = minhyee
				}
				carn_sex_scene_effect = {
					PLAYER = root
					TARGET = scope:secondary_seducee
					STRESS_EFFECTS = yes
					DRAMA = yes
				}
			}
		}	
		dag_cdo_orgy_add_opinion_after_sex_effect = { PARTNER = scope:secondary_seducee }
		reverse_add_opinion = {
			target = scope:primary_seducee
			modifier = disappointed_opinion
			opinion = -15
		}
		ai_chance = {
			base = 30
			ai_value_modifier = { ai_boldness = 0.5 }
			modifier = {
				NOT = { dag_cdo_wishes_to_lay_with_TARGET_trigger = { TARGET = scope:secondary_seducee } }
				add = -30
			}
			modifier = {			
				add = { 
					value = dag_cdo_ai_lasciviousness_value 	#~ +/-25
					multiply = 0.25
				}
			}
			modifier = {
				add = -500
				has_contagious_disease_trigger = yes
			}			
		}
	}

	##Fuck A+B
	option = {
		name = dag_cdo_orgy_random.1006.c
		dag_cdo_threesome_effect = {
             PLAYER = root
             TARGET_ONE = scope:primary_seducee
             TARGET_TWO = scope:secondary_seducee			 
		}

		ROOT = {
			if = {
				limit = {
						has_trait = minhyee
				}
				carn_sex_scene_effect = {
					PLAYER = root
					TARGET = scope:primary_seducee
					STRESS_EFFECTS = yes
					DRAMA = yes
				}
			}
		}	
		ROOT = {
			if = {
				limit = {
						has_trait = minhyee
				}
				carn_sex_scene_effect = {
					PLAYER = root
					TARGET = scope:secondary_seducee
					STRESS_EFFECTS = yes
					DRAMA = yes
				}
			}
		}	
		ai_chance = {
			base = 50
			ai_value_modifier = { ai_boldness = 0.25 }
			modifier = {			
				add = { 
					value = dag_cdo_ai_lasciviousness_value 	#~ +/-50
					multiply = 0.5
				}
			}			
			modifier = {
				add = -500
				has_contagious_disease_trigger = yes
			}			
		}
	}

	##Hide in your room - it's important to have an opt out, we don't want to force the player to have sex with people.
	option = {
		name = dag_cdo_orgy_random.1006.d
		reverse_add_opinion = {
			target = scope:primary_seducee
			modifier = disappointed_opinion
			opinion = -15
		}
		reverse_add_opinion = {
			target = scope:secondary_seducee
			modifier = disappointed_opinion
			opinion = -15
		}
		stress_impact = {
			lustful = minor_stress_impact_gain
		}
		ai_chance = {
			base = 30
			ai_value_modifier = { ai_boldness = -0.25 }
			modifier = {			
				add = { 
					value = dag_cdo_ai_lasciviousness_value 	#~ +/-25
					multiply = -0.25
				}
			}
			modifier = {
				add = 50
				NOT = { dag_cdo_wishes_to_lay_with_TARGET_trigger = { TARGET = scope:primary_seducee } }
				NOT = { dag_cdo_wishes_to_lay_with_TARGET_trigger = { TARGET = scope:secondary_seducee } }
			}
		}
	}
	after = {
		hidden_effect = {
			dag_cdo_orgy_wrap_up_or_fire_random_event_effect = yes
		}
	}	
}

####################################
# Blowjob Competition 				
# by Dagulus
# 2001
# tags: no_ai_chance_data
# Tag: test_if_backup_works (Answer, obviously fucking not)
####################################

dag_cdo_orgy_random.2001 = {
	type = character_event
	title = dag_cdo_orgy_random.2001.t
	desc = {
		desc = dag_cdo_orgy_random.2001.start.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:sex_partner_one
					exists = scope:sex_partner_two
					any_vassal = { this = scope:sex_partner_one }
					any_vassal = { this = scope:sex_partner_two }
				}
				desc = dag_cdo_orgy_random.2001.vassals.desc
			}
			desc = dag_cdo_orgy_random.2001.vassalandcourtier.desc
		}
		desc = dag_cdo_orgy_random.2001.end.desc
	}
	theme = dag_cdo_theme_orgy_activity

	left_portrait = {
		character = scope:sex_partner_one
		animation = flirtation
	}

	right_portrait = {
		character = scope:sex_partner_two
		animation = flirtation
	}

	trigger = {
		NOT = { exists = local_var:had_dag_cdo_2001 }
		carn_gender_can_impregnate_trigger = yes 	#~Has a cock
		scope:activity = {
			any_participant = {
				dag_cdo_orgy_default_participant_trigger = yes
				save_temporary_scope_as = sex_partner_one_temp
			}
		matching_gender_and_sexuality_trigger = { CHARACTER_1 = scope:sex_partner_one_temp CHARACTER_2 = root }
		}
	}

	weight_multiplier = {			#~The standard for orgy events is 1
		base = 1
		compare_modifier = {  		#~Attractive root more likely to be sought after.
			value = attraction
			offset = medium_positive_attraction
			multiplier = 0.02
		}
		dag_cdo_create_character_orgy_event_weight_modifier = yes
	}

	immediate = {
		hidden_effect = {
			set_local_variable = {
				name = had_dag_cdo_2001
				value = yes
			}
			#Moved everything into the hidden_effect due to the weird localization issues
			root = { save_scope_as = actor }
			scope:activity = {
				random_participant = { #Find that guest
					limit = {
						dag_cdo_orgy_default_participant_trigger = yes
						save_temporary_scope_as = sex_partner_one_temp			
						matching_gender_and_sexuality_trigger = { CHARACTER_1 = scope:sex_partner_one_temp CHARACTER_2 = scope:actor }
						NOT = { this = scope:actor }
					}
					save_scope_as = sex_partner_one
				}
				random_participant = {
					limit = {
						dag_cdo_orgy_default_participant_trigger = yes
						save_temporary_scope_as = sex_partner_two_temp					
						matching_gender_and_sexuality_trigger = { CHARACTER_1 = scope:sex_partner_two_temp CHARACTER_2 = scope:actor }
						NOT = { this = scope:actor }
						NOT = { this = scope:sex_partner_one }
						OR = {
							has_relation_rival = scope:sex_partner_one
							has_relation_potential_rival = scope:sex_partner_one
						}
					}
					save_scope_as = sex_partner_two
				}
			}
			#Backup generation
			if = {
				limit = { NOT = { exists = scope:sex_partner_two } }
				dag_cdo_create_orgy_guest_effect = { WHO = root }
				##following block causes YAF timing issue
#				scope:created_character = {
#					progress_towards_rival_effect = {
#						CHARACTER = scope:sex_partner_one
#						OPINION = no
#					}
#				}
				scope:created_character = {
					trigger_event = { on_action = dag_cdo_orgy_character_initialization_pulse }
					save_scope_as = sex_partner_two 
				}
			}
		}
	}

	#Attempt to mediate
	option = {
		name = dag_cdo_orgy_random.2001.a
		duel = {
			skill = martial								#This is the chivalrous thing to do
			value = decent_skill_rating
			15 = {		
				compare_modifier = {
					value = scope:duel_value
					multiplier = 0.5
				}
				desc = dag_cdo_orgy_random.2001.a.success.tt

				send_interface_toast = {
					type = event_toast_effect_good
					title = dag_cdo_orgy_random.2001.a.success.tt
					left_icon = scope:sex_partner_one
					right_icon = scope:sex_partner_two

					add_prestige = medium_prestige_gain
					custom_tooltip = dag_cdo_orgy_random_2001_mediation_success.tt
				}
				hidden_effect = {
					scope:sex_partner_one = {
						add_opinion = {
							modifier = respect_opinion
							opinion = 20
							target = scope:sex_partner_two
						}
					}
					scope:sex_partner_two = {
						add_opinion = {
							modifier = respect_opinion
							opinion = 20
							target = scope:sex_partner_one
						}
					}
				}
			}
			12 = {		
				compare_modifier = {
					value = scope:duel_value
					multiplier = -0.5
				}
				desc = dag_cdo_orgy_random.2001.a.failure.tt
				send_interface_toast = {
					type = event_toast_effect_bad
					title = dag_cdo_orgy_random.2001.a.failure.tt
					left_icon = scope:sex_partner_one
					right_icon = scope:sex_partner_two

					scope:sex_partner_one = {
						add_opinion = {
							modifier = disappointed_opinion
							opinion = -10
							target = root
						}
					}
					scope:sex_partner_two = {
						add_opinion = {
							modifier = disappointed_opinion
							opinion = -10
							target = root
						}
					}
				}
			}
		}

		stress_impact = {
			lustful = minor_stress_loss
			honest = minor_stress_gain
		}
		
		ai_chance = {
			base = 50
			modifier = {			
				add = { 
					value = dag_cdo_ai_lasciviousness_value 	#~ +/-50
					multiply = 0.5
				}
			}
			modifier = {
				add = -500
				OR = {
					root = { has_contagious_disease_trigger = yes }
					scope:sex_partner_one = { has_contagious_disease_trigger = yes }
					scope:sex_partner_two = { has_contagious_disease_trigger = yes }
				}
			}
		}
	}

	#Gain points with sex_partner_one
	option = {
		name = dag_cdo_orgy_random.2001.b

		scope:sex_partner_one = {
			add_opinion = {
				modifier = belittled_my_enemy
				years = 5
				target = root
			}
			progress_towards_rival_effect = {
				CHARACTER = scope:sex_partner_two
				OPINION = no
			}
		}

		stress_impact = {
			lustful = medium_stress_loss
			temperate = minor_stress_gain
			compassionate = minor_stress_gain
		}
		ai_chance = {
			base = 50
			modifier = {			
				add = { 
					value = dag_cdo_ai_lasciviousness_value 	#~ +/-50
					multiply = 0.5
				}
			}
			modifier = {
				add = -25
				NOT = { dag_cdo_wishes_to_lay_with_TARGET_trigger = { TARGET = scope:sex_partner_one } }
			}			
			modifier = {
				add = -500
				OR = {
					root = { has_contagious_disease_trigger = yes }
					scope:sex_partner_one = { has_contagious_disease_trigger = yes }
				}
			}
		}
	}
	
	#Gain points with sex_partner_two
	option = {
		name = dag_cdo_orgy_random.2001.c
		
		scope:sex_partner_two = {
			add_opinion = {
				modifier = belittled_my_enemy
				years = 5
				target = root
			}
			progress_towards_rival_effect = {
				CHARACTER = scope:sex_partner_one
				OPINION = no
			}
		}

		stress_impact = {
			lustful = medium_stress_loss
			temperate = minor_stress_gain
			compassionate = minor_stress_gain
		}
		ai_chance = {
			base = 50
			modifier = {			
				add = { 
					value = dag_cdo_ai_lasciviousness_value 	#~ +/-50
					multiply = 0.5
				}
			}
			modifier = {
				add = -25
				NOT = { dag_cdo_wishes_to_lay_with_TARGET_trigger = { TARGET = scope:sex_partner_two } }
			}			
			modifier = {
				add = -500
				OR = {
					root = { has_contagious_disease_trigger = yes }
					scope:sex_partner_two = { has_contagious_disease_trigger = yes }
				}
			}
		}
	}
	##Hide in your room - it's important to have an opt out, we don't want to force the player to have sex with people.
	option = {
		name = dag_cdo_orgy_random.1006.d		#~stolen from event 1006 as we forgot to write one
		reverse_add_opinion = {
			target = scope:sex_partner_one
			modifier = disappointed_opinion
			opinion = -15
		}
		reverse_add_opinion = {
			target = scope:sex_partner_two
			modifier = disappointed_opinion
			opinion = -15
		}
		stress_impact = {
			lustful = minor_stress_impact_gain
		}
		ai_chance = {
			base = 30
			ai_value_modifier = { ai_boldness = -0.25 }
			modifier = {			
				add = { 
					value = dag_cdo_ai_lasciviousness_value 	#~ +/-25
					multiply = -0.25
				}
			}
			modifier = {
				add = 50
				NOT = { dag_cdo_wishes_to_lay_with_TARGET_trigger = { TARGET = scope:sex_partner_one } }
				NOT = { dag_cdo_wishes_to_lay_with_TARGET_trigger = { TARGET = scope:sex_partner_two } }
			}
		}
	}
	after = {
		hidden_effect = {
			dag_cdo_orgy_wrap_up_or_fire_random_event_effect = yes
		}
	}	
}

#####################
# A Disobedient Slave
# by Dagulus
# 2002
#####################

#A Disobedient Slave
dag_cdo_orgy_random.2002 = {
	type = character_event
	title = dag_cdo_orgy_random.2002.t
	desc = dag_cdo_orgy_random.2002.desc
	theme = dag_cdo_theme_orgy_activity
	left_portrait = {
		character = scope:powerful_guest
		animation = flirtation	
	}
	right_portrait = {
		character = scope:disobedient_slave
		animation = shame
	}

	trigger = {
		NOT = { exists = local_var:had_dag_cdo_2002 }
		scope:activity = {
			## Disobedient Slave
			any_participant = {
				dag_cdo_orgy_default_participant_trigger = yes
				has_relation_slave_owner = root
				save_temporary_scope_as = disobedient_slave_temp
			}
			## Powerful Guest
			any_participant = {
				dag_cdo_orgy_default_participant_trigger = yes
				is_attracted_to_gender_of = scope:disobedient_slave_temp
				NOT = { has_trait = slave }
			}
			#~This is another tiered trigger that is not guaranteed to work
			#~Added a catch but would prefer a better solution
		}
	}

	weight_multiplier = {	#The standard for orgy events is 1
		base = 0.5			#All none sex events have reduced chance of showing, because it's an orgy and we don't want to disappoint player
	}

	immediate = {
		hidden_effect = {
			set_local_variable = {
				name = had_dag_cdo_2002
				value = yes
			}
		}
		scope:activity = {
			random_participant = {
				limit = {
					dag_cdo_orgy_default_participant_trigger = yes
					has_relation_slave_owner = root
					NOR = {
						sexually_liberal_trigger = yes
						has_trait = rakish
						might_cheat_on_every_partner_trigger = yes
					}
				}
				alternative_limit = {
					dag_cdo_orgy_default_participant_trigger = yes
					has_relation_slave_owner = root
				}
				##weight, by attractiveness???
				save_scope_as = disobedient_slave
			}
			random_participant = {
				limit = {
					dag_cdo_orgy_default_participant_trigger = yes					
					has_any_bad_relationship_with_root_trigger = yes		#pick someone whose here to make trouble if available
					is_attracted_to_gender_of = scope:disobedient_slave
					NOT = { has_trait = slave }
					}
				alternative_limit = {
					dag_cdo_orgy_default_participant_trigger = yes
					is_attracted_to_gender_of = scope:disobedient_slave
					NOT = { has_trait = slave }
					}
				alternative_limit = {										#~Occasionally the above fails due to the bad trigger
					dag_cdo_orgy_default_participant_trigger = yes
					NOT = { has_trait = slave }
					}					
				weight = {
					base = 1
					interesting_feast_participant_modifier = yes
					modifier = {
						add = -500
						has_contagious_disease_trigger = yes
					}
				}
				save_scope_as = powerful_guest
			}
		}
	}

	option = {	#~Whip
		name = dag_cdo_orgy_random.2002.a
		dag_cdo_discipline_flog_effect = {
			ACTOR = root
			VICTIM = scope:disobedient_slave
		}
		#~NB: Effect includes all stress outcomes
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_vengefulness = 0.5
				ai_honor = -0.25
				ai_compassion = -0.5
			}
		}
	}

	option = {	#~Rebuke + sex (dubcon)
		name = dag_cdo_orgy_random.2002.b
		scope:powerful_guest = {						#~It appears to be good practice to run this in the scope of CHARACTER_1
			carn_had_sex_with_effect = { 				#~We treat this as dubcon
				CHARACTER_1 = scope:powerful_guest
				CHARACTER_2 = scope:disobedient_slave
				C1_PREGNANCY_CHANCE = pregnancy_chance
				C2_PREGNANCY_CHANCE = pregnancy_chance
				STRESS_EFFECTS = yes
				DRAMA = yes
			}
		}
		scope:disobedient_slave = {
			add_opinion = {
				modifier = annoyed_opinion
				target = root
				opinion = -20
			}
		}
		ai_chance = {
			base = 30
			ai_value_modifier = { 
				ai_vengefulness = 0.25
				ai_honor = 0.25
				ai_compassion = -0.25
			}
			modifier = {
				add = -500
				OR = {
					scope:powerful_guest = { has_contagious_disease_trigger = yes }
					scope:disobedient_slave = { has_contagious_disease_trigger = yes }
				}
			}
		}
	}

#	option = {	##Offer backup slave if you have one?
#		name = dag_cdo_orgy_random.2002.c
#	}

	option = {	#~Excuse
		name = dag_cdo_orgy_random.2002.d
		add_prestige = medium_prestige_loss
		scope:powerful_guest = {
			add_opinion = {
				modifier = disappointed_opinion
				target = root
				opinion = -10
			}
		}
		stress_impact = {
			ambitious = minor_stress_impact_gain
		}
		ai_chance = {
			base = 30
			ai_value_modifier = { 
				ai_vengefulness = -0.25
				ai_honor = -0.25
				ai_compassion = 0.5
			}
		}		
	}

	after = {
		hidden_effect = {
			dag_cdo_orgy_wrap_up_or_fire_random_event_effect = yes
		}
	}	
}

#####################
# Demanding Service
# by Dagulus
# 2008
#####################

dag_cdo_orgy_random.2008 = {
	type = character_event
	title = dag_cdo_orgy_random.2008.t
	desc = dag_cdo_orgy_random.2008.desc
	theme = dag_cdo_theme_orgy_activity
	left_portrait = root
	right_portrait = {
		character = scope:rapist_character
		animation = personality_callous
	}

	trigger = {
		this = scope:activity.activity_owner
		NOT = { exists = local_var:had_dag_cdo_2008 }
		scope:activity = {
			any_participant = {
				dag_cdo_orgy_default_participant_trigger = yes					
				NOT = { has_trait = slave }
				ai_compassion < medium_positive_ai_value
			}
		}
	}

	weight_multiplier = {	#The standard for orgy events is 1
		base = 0.5			#All none sex events have reduced chance of showing, because it's an orgy and we don't want to disappoint player
	}

	immediate = {
		hidden_effect = {
			set_local_variable = {
				name = had_dag_cdo_2008
				value = yes
			}
			scope:activity = {
				random_participant = {
					limit = {
						dag_cdo_orgy_default_participant_trigger = yes
						NOT = { has_trait = slave }
						has_any_bad_relationship_with_root_trigger = yes		#pick someone whose here to make trouble if available
						ai_compassion < medium_positive_ai_value
					}
					alternative_limit = {
						dag_cdo_orgy_default_participant_trigger = yes
						NOT = { has_trait = slave }
						ai_compassion < medium_positive_ai_value
					}
					weight = {
						base = 1
						interesting_feast_participant_modifier = yes
					}
					save_scope_as = rapist_character
				}
			}
		}
	}

	option = { #Clearly my staff need to be shown their place...
		name = dag_cdo_orgy_random.2008.a
		add_tyranny = medium_tyranny_gain
		custom_tooltip = dag_cdo_orgy_random.2008.a.tt
		dag_cdo_had_sex_with_unknown_partner = { CHARACTER = root }	
		custom_tooltip = dag_cdo_orgy_random.2008.b.tt
		dag_cdo_had_sex_with_unknown_partner = { CHARACTER = scope:rapist_character }		

		hidden_effect = {
			reverse_add_opinion = {
				target = scope:rapist_character
				modifier = feast_common_burden_opinion
			}
			add_opinion = {
				target = scope:rapist_character
				modifier = feast_common_burden_opinion
			}
			if = {
				limit = {
					can_set_relation_friend_trigger = { CHARACTER = scope:rapist_character }
				}
				if = {
					limit = {
						has_relation_potential_friend = scope:rapist_character
						can_set_relation_friend_trigger = { CHARACTER = scope:rapist_character }
					}
					set_relation_friend = scope:rapist_character
				}
				else = {
					progress_towards_friend_effect = {
						CHARACTER = scope:rapist_character
						OPINION = no
					}
				}
			}			
		}
		stress_impact = {
			sadistic = medium_stress_impact_loss
			compassionate = medium_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				has_trait = sadistic
				add = 20
			}			
			ai_value_modifier = {
				ai_boldness = 0.25
				ai_compassion = -0.75
				ai_honor = -0.75
			}
			modifier = {
				add = -500
				OR = {
					root = { has_contagious_disease_trigger = yes }
					scope:rapist_character = { has_contagious_disease_trigger = yes }
				}
			}
		}
	}

	option = { #My staff will serve you in any way you desire.
		name = dag_cdo_orgy_random.2008.b
		custom_tooltip = dag_cdo_orgy_random.2008.b.tt
		dag_cdo_had_sex_with_unknown_partner = { CHARACTER = scope:rapist_character }
		stress_impact = {
			just = medium_stress_impact_gain
			compassionate = medium_stress_impact_gain
		}
		ai_chance = {
			base = 20
			ai_value_modifier = {
				ai_sociability = 0.5
				ai_rationality = 0.5
			}
			modifier = {
				add = -500
				scope:rapist_character = { has_contagious_disease_trigger = yes }
			}
		}
	}

	option = { #You may not fuck my servants without my approval!
		name = dag_cdo_orgy_random.2008.c
		add_character_modifier = {
			modifier = feast_loyal_servantry_modifier
			years = 5
		}
		reverse_add_opinion = {
			target = scope:rapist_character
			modifier = disappointed_opinion
			opinion = -20
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_compassion = 0.75
				ai_sociability = 0.25
				ai_honor = 0.25
			}
		}
	}

	option = { #You are doing what to my staff?! I think you had better leave!
		#~based on 'Please leave my party' from feast_default.3004
		#~not seeing how it actually throws the target out of the event
		name = dag_cdo_orgy_random.2008.d
		flavor = dag_cdo_orgy_random.2008.d.tt		#~not 100% sure this is needed
		add_prestige = medium_prestige_gain
		add_character_modifier = {
			modifier = feast_loyal_servantry_modifier
			years = 5
		}
		scope:rapist_character = {
			add_prestige = medium_prestige_loss
			add_opinion = {
				modifier = feast_threw_me_out_opinion	#~probably close enough
				target = root
			}
		}
		stress_impact = {
			wrathful = medium_stress_impact_gain
			shy = medium_stress_impact_gain
			craven = medium_stress_impact_gain
			forgiving = medium_stress_impact_gain
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_boldness = 0.75
				ai_honor = 0.25
				ai_rationality = 0.25
				ai_energy = 0.25
			}
			opinion_modifier = {
				opinion_target = scope:rapist_character
				multiplier = -0.5
			}
		}
	}

	after = {
		hidden_effect = {
			dag_cdo_orgy_wrap_up_or_fire_random_event_effect = yes
		}
	}	
}

##################################################
# Three is a crowd
# by Dagulus
# 2009
##################################################

dag_cdo_orgy_random.2009 = {
	type = character_event
	title = dag_cdo_orgy_random.2009.t
	desc = {
		desc = dag_cdo_orgy_random.2009.start.desc
		desc = dag_cdo_orgy_random.2009.regular.desc
		#~I presume we had more plans for this desc, but we appear to have never wrote them down.
		desc = dag_cdo_orgy_random.2009.end.desc
	}
	theme = dag_cdo_theme_orgy_activity
	left_portrait = {
		character = scope:sex_partner
		animation = flirtation
	}	
	right_portrait = {
		character = scope:sex_gate_crasher
		animation = flirtation
	}

	trigger = {
		NOT = { exists = local_var:had_dag_cdo_2009 }
		scope:activity = {
			any_participant = {
				count >= 2
				is_attracted_to_gender_of = root
				accepts_incest_with_trigger = { CHARACTER = root } #No incest or 100% ok with incest			
			}
		}		
	}

	weight_multiplier = {	#~The standard for orgy events is 1		
		base = 0.75			#~We don't want this event showing to often as its deliberately a bit awkward
		dag_cdo_create_character_orgy_event_weight_modifier = yes
	}

	immediate = {
		hidden_effect = {
			set_local_variable = {
				name = had_dag_cdo_2009
				value = yes
			}
			root = {save_scope_as = actor } 	#~localization
			dag_cdo_find_orgy_partner_effect = { ACTIVITY = scope:activity }
			scope:activity = {
				random_participant = {
					limit = {
						is_attracted_to_gender_of = root
						accepts_incest_with_trigger = { CHARACTER = root }	#No incest or 100% ok with incest
						NOT = { this = scope:sex_partner }
					}
					weight = {
						base = 1
						modifier = {
							add = 50
							is_close_family_of = root
						}
						modifier = {
							add = 50
							root = { is_attracted_to_women = no }
							is_female = yes
						}
						modifier = {
							add = 50
							root = { is_attracted_to_men = no }
							is_male = yes
						}
						modifier = {
							add = 50
							root = { NOT = { has_trait = deviant } }
							has_trait = deviant
						}
						modifier = {
							add = 50
							attraction < -10
						}
					}
					save_scope_as = sex_gate_crasher
				}
			}
		}
	}

	#~Option one: Just Accept the Threesome
	option = {
		name = dag_cdo_orgy_random.2009.a

		dag_cdo_threesome_effect = {
             PLAYER = root
             TARGET_ONE = scope:sex_partner
             TARGET_TWO = scope:sex_gate_crasher			 
		}

		hidden_effect = { 				#~not relevant to root and the box is getting clustered
			scope:sex_gate_crasher = { 	#~Naturally, they're rather cocky about all of this.
				add_character_modifier = {
					modifier = silver_tongued_modifier
					days = 1825
				}
			}
		}

		### STRESS ###
		if = {
			limit = {
				is_attracted_to_gender_of = scope:sex_gate_crasher
			}
			stress_impact = {
				chaste = activity_stress_gain_impact
				shy = activity_stress_gain_impact
			}
		}
		else = {
			scope:sex_gate_crasher = {save_scope_as = recipient }	#~localization
			custom_tooltip = carn_sex_interaction_not_attracted_to_warning_tt
			stress_impact = {
				base = major_stress_impact_gain
			}
		}
		
		##Add stress for Incest ?
		##Add stress for ugly ?
		
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_compassion = 0.2
				ai_boldness = -0.1
				ai_honor = -0.1
			}
			modifier = { #Does not want to be seduced by sex_gate_crasher
				OR = {
					NOT = { is_attracted_to_gender_of = scope:sex_gate_crasher }
					NOT = { accepts_incest_with_trigger = { CHARACTER = scope:sex_gate_crasher } }
					scope:sex_gate_crasher = { attraction <= medium_negative_attraction }
				}
				add = -100
			}
		}
	}

	#~Option two, try to rebuff sex_gate_crasher while keeping it on with sex_partner
	option = {
		name = dag_cdo_orgy_random.2009.b
		random_list = {
			60 = {
				desc = dag_cdo_orgy_random.2009.b.tt_success
				send_interface_toast = {
					title = dag_cdo_orgy_random.2009.b.tt_success
					left_icon = scope:sex_partner
					carn_had_sex_with_effect = {
						CHARACTER_1 = root
						CHARACTER_2 = scope:sex_partner
						C1_PREGNANCY_CHANCE = pregnancy_chance
						C2_PREGNANCY_CHANCE = pregnancy_chance
						STRESS_EFFECTS = yes
						DRAMA = yes
					}
					dag_cdo_orgy_add_opinion_after_sex_effect = { PARTNER = scope:sex_partner }
				}
				ROOT = {
					if = {
						limit = {
							has_trait = minhyee
						}
						carn_sex_scene_effect = {
							PLAYER = root
							TARGET = scope:sex_partner
							STRESS_EFFECTS = yes
							DRAMA = yes
						}
					}
				}	
				modifier = {
					add = 10
					scope:sex_partner = { has_trait = lustful }
				}
				modifier = {
					add = 20
					has_trait = seducer
				}
				modifier = {
					add = -40
					scope:sex_partner = { has_trait = chaste }
				}
			}
			40 = {
				desc = dag_cdo_orgy_random.2009.b.tt_failure
				send_interface_toast = {
					title = dag_cdo_orgy_random.2009.b.tt_failure
					left_icon = scope:sex_partner
					scope:sex_partner = {
						if = {
							limit = { has_relation_potential_lover = root }
							remove_relation_potential_lover = root
						}
						add_opinion = {
							modifier = annoyed_opinion
							opinion = -15
							target = root
						}
					}
				}
				modifier = {
					add = 40
					scope:sex_partner = { has_trait = chaste }
				}
				modifier = {
					add = -10
					scope:sex_partner = { has_trait = lustful }
				}
				modifier = {
					add = -20
					has_trait = seducer
				}
			}
		}
		scope:sex_gate_crasher = {
			if = {
				limit = { has_relation_potential_lover = root }
				remove_relation_potential_lover = root
			}
			add_opinion = {
				modifier = insult_opinion
				opinion = -30
				target = root
			}
		}
		
		stress_impact = { honest = minor_stress_impact_gain }

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = 0.2
				ai_honor = 0.1
			}			
		}
	}

	##option three, dump sex_partner for sex_gate_crasher
	option = {
		name = dag_cdo_orgy_random.2009.c
		trigger = {
			is_attracted_to_gender_of = scope:sex_gate_crasher
			accepts_incest_with_trigger = { CHARACTER = scope:sex_gate_crasher } #No incest or 100% ok with incest
			freely_accepts_sodomy_with_trigger = { CHARACTER = scope:sex_gate_crasher } #No sodomy or 100% ok with sodomy
		}
		carn_had_sex_with_effect = {
			CHARACTER_1 = root
			CHARACTER_2 = scope:sex_gate_crasher
			C1_PREGNANCY_CHANCE = pregnancy_chance
			C2_PREGNANCY_CHANCE = pregnancy_chance
			STRESS_EFFECTS = yes
			DRAMA = yes
		}
		scope:sex_partner = {
			if = {
				limit = { has_relation_potential_lover = root }
				remove_relation_potential_lover = root
			}
			add_opinion = {
				modifier = angry_opinion
				opinion = -60	#~You dumped them for someone else mid coitus, this is not going to be well received
				target = root
			}
		}
		ai_chance = {
			base = 0
			ai_value_modifier = {
				ai_boldness = 0.2
				ai_honor = -0.2
			}
			modifier = { #Does not want to be seduced by sex_gate_crasher
				OR = {
					NOT = { is_attracted_to_gender_of = scope:sex_gate_crasher }						#~redundant due to trigger
					NOT = { accepts_incest_with_trigger = { CHARACTER = scope:sex_gate_crasher } }		#~redundant due to trigger
					scope:sex_gate_crasher = { attraction <= medium_negative_attraction }
				}
				add = -100
			}
		}
	}
	##option four... run away!!!
	option = {
		name = dag_cdo_orgy_random.2009.d
		scope:sex_partner = {
			if = {
				limit = { has_relation_potential_lover = root }
				remove_relation_potential_lover = root
			}
			add_opinion = {
				modifier = insult_opinion
				opinion = -30
				target = root
			}
		}
		scope:sex_gate_crasher = {
			if = {
				limit = { has_relation_potential_lover = root }
				remove_relation_potential_lover = root
			}
			add_opinion = {
				modifier = insult_opinion
				opinion = -30
				target = root
			}
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_boldness = -0.25
			}
		}
	}
	after = {
		hidden_effect = {
			dag_cdo_orgy_wrap_up_or_fire_random_event_effect = yes
		}
	}	
}

####################################
# Marital Troubles
# Getting involved in a married couple rowing at an orgy, you mad bastard
# by Dagulus
# 2010
####################################

dag_cdo_orgy_random.2010 = {
	type = character_event
	title = dag_cdo_orgy_random.2010.t
	desc = {
		desc = dag_cdo_orgy_random.2010.start.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:sex_partner
					exists = scope:sex_partner_spouse
					any_vassal = { this = scope:sex_partner }
					any_vassal = { this = scope:sex_partner_spouse }
				}
				desc = dag_cdo_orgy_random.2010.vassals.desc
			}
			desc = dag_cdo_orgy_random.2010.vassalandcourtier.desc
		}
		desc = dag_cdo_orgy_random.2010.end.desc
	}
	theme = dag_cdo_theme_orgy_activity

	left_portrait = {
		character = scope:sex_partner
		animation = dismissal
	}

	right_portrait = {
		character = scope:sex_partner_spouse
		animation = anger
	}

	trigger = {
		NOT = { exists = local_var:had_dag_cdo_2010 }
		# find a married couple both at the orgy
		scope:activity = {
			any_participant = {
				dag_cdo_orgy_default_participant_trigger = yes
				NOT = { any_spouse = { is_ai = no } }			#~We do not want the player's spouse
				any_spouse = { 
					feast_default_participant_trigger = yes		#~Special case
					in_activity_with = root
				}
			}
		}
	}

	weight_multiplier = {	#The standard for orgy events is 1
		base = 1
	}

	immediate = {
		hidden_effect = {
			set_local_variable = {
				name = had_dag_cdo_2010
				value = yes
			}
		}
		scope:activity = {
			random_participant = {
				limit = {
					dag_cdo_orgy_default_participant_trigger = yes
					NOT = { any_spouse = { is_ai = no } }			#~We do not want the player's spouse
					any_spouse = { 
						feast_default_participant_trigger = yes		#~Special case
						in_activity_with = root 
					}
				}
				weight = {
					base = 1
				}
				save_scope_as = sex_partner
			}
		}

		scope:sex_partner = {
			random_spouse = {
				limit = {
					feast_default_participant_trigger = yes		#~Special case
					any_spouse = { in_activity_with = this }
				}
				weight = {		#~Is there even any point weighting this?
					base = 1
				}
				save_scope_as = sex_partner_spouse
			}
		}
		if = {	#Check to see if the sex_partner has higher intrigue.
			limit = { scope:sex_partner.intrigue > scope:sex_partner_spouse.intrigue }
			scope:sex_partner = { save_scope_as = highest_intrigue_seducee }
		}
		else = {	#Otherwise, assume that the sex_partner_spouse has higher intrigue.
			scope:sex_partner_spouse = { save_scope_as = highest_intrigue_seducee }
		}
	}

	#~Maybe a threesome would help...
	option = {
		name = dag_cdo_orgy_random.2010.a
		duel = {
			skill = diplomacy							#~Because they are mid argument, we're going to have to talk them into it
			target = scope:highest_intrigue_seducee		#~Use whoever had the highest intrigue as the duel target.
			40 = {	#That worked.
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -39
				}
				desc = dag_cdo_orgy_random.2010.a.success.tt
				send_interface_toast = {
					title = dag_cdo_orgy_random.2010.a.success.tt
					left_icon = scope:sex_partner
					right_icon = scope:sex_partner_spouse
					#custom_tooltip = dag_cdo_orgy_random.2010.a.tt_success.lovers		#~This is not needed and a lie
					dag_cdo_threesome_effect = {	#~the order is important here
						 PLAYER = scope:sex_partner
						 TARGET_ONE = root
						 TARGET_TWO = scope:sex_partner_spouse			 
					}
					add_prestige = medium_prestige_gain
					add_character_modifier = {	#Naturally, you're rather cocky about all of this.
						modifier = silver_tongued_modifier
						days = 1825
					}
				}
			}
			60 = {	#Unsurprisingly, neither party is interested in you now.
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -59
				}
				desc = dag_cdo_orgy_random.2010.a.failure.tt
				send_interface_toast = {
					title = dag_cdo_orgy_random.2010.a.failure.tt
					left_icon = scope:sex_partner
					right_icon = scope:sex_partner_spouse
					scope:sex_partner = {
						if = {
							limit = { has_relation_potential_lover = root }
							remove_relation_potential_lover = root
						}
						add_opinion = {
							modifier = angry_opinion
							opinion = -15
							target = root
						}
					}
					scope:sex_partner_spouse = {
						if = {
							limit = { has_relation_potential_lover = root }
							remove_relation_potential_lover = root
						}
						add_opinion = {
							modifier = angry_opinion
							opinion = -15
							target = root
						}
					}
				}
			}
		}
		add_diplomacy_lifestyle_xp = major_lifestyle_xp		#~Either way, it was a learning experience.
		stress_impact = {
			shy = medium_stress_impact_gain
			chaste = medium_stress_impact_gain
		}
		ai_chance = {
			base = 30
			ai_value_modifier = { ai_boldness = 0.25 }
			modifier = {			
				add = { 
					value = dag_cdo_ai_lasciviousness_value 	#~ +/-50
					multiply = 0.5
				}
			}
		}
	}

	#~Fuck sex_partner right in front of their spouse
	option = {
		name = dag_cdo_orgy_random.2010.b
		#~Ideally we would fire some sort of sex_scene here
		#~But the ones we have are a) inappropriate
		#~and B) often fuck up the is_naked flag

		carn_had_sex_with_effect = {
			CHARACTER_1 = root
			CHARACTER_2 = scope:sex_partner
			C1_PREGNANCY_CHANCE = pregnancy_chance
			C2_PREGNANCY_CHANCE = pregnancy_chance
			STRESS_EFFECTS = yes
			DRAMA = yes
		}
		scope:sex_partner = {
			if = {
				limit = { has_character_flag = no_consequences_at_orgy }
				remove_character_flag = carn_no_consequences_for_extramarital_sex_with_others
			}
		}
		dag_cdo_orgy_add_opinion_after_sex_effect = { PARTNER = scope:sex_partner }
		dag_cdo_cuckold_targets_spouse_effect = { TARGET = scope:sex_partner }
		ai_chance = {
			base = 30
			ai_value_modifier = { ai_boldness = 0.5 }
			modifier = {
				scope:sex_partner = { attraction <= medium_negative_attraction }
				add = -30
			}
			modifier = {			
				add = { 
					value = dag_cdo_ai_lasciviousness_value 	#~ +/-25
					multiply = 0.25
				}
			}
			modifier = {
				add = -500
				has_contagious_disease_trigger = yes
			}
		}
		stress_impact = {
			just = minor_stress_gain
			compassionate = minor_stress_gain
			shy = major_stress_gain
		}
	}

	#~Some sauce for the gander, if you both swing that way			#~This comment is better than the event text, which irritating
	option = {
		name = dag_cdo_orgy_random.2010.c
		trigger = {
			is_attracted_to_gender_of = scope:sex_partner_spouse
			accepts_incest_with_trigger = { CHARACTER = scope:sex_partner_spouse } 			#~No incest or 100% ok with incest	
			freely_accepts_sodomy_with_trigger = { CHARACTER = scope:sex_partner_spouse } 	#~No sodomy or 100% ok with sodomy
			scope:sex_partner_spouse = { dag_cdo_orgy_default_participant_trigger = yes } 	#~No longer a special case
		}
		#~Ideally we would fire some sort of sex_scene here
		#~But the ones we have are a) inappropriate
		#~and B) often fuck up the is_naked flag

		carn_had_sex_with_effect = {
			CHARACTER_1 = root
			CHARACTER_2 = scope:sex_partner_spouse
			C1_PREGNANCY_CHANCE = pregnancy_chance
			C2_PREGNANCY_CHANCE = pregnancy_chance
			STRESS_EFFECTS = yes
			DRAMA = yes
		}
		scope:sex_partner_spouse = {
			if = {
				limit = { has_character_flag = no_consequences_at_orgy }
				remove_character_flag = carn_no_consequences_for_extramarital_sex_with_others
			}
		}		
		dag_cdo_orgy_add_opinion_after_sex_effect = { PARTNER = scope:sex_partner_spouse }
		dag_cdo_cuckold_targets_spouse_effect = { TARGET = scope:sex_partner_spouse }
		ai_chance = {
			base = 30
			ai_value_modifier = { ai_boldness = 0.5 }
			modifier = {
				scope:sex_partner_spouse = { attraction <= medium_negative_attraction }
				add = -30
			}
			modifier = {			
				add = { 
					value = dag_cdo_ai_lasciviousness_value 	#~ +/-25
					multiply = 0.25
				}
			}
			modifier = {
				add = -500
				has_contagious_disease_trigger = yes
			}
		}
		stress_impact = {
			just = minor_stress_gain
			compassionate = minor_stress_gain
			shy = major_stress_gain
		}
	}

	#~Hide in your room - Why do you keep giving me weird moral choices, i just wanted to fuck people.
	option = {
		name = dag_cdo_orgy_random.2010.d
		scope:sex_partner_spouse = {
			reverse_add_opinion = {
				target = scope:sex_partner
				modifier = angry_opinion
				opinion = -10
			}
		}
		scope:sex_partner = {
			reverse_add_opinion = {
				target = scope:sex_partner_spouse
				modifier = angry_opinion
				opinion = -10
			}
		}
		stress_impact = {
			lustful = minor_stress_impact_gain
		}
		ai_chance = {
			base = 30
			ai_value_modifier = { ai_boldness = -0.25 }
			modifier = {			
				add = { 
					value = dag_cdo_ai_lasciviousness_value 	#~ +/-25
					multiply = -0.25
				}
			}
		}
	}
	after = {
		hidden_effect = {
			scope:sex_partner = { dag_cdo_orgy_consequences_refresh_effect = yes }
			scope:sex_partner_spouse = { dag_cdo_orgy_consequences_refresh_effect = yes }
			dag_cdo_orgy_wrap_up_or_fire_random_event_effect = yes
		}
	}
}

#####################
# AI guest wants to fuck the player
# by Dagulus
# 3000
#####################

#~AI guest wants to fuck the player

scripted_trigger dag_cdo_orgy_random_3000_is_player_trigger = {
	is_ai = no
	accepts_incest_with_trigger = { CHARACTER = root } 			#~No incest or 100% ok with incest (legally not personally)
	freely_accepts_sodomy_with_trigger = { CHARACTER = root } 	#~No sodomy or 100% ok with sodomy (legally not personally)
	#~block_event_3000 should be set by any 300x event that fires and involves sex
	NOT = { has_character_flag = block_event_3000 }
}

dag_cdo_orgy_random.3000 = {
	hidden = yes

	trigger = {
		is_capable_adult_ai = yes
		NOT = {
			has_trait = slave
			custom_description = {
				text = "carn_cannot_have_sex"
				has_trait_with_flag = carn_cannot_have_sex
				has_character_flag = carn_cannot_have_sex
			}
		}
		scope:activity = {
			any_participant = {
				dag_cdo_orgy_random_3000_is_player_trigger = yes
			}
		}
	}

	weight_multiplier = {			#~The standard for orgy events is 1
		base = 1
		compare_modifier = {  		#~Attractive root more likely to be sought after.
			value = attraction
			offset = medium_positive_attraction
			multiplier = 0.02
		}
	}
	immediate = {
		save_scope_as = sex_partner
		scope:activity = {
			random_participant = {
				limit = {
					dag_cdo_orgy_random_3000_is_player_trigger = yes
				}
				save_scope_as = orgy_player
			}
		}
	}
	option = {
		scope:orgy_player = {
			trigger_event = {
				on_action = dag_cdo_orgy_event_3000_event_selection
				days = { 1 7 }
			}
		}
	}
	after = {
		hidden_effect = {
			dag_cdo_orgy_wrap_up_or_fire_random_event_effect = yes
		}
	}
}

#~AI guest wants to fuck the player sub event (vanilla)
dag_cdo_orgy_random.3001 = {
	type = character_event
	title = dag_cdo_orgy_random.3001.t
	desc = {
		desc = dag_cdo_orgy_random.3001.start.desc
		desc = dag_cdo_orgy_random.3001.middle.desc
		desc = dag_cdo_orgy_random.3001.end.desc
	}
	theme = dag_cdo_theme_orgy_activity
	left_portrait = {
		character = scope:sex_partner
		animation = flirtation
	}
	trigger = {
		#~scope:sex_partner set in dag_cdo_orgy_random.3000
		#~scope:orgy_player set in dag_cdo_orgy_random.3000 {This should also be root}
		scope:sex_partner = {
			dag_cdo_wishes_to_lay_with_TARGET_trigger = { TARGET = scope:orgy_player }
		}
	}
	immediate = {
		add_character_flag = {
			flag = block_event_3000
			days = 1
		}
	}
	#~Yes
	option = {
		name = dag_cdo_orgy_random.3001.a
		#~ideally we would fire some sort of sex_scene here
		#~But the ones we have are a) inappropriate
		#~and B) often fuck up the is_naked flag
		if = {
			limit = {
				scope:sex_partner = {
					is_female = yes
				}
				scope:orgy_player = {
					has_trait = minhyee
				}
			}
			
			scope:sex_partner = {
				
				if = {
					limit = {
						is_female = yes
						age >= 11
						NOT = { has_trait = pregnant
							}
					}
					make_pregnant = { father = scope:orgy_player number_of_children = 1 }
				}
			}
		}
		
		scope:orgy_player = {							#~It appears to be good practice to run this in the scope of CHARACTER_1
			carn_had_sex_with_effect = {
				CHARACTER_1 = scope:orgy_player
				CHARACTER_2 = scope:sex_partner
				C1_PREGNANCY_CHANCE = pregnancy_chance
				C2_PREGNANCY_CHANCE = pregnancy_chance
				STRESS_EFFECTS = yes
				DRAMA = yes
			}
			if = {
				limit = {
					scope:orgy_player = {
						has_trait = minhyee
					}
				}
				carn_sex_scene_effect = {
					PLAYER = scope:orgy_player
					TARGET = scope:sex_partner
					STRESS_EFFECTS = yes
					DRAMA = yes
				}
			}
		}
		dag_cdo_orgy_add_opinion_after_sex_effect = { PARTNER = scope:sex_partner }

		ai_chance = {	#~NB: Currently this event can only trigger for the player and so needs no ai_chance
			base = 50
			modifier = {			
				add = { 
					value = dag_cdo_ai_lasciviousness_value 	#~ +/-50
					multiply = 0.5
				}
			}
			modifier = {
				add = -500
				OR = {
					root = { has_contagious_disease_trigger = yes }
					scope:sex_partner = { has_contagious_disease_trigger = yes }
				}
			}
		}
	}

	#~No
	option = {
		name = dag_cdo_orgy_random.3001.b
		custom_tooltip = dag_cdo_orgy_random.3001.b.tt
		reverse_add_opinion = {
			target = scope:sex_partner
			modifier = disappointed_opinion
			opinion = -15
		}
		ai_chance = {
			base = 0
			modifier = {	
				add = 50
				NOT = { dag_cdo_wishes_to_lay_with_TARGET_trigger = { TARGET = scope:sex_partner } }
			}
		}
	}
}

#~AI guest wants to fuck the player sub event (anal)
dag_cdo_orgy_random.3002 = {
	type = character_event
	title = dag_cdo_orgy_random.3001.t
	desc = {
		desc = dag_cdo_orgy_random.3001.start.desc
		desc = dag_cdo_orgy_random.3001.middle.desc
		first_valid = {
            triggered_desc = {
                trigger = {
					#~~We are assuming player with cock wishes to be dominant, maybe rewrite this later
					scope:orgy_player = { carn_gender_can_impregnate_trigger = yes }	#~Has a cock
                }
                desc = dag_cdo_orgy_random.3002.giving.desc
            }
            desc = dag_cdo_orgy_random.3002.receiving.desc
		}
	}
	theme = dag_cdo_theme_orgy_activity
	left_portrait = {
		character = scope:sex_partner
		animation = flirtation
	}
	trigger = {
		has_game_rule = carn_fetishes_enabled
		has_game_rule = carn_content_anal_enabled
		#~scope:sex_partner set in dag_cdo_orgy_random.3000
		#~scope:orgy_player set in dag_cdo_orgy_random.3000 {This should also be root}
		scope:sex_partner = {
			carn_has_fetish_trigger = { FETISH = anal }
			dag_cdo_wishes_to_lay_with_TARGET_trigger = { TARGET = scope:orgy_player }
		}
	}
	
	weight_multiplier = {	#~Sub Event
		base = 10			#~However, the conditions are so rare we want to encourage it to fire
	}

	immediate = {
		add_character_flag = {
			flag = block_event_3000
			days = 1
		}
	}

	#~Yes - I also love this fetish
	option = {
		name = dag_cdo_orgy_random.3001.a
		trigger = {
			carn_has_fetish_trigger = { FETISH = anal }
		}
		#~ideally we would fire some sort of sex_scene here
		#~But the ones we have are a) inappropriate
		#~and B) often fuck up the is_naked flag
		#~and C) Do not match the fetish flags

		scope:orgy_player = {							#~It appears to be good practice to run this in the scope of CHARACTER_1
			carn_had_sex_with_effect = {
				CHARACTER_1 = scope:orgy_player
				CHARACTER_2 = scope:sex_partner
				C1_PREGNANCY_CHANCE = 0
				C2_PREGNANCY_CHANCE = 0
				STRESS_EFFECTS = yes
				DRAMA = yes
			}
		}
		dag_cdo_orgy_add_opinion_after_sex_effect = { PARTNER = scope:sex_partner }

		ai_chance = {
			base = 100		#~We know the ai wants anal due to the trigger
			modifier = {
				add = { 
					value = dag_cdo_ai_lasciviousness_value 	#~ +/-50
					multiply = 0.5
				}
			}
			modifier = {
				add = -500
				OR = {
					root = { has_contagious_disease_trigger = yes }
					scope:sex_partner = { has_contagious_disease_trigger = yes }
				}
			}
		}
	}
	
	#~Yes - I will try anything once ( term and conditions apply )
	option = {
		name = dag_cdo_orgy_random.3001.a
		trigger = {
			NOT = { carn_has_fetish_trigger = { FETISH = anal } }
		}
		#~ideally we would fire some sort of sex_scene here
		#~But the ones we have are a) inappropriate
		#~and B) often fuck up the is_naked flag
		#~C) Do not match the fetish flags

		scope:orgy_player = {							#~It appears to be good practice to run this in the scope of CHARACTER_1
			carn_had_sex_with_effect = {
				CHARACTER_1 = scope:orgy_player
				CHARACTER_2 = scope:sex_partner
				C1_PREGNANCY_CHANCE = 0
				C2_PREGNANCY_CHANCE = 0
				STRESS_EFFECTS = yes
				DRAMA = yes
			}
		}
		dag_cdo_orgy_add_opinion_after_sex_effect = { PARTNER = scope:sex_partner }
		random = {
			chance = 20
			carn_give_deviant_secret_or_trait_no_fetish_effect = yes
			carn_add_fetish_effect = { FETISH = anal }
		}
		ai_chance = {
			base = 50
			modifier = {
				add = {
					value = dag_cdo_ai_lasciviousness_value 	#~ +/-50
					multiply = 0.5
				}
			}
			modifier = {
				add = -500
				OR = {
					root = { has_contagious_disease_trigger = yes }
					scope:sex_partner = { has_contagious_disease_trigger = yes }
				}
			}
		}
	}
	#~No
	option = {
		name = dag_cdo_orgy_random.3001.b
		custom_tooltip = dag_cdo_orgy_random.3001.b.tt
		reverse_add_opinion = {
			target = scope:sex_partner
			modifier = disappointed_opinion
			opinion = -15
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 50
				NOT = { dag_cdo_wishes_to_lay_with_TARGET_trigger = { TARGET = scope:sex_partner } }
			}
		}
	}
}

#~AI guest wants to fuck the player sub event (watersports)
dag_cdo_orgy_random.3006 = {
	type = character_event
	title = dag_cdo_orgy_random.3001.t
	desc = {
		desc = dag_cdo_orgy_random.3001.start.desc
		desc = dag_cdo_orgy_random.3001.middle.desc
		first_valid = {
            triggered_desc = {
                trigger = {
					#~~We are assuming player with cock wishes to be dominant, maybe rewrite this later
					scope:orgy_player = { carn_gender_can_impregnate_trigger = yes }	#~Has a cock
                }
                desc = dag_cdo_orgy_random.3006.giving.desc
            }
            desc = dag_cdo_orgy_random.3006.receiving.desc
		}
	}
	theme = dag_cdo_theme_orgy_activity
	left_portrait = {
		character = scope:sex_partner
		animation = flirtation
	}
	trigger = {
		has_game_rule = carn_fetishes_enabled
		has_game_rule = carn_content_watersports_enabled
		#~scope:sex_partner set in dag_cdo_orgy_random.3000
		#~scope:orgy_player set in dag_cdo_orgy_random.3000 {This should also be root}
		scope:sex_partner = {
			carn_has_fetish_trigger = { FETISH = watersports }
			dag_cdo_wishes_to_lay_with_TARGET_trigger = { TARGET = scope:orgy_player }
		}
	}
	
	weight_multiplier = {	#~Sub Event
		base = 10			#~However, the conditions are so rare we want to encourage it to fire
	}

	immediate = {
		add_character_flag = {
			flag = block_event_3000
			days = 1
		}
	}

	#~Yes - I also love this fetish
	option = {
		name = dag_cdo_orgy_random.3001.a
		trigger = {
			carn_has_fetish_trigger = { FETISH = watersports }
		}
		#~ideally we would fire some sort of sex_scene here
		#~But the ones we have are a) inappropriate
		#~and B) often fuck up the is_naked flag
		#~and C) Do not match the fetish flags

		scope:orgy_player = {							#~It appears to be good practice to run this in the scope of CHARACTER_1
			carn_had_sex_with_effect = {
				CHARACTER_1 = scope:orgy_player
				CHARACTER_2 = scope:sex_partner
				C1_PREGNANCY_CHANCE = 0
				C2_PREGNANCY_CHANCE = 0
				STRESS_EFFECTS = yes
				DRAMA = yes
			}
		}
		dag_cdo_orgy_add_opinion_after_sex_effect = { PARTNER = scope:sex_partner }

		ai_chance = {
			base = 100		#~We know the ai wants watersports due to the trigger
			modifier = {
				add = { 
					value = dag_cdo_ai_lasciviousness_value 	#~ +/-50
					multiply = 0.5
				}
			}
			modifier = {
				add = -500
				OR = {
					root = { has_contagious_disease_trigger = yes }
					scope:sex_partner = { has_contagious_disease_trigger = yes }
				}
			}
		}
	}
	
	#~Yes - I will try anything once ( term and conditions apply )
	option = {
		name = dag_cdo_orgy_random.3001.a
		trigger = {
			NOT = { carn_has_fetish_trigger = { FETISH = watersports } }
		}
		#~ideally we would fire some sort of sex_scene here
		#~But the ones we have are a) inappropriate
		#~and B) often fuck up the is_naked flag
		#~C) Do not match the fetish flags

		scope:orgy_player = {							#~It appears to be good practice to run this in the scope of CHARACTER_1
			carn_had_sex_with_effect = {
				CHARACTER_1 = scope:orgy_player
				CHARACTER_2 = scope:sex_partner
				C1_PREGNANCY_CHANCE = 0
				C2_PREGNANCY_CHANCE = 0
				STRESS_EFFECTS = yes
				DRAMA = yes
			}
		}
		dag_cdo_orgy_add_opinion_after_sex_effect = { PARTNER = scope:sex_partner }
		random = {
			chance = 20
			carn_give_deviant_secret_or_trait_no_fetish_effect = yes
			carn_add_fetish_effect = { FETISH = watersports }
		}
		ai_chance = {
			base = 50
			modifier = {
				add = {
					value = dag_cdo_ai_lasciviousness_value 	#~ +/-50
					multiply = 0.5
				}
			}
			modifier = {
				add = -500
				OR = {
					root = { has_contagious_disease_trigger = yes }
					scope:sex_partner = { has_contagious_disease_trigger = yes }
				}
			}
		}
	}
	#~No
	option = {
		name = dag_cdo_orgy_random.3001.b
		custom_tooltip = dag_cdo_orgy_random.3001.b.tt
		reverse_add_opinion = {
			target = scope:sex_partner
			modifier = disappointed_opinion
			opinion = -15
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 50
				NOT = { dag_cdo_wishes_to_lay_with_TARGET_trigger = { TARGET = scope:sex_partner } }
			}
		}
	}
}
