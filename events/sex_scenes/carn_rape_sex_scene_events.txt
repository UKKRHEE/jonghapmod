namespace = carn_sex_scene

# 0003. Generic noncon scene (dom)
# 0004. Generic noncon scene (sub)

##########################################################################
# Example noncon scene (dom)
##########################################################################
carn_sex_scene.0003 = {
	type = character_event
	title = carn_sex_scene.0003.t
	desc = {
		desc = carn_sex_scene.0003.desc_opening
		desc = carn_sex_scene.0003.desc_ending
	}
	
	theme = prison
	left_portrait = {
		character = scope:carn_sex_player
		animation = schadenfreude
	}
	right_portrait = {
		character = scope:carn_sex_target
		animation = shock
	}

	trigger = {
		carn_sex_scene_is_noncon = yes
		carn_sex_scene_is_dom_player = yes
		carn_sex_scene_matches_requested_flags_trigger = yes
	}
	left_portrait = {
		character = scope:carn_sex_player
		
		##########################################################################
		# Triggered animation trigger ensures the animation only plays for characters 11 and older
		# The reason for this is obvious, and animations won't work by design for those under 11 even if you remove the trigger
		# Triggered animations work by finding the first valid triggered animation, top to bottom
		# In this case sex_missionary is just the most recently made animation, and proobably the best in my opinon
		# I tried to make a animation that rotates through all the animations called sex_rotation but it doesn't work
		# I suspect that event animations won't cycle through multiple states like idle animations do
		# The first triggered animation plays if it is a heterosexual couple
		##########################################################################
		
		triggered_animation = {
			trigger = {
				scope:carn_sex_player = { sex_opposite_of = scope:carn_sex_target }
				scope:carn_sex_player.age >= 11
				scope:carn_sex_target.age >= 11
			}
			animation = sex_missionary
		}
		
		##########################################################################
		# Second triggered animation plays if the characters are both male
		# sex_missionary is also the primary sex animation for gay men who are penetrating
		# The only difference is that the male being penetrated has to use hom_sex
		##########################################################################

		triggered_animation = {
			trigger = {
				scope:carn_sex_player = { is_male = yes }
				scope:carn_sex_target = { is_male = yes }
				scope:carn_sex_player.age >= 11
				scope:carn_sex_target.age >= 11
			}
			animation = sex_missionary
		}
		
		##########################################################################
		# Third triggered animation plays if the characters are both female
		# For Female Characters hom_sex and hom_sex_2 is a scissoring animation (which is really hard to animate)
		# In any lesbian sex animation you need to have one character using hom_sex and the other using hom_sex_2
		# Otherwise both will simply overlap each other
		##########################################################################
		
		triggered_animation = {
			trigger = {
				scope:carn_sex_player = { is_female = yes }
				scope:carn_sex_target = { is_female = yes }
				scope:carn_sex_player.age >= 11
				scope:carn_sex_target.age >= 11
			}
			animation = hom_sex_2
		}
		
		##########################################################################
		# Final triggered animation is a fallback animation if one or both character is under 11
		# This is necessary since by default the game defines 16 as adult for gameplay
		##########################################################################
		
		triggered_animation = {
			trigger = {
				scope:carn_sex_player = { is_adult = yes }
				scope:carn_sex_target = { is_adult = yes }
			}
			animation = flirtation
		}
		
		##########################################################################
		# Outfit tags I added so that characters in events aren't wearing clothes
		# Self explanatory, no_cloak removes cloaks and furs, no_hat removes headgear, no_pants removes any legwear, topless removes primary outfit
		# Doesn't need to be triggered since characters who are 16 an 17 will simply be in their bedchamber outfit
		##########################################################################
		
		outfit_tags = { no_cloak no_hat no_pants topless }
	}
	
	right_portrait = {
		character = scope:carn_sex_target
		
		##########################################################################
		# First triggered animation, if opposite sex couple it plays the corresponding animation for the opposite gender
		##########################################################################
		
		triggered_animation = {
			trigger = {
				scope:carn_sex_player = { sex_opposite_of = scope:carn_sex_target }
				scope:carn_sex_player.age >= 11
				scope:carn_sex_target.age >= 11
			}
			animation = sex_missionary
		}
		
		##########################################################################
		# Second triggered animation, if same sex couple it plays the corresponding animation
		# If it is a same sex male couple the correspoonding same sex animation to sex_missionary is hom_sex
		# If it is a same sex female couple the correspoonding same sex animation to hom_sex_2 is also hom_sex
		# Therefore only one triggered animation is required for both in this case
		##########################################################################
		
		triggered_animation = {
			trigger = {
				scope:carn_sex_player = { sex_same_as = scope:carn_sex_target }
				scope:carn_sex_player.age >= 11
				scope:carn_sex_target.age >= 11
			}
			animation = hom_sex
		}
		
		##########################################################################
		# Fallback Animation
		##########################################################################
		
		triggered_animation = {
			trigger = {
				scope:carn_sex_player = { is_adult = yes }
				scope:carn_sex_target = { is_adult = yes }
			}
			animation = flirtation_left
		}
		outfit_tags = { no_cloak no_hat no_pants topless }
	}

	trigger = {

		##########################################################################
		# Use triggers to list flags for your sex scene. See scripted_triggers/carn_sex_scene_triggers.txt for a list of triggers.
		##########################################################################

				scope:carn_sex_player.age >= 11
				scope:carn_sex_target.age >= 11

		carn_sex_scene_is_consensual = yes

		##########################################################################
		# Once you are done listing flags, make sure you include this trigger
		##########################################################################

		carn_sex_scene_matches_requested_flags_trigger = yes

		##########################################################################
		# Finally, you should check anything else that is relevant for the event.
		# For example, if your event is from the perspective of a male character penetrating a female target, you should make sure that scope:carn_sex_player is male and scope:carn_sex_target is female.
		##########################################################################
	}

	immediate = {

		##########################################################################
		# Copy and paste the flags for your event in the immediate block as well.
		# This will let carn_on_sex events firing from this event know what flags it had.
		##########################################################################

		##########################################################################
		# This block is limited to scope:carn_sex_player.age >= 11 (and target) so that it only applies to characters over 11
		# This prevents having the viewpoint for sex animations being applied to non-sex animations
		# The expression counts the number of sex animation events triggered by setting the variable if the variable is set or adding 1 if it is not
		##########################################################################

		if = {
			limit = {
				scope:carn_sex_player.age >= 11
				scope:carn_sex_target.age >= 11
				Not = { exists = global_var:sex_animation_event }
			}
			set_global_variable = {
				name = sex_animation_event
				value = 1
			}
		}
		else_if = {
			limit = {
				scope:carn_sex_player.age >= 11
				scope:carn_sex_target.age >= 11
				exists = global_var:sex_animation_event
			}
			change_global_variable = {
				name = sex_animation_event
				add = 1
			}
		}

		carn_sex_scene_is_consensual = yes

		##########################################################################
		# Don't forget to include carn_had_sex_with_effect
		# pregnancy_chance can be changed to any value between 0 and 100
		# DO NOT CHANGE THE OTHER VARIABLES
		##########################################################################
		
		scope:carn_sex_player  = {
			carn_had_sex_with_effect = {
				CHARACTER_1 = scope:carn_sex_player
				CHARACTER_2 = scope:carn_sex_target
				C1_PREGNANCY_CHANCE = pregnancy_chance
				C2_PREGNANCY_CHANCE = pregnancy_chance
				STRESS_EFFECTS = scope:carn_sex_stress_effects
				DRAMA = scope:carn_sex_drama
			}
		}

		##########################################################################
		# carn_had_sex_with_effect will trigger the on_action "carn_on_sex," where you can add events to fire.
		# To check the flags of the sex scene, you can use triggers such as "carn_sex_scene_was_vaginal = yes"
		##########################################################################
	}

	immediate = {
		carn_sex_scene_is_noncon = yes
		carn_sex_scene_is_dom_player = yes

		carn_had_sex_with_effect = {
			CHARACTER_1 = scope:carn_sex_player
			CHARACTER_2 = scope:carn_sex_target
			C1_PREGNANCY_CHANCE = pregnancy_chance
			C2_PREGNANCY_CHANCE = pregnancy_chance
			STRESS_EFFECTS = scope:carn_sex_stress_effects
			DRAMA = scope:carn_sex_drama
		}

		scope:carn_sex_target = {
			carn_undress_character_effect = yes
		}
	}

	option = {
		name = carn_sex_scene.0003.a
	}

	after = {
		scope:carn_sex_target = {
			carn_dress_character_effect = yes
			if = {
				limit = {
					is_female = yes
					age >= 11
					NOT = { 
						has_trait = pregnant
						}
				}
				make_pregnant = { father = scope:carn_sex_player number_of_children = 1 }
			}
		}
	}
}

##########################################################################
# Example noncon scene (sub)
##########################################################################
carn_sex_scene.0004 = {
	type = character_event
	title = carn_sex_scene.0004.t
	desc = {
		desc = carn_sex_scene.0004.desc_opening
		desc = carn_sex_scene.0004.desc_ending
	}
	
	theme = prison
	left_portrait = {
		character = scope:carn_sex_player
		animation = shock
	}
	right_portrait = {
		character = scope:carn_sex_target
		animation = schadenfreude
	}

	trigger = {
		carn_sex_scene_is_noncon = yes
		carn_sex_scene_is_sub_player = yes
		carn_sex_scene_matches_requested_flags_trigger = yes
	}

	immediate = {
		carn_sex_scene_is_noncon = yes
		carn_sex_scene_is_sub_player = yes

		carn_had_sex_with_effect = {
			CHARACTER_1 = scope:carn_sex_player
			CHARACTER_2 = scope:carn_sex_target
			C1_PREGNANCY_CHANCE = pregnancy_chance
			C2_PREGNANCY_CHANCE = pregnancy_chance
			STRESS_EFFECTS = scope:carn_sex_stress_effects
			DRAMA = scope:carn_sex_drama
		}

		if = {
			limit = {
				exists = scope:carn_rape_victim
			}
			show_as_tooltip = {
				carn_rape_victim_stress_effect = yes
			}
		}

		scope:carn_sex_player = {
			carn_undress_character_effect = yes
		}
	}

	option = {
		name = {
			trigger = {
				NOT = {
					carn_has_fetish_trigger = {
						FETISH = being_raped
					}
				}
			}
			text = carn_sex_scene.0004.a
		}

		name = {
			trigger = {
				carn_has_fetish_trigger = {
					FETISH = being_raped
				}
			}
			text = carn_sex_scene.0004.a.being_raped_fetish
		}
	}

	after = {
		scope:carn_sex_player = {
			carn_dress_character_effect = yes
		}
	}
}
