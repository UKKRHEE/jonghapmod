namespace = dag_cdo_demand_sex_interaction_event

scripted_trigger dag_cdo_demand_sex_interaction_event_happy_trigger = {
	dag_cdo_wishes_to_lay_with_TARGET_trigger = { TARGET = scope:actor }
	dag_cdo_may_sleep_around_trigger = yes
}

scripted_trigger dag_cdo_demand_sex_interaction_event_unhappy_trigger = {
	NOT = { dag_cdo_wishes_to_lay_with_TARGET_trigger = { TARGET = scope:actor } }
	dag_cdo_may_sleep_around_trigger = no
}

#####################
# Demand Sex: Recipient Arrives
# by Dagulus
# 0001
# Tag: missing_ai_weights
#####################

#~We may be able to reuse this if we work out a good system for a Jus Primae Noctis

dag_cdo_demand_sex_interaction_event.0001 = {
	type = character_event
	title = dag_cdo_demand_sex_interaction_event.0001.t
	desc = {
		desc = dag_cdo_demand_sex_interaction_event.0001.start.desc
		first_valid = {
			triggered_desc = {
				trigger = { exists = scope:recipient_happy }
				desc = dag_cdo_demand_sex_interaction_event.0001.happy.desc
			}
			triggered_desc = {
				trigger = { exists = scope:recipient_unhappy }
				desc = dag_cdo_demand_sex_interaction_event.0001.unhappy.desc
			}
			desc = dag_cdo_demand_sex_interaction_event.0001.neutral.desc
		}
		desc = dag_cdo_demand_sex_interaction_event.0001.end.desc
	}
	theme = intrigue
	override_background = {
		event_background = courtyard
	}
	left_portrait = {
		character = scope:recipient
		#~animation = depends on their mood
		triggered_animation = {
			trigger = { exists = scope:recipient_happy }
			animation = flirtation
		}
		triggered_animation = {
			trigger = { exists = scope:recipient_unhappy }
			animation = shame
		}
		triggered_animation = {
			trigger = { always = yes }
			animation = disgust
		}
	}

	immediate = {
		if = {
			limit = {
				scope:recipient = { dag_cdo_demand_sex_interaction_event_happy_trigger = yes }
			}
			save_scope_value_as = {
				name = recipient_happy
				value = yes
			}
		}
		else_if = {
			limit = {
				scope:recipient = { dag_cdo_demand_sex_interaction_event_unhappy_trigger = yes }				
			}
			save_scope_value_as = {
				name = recipient_unhappy
				value = yes
			}
		}
	}

	#~Option A: Fuck them
	option = {
		name = dag_cdo_demand_sex_interaction_event.0001.a
		scope:actor = {
			dag_cdo_pressured_sex_effect = {
				PLAYER = scope:actor
				TARGET = scope:recipient
			}
			dag_cdo_cuckold_targets_spouse_effect = { TARGET = scope:recipient }
			if = {
				limit = { exists = scope:recipient_happy }
				progress_towards_lover_effect = {
					CHARACTER = scope:recipient
					OPINION = 10
				}
			}
			else_if = {
				limit = { exists = scope:recipient_unhappy }
				reverse_add_opinion = {
					modifier = dag_cdo_pressured_me_to_have_sex_opinion
					target = scope:recipient
					opinion = -40
				}
			}
			else = {
				reverse_add_opinion = {
					modifier = dag_cdo_pressured_me_to_have_sex_opinion
					target = scope:recipient
					opinion = -20
				}
			}
		}
	}

	#~Option B: Do not fuck them
	option = {
		name = dag_cdo_demand_sex_interaction_event.0001.b
		scope:actor = {
			if = {
				limit = { exists = scope:recipient_happy }
				reverse_add_opinion = {
					target = scope:recipient
					modifier = disappointed_opinion
					opinion = -10
				}
			}
			stress_impact = {
				lustful = medium_stress_impact_gain
			}
		}
	}
}



#Demand Sex Rejected
dag_cdo_demand_sex_interaction_event.1031 = {
	type = letter_event
	opening = {
		desc = dag_cdo_demand_sex_interaction_event.1031.opening
	}
	desc = dag_cdo_demand_sex_interaction_event.1031.desc
	sender = {
		character = scope:recipient
		animation = dismissal
	}

	immediate = {
		show_as_tooltip = {
			scope:recipient = {
				add_opinion = {
					target = scope:actor
					modifier = dag_cdo_attempted_pressured_sex_opinion
					years = 10
				}
				if = { 
					limit = { NOT = { has_relation_rival = scope:actor } }
					progress_towards_rival_effect = {
						CHARACTER = scope:actor
						OPINION = no
					}
				}
			}
		}
	}

	option = {
		name = dag_cdo_demand_sex_interaction_event.1031.strong_negative
	}
}







